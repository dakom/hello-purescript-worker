{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./output/Data.Unit/index.js","webpack:///./output/Data.Functor/index.js","webpack:///./output/Data.Symbol/index.js","webpack:///./output/Data.Ring/index.js","webpack:///./output/Record.Unsafe/index.js","webpack:///./output/Type.Data.RowList/index.js","webpack:///./output/Data.Semiring/index.js","webpack:///./output/Control.Apply/index.js","webpack:///./output/Data.Eq/index.js","webpack:///./output/Data.Function/index.js","webpack:///./output/Control.Category/index.js","webpack:///./output/Data.Ord/index.js","webpack:///./output/Data.Ordering/index.js","webpack:///./output/Data.Semigroup/index.js","webpack:///./output/Control.Applicative/index.js","webpack:///./output/Data.EuclideanRing/index.js","webpack:///./output/Data.Show/index.js","webpack:///./output/Data.HeytingAlgebra/index.js","webpack:///./output/Data.Void/index.js","webpack:///./output/Control.Semigroupoid/index.js","webpack:///./output/Control.Alt/index.js","webpack:///./output/Control.Bind/index.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./output/Data.CommutativeRing/index.js","webpack:///./output/Data.Boolean/index.js","webpack:///./output/Control.Plus/index.js","webpack:///./output/Control.Monad/index.js","webpack:///./output/Prelude/index.js","webpack:///./node_modules/sanctuary-type-classes/index.js","webpack:///./node_modules/sanctuary-type-classes/node_modules/sanctuary-type-identifiers/index.js","webpack:///./node_modules/sanctuary-type-identifiers/index.js","webpack:///./src/app/io/types/Worker-Types.ts","webpack:///./output/Data.BooleanAlgebra/index.js","webpack:///./output/Type.Data.Row/index.js","webpack:///./output/Control.Alternative/index.js","webpack:///./output/Data.Bounded/index.js","webpack:///./output/Data.Monoid/index.js","webpack:///./output/Data.DivisionRing/index.js","webpack:///./src/app/Worker.ts","webpack:///./src/app/io/utils/Utils.ts","webpack:///./src/app/io/utils/flags/Flags.ts","webpack:///./src/app/io/utils/worker/Worker-Loader.ts","webpack:///./node_modules/fluture/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/inspect-f/index.js","webpack:///./node_modules/denque/index.js","webpack:///./node_modules/concurrify/index.js","webpack:///./src/app/io/utils/datatypes/Maybe.ts","webpack:///./output/Main/index.js","webpack:///./output/Data.EuclideanRing/foreign.js","webpack:///./output/Data.HeytingAlgebra/foreign.js","webpack:///./output/Data.Symbol/foreign.js","webpack:///./output/Data.Unit/foreign.js","webpack:///./output/Data.Show/foreign.js","webpack:///./output/Record.Unsafe/foreign.js","webpack:///./output/Data.Ring/foreign.js","webpack:///./output/Data.Semiring/foreign.js","webpack:///./output/Data.Eq/foreign.js","webpack:///./output/Data.Ord/foreign.js","webpack:///./output/Data.Ord.Unsafe/index.js","webpack:///./output/Data.Ord.Unsafe/foreign.js","webpack:///./output/Data.Semigroup/foreign.js","webpack:///./output/Data.Maybe/index.js","webpack:///./output/Data.Functor/foreign.js","webpack:///./output/Control.Apply/foreign.js","webpack:///./output/Control.Bind/foreign.js","webpack:///./output/Control.Extend/index.js","webpack:///./output/Control.Extend/foreign.js","webpack:///./output/Control.MonadZero/index.js","webpack:///./output/Data.Bounded/foreign.js","webpack:///./output/Data.Functor.Invariant/index.js","webpack:///./output/Data.Field/index.js","webpack:///./output/Data.NaturalTransformation/index.js","webpack:///./output/Data.Number.Format/index.js","webpack:///./output/Data.Number.Format/foreign.js","webpack:///./output/Math/index.js","webpack:///./output/Math/foreign.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","$foreign","showUnit","Show","v","unit","Control_Semigroupoid","Data_Function","Data_Unit","Functor","map","this","dict","functorFn","compose","semigroupoidFn","functorArray","arrayMap","mapFlipped","dictFunctor","fa","f","void","const","voidRight","x","voidLeft","flap","ff","SProxy","IsSymbol","reflectSymbol","reifySymbol","unsafeCoerce","dictIsSymbol","Data_Semiring","Data_Symbol","Record_Unsafe","Type_Data_RowList","Ring","Semiring0","sub","RingRecord","SemiringRecord0","subRecord","ringUnit","semiringUnit","v1","ringRecordNil","semiringRecordNil","v2","ringNumber","semiringNumber","numSub","ringInt","semiringInt","intSub","negate","dictRing","a","zero","ringFn","semiringFn","g","ringRecord","dictRowToList","dictRingRecord","semiringRecord","RLProxy","ringRecordCons","dictCons","semiringRecordCons","ra","rb","tail","insert","unsafeSet","unsafeGet","unsafeHas","unsafeDelete","Type_Data_Row","Semiring","add","mul","one","SemiringRecord","addRecord","mulRecord","oneRecord","zeroRecord","numAdd","numMul","intAdd","intMul","dictSemiring","dictSemiringRecord","RProxy","Control_Category","Data_Functor","Apply","Functor0","apply","applyFn","applyArray","arrayApply","applyFirst","dictApply","b","applySecond","identity","categoryFn","lift2","lift3","lift4","lift5","e","Eq","eq","Eq1","eq1","EqRecord","eqRecord","eqVoid","eqUnit","eqString","refEq","eqRowNil","eqNumber","eqInt","eqChar","eqBoolean","eqArray","dictEq","eqArrayImpl","eq1Array","notEq","y","notEq1","dictEq1","eqRec","dictEqRecord","eqRowCons","Data_Boolean","flip","applyFlipped","applyN","$copy_n","$copy_acc","$tco_result","$tco_var_n","$tco_done","$tco_loop","acc","otherwise","Error","constructor","on","Category","Semigroupoid0","Data_Eq","Data_Ord_Unsafe","Data_Ordering","Data_Ring","Ord","Eq0","compare","Ord1","Eq10","compare1","ordVoid","EQ","ordUnit","ordString","unsafeCompare","ordOrdering","eqOrdering","LT","GT","ordNumber","ordInt","ordChar","ordBoolean","greaterThan","dictOrd","a1","a2","greaterThanOrEq","lessThan","max","min","ordArray","toDelta","xs","ys","ordArrayImpl","ord1Array","lessThanOrEq","comparing","clamp","low","hi","between","abs","signum","Data_Semigroup","Data_Show","showOrdering","semigroupOrdering","Semigroup","invert","Data_Void","append","SemigroupRecord","appendRecord","semigroupVoid","absurd","semigroupUnit","semigroupString","concatString","semigroupRecordNil","semigroupArray","concatArray","semigroupFn","dictSemigroup","semigroupRecord","dictSemigroupRecord","semigroupRecordCons","Control_Apply","Applicative","Apply0","pure","applicativeFn","applicativeArray","liftA1","dictApplicative","unless","when","Data_CommutativeRing","EuclideanRing","CommutativeRing0","degree","div","mod","gcd","$copy_dictEq","$copy_dictEuclideanRing","$copy_a","$copy_b","$tco_var_dictEq","$tco_var_dictEuclideanRing","$tco_var_a","dictEuclideanRing","Ring0","euclideanRingNumber","commutativeRingNumber","numDiv","euclideanRingInt","commutativeRingInt","intDegree","intDiv","intMod","lcm","show","ShowRecordFields","showRecordFields","showString","showStringImpl","showRecordFieldsNil","showNumber","showNumberImpl","showInt","showIntImpl","showChar","showCharImpl","showBoolean","showArray","dictShow","showArrayImpl","showRecord","dictShowRecordFields","record","length","join","showRecordFieldsCons","focus","cons","HeytingAlgebra","conj","disj","implies","not","tt","HeytingAlgebraRecord","conjRecord","disjRecord","ffRecord","impliesRecord","notRecord","ttRecord","heytingAlgebraUnit","heytingAlgebraRecordNil","heytingAlgebraBoolean","boolConj","boolDisj","boolNot","heytingAlgebraFunction","dictHeytingAlgebra","heytingAlgebraRecord","dictHeytingAlgebraRecord","heytingAlgebraRecordCons","row","$copy_v","showVoid","Semigroupoid","composeFlipped","dictSemigroupoid","Alt","alt","altArray","Bind","Discard","discard","bindFn","bindArray","arrayBind","bindFlipped","dictBind","discardUnit","composeKleisli","composeKleisliFlipped","ifM","cond","cond$prime","__webpack_amd_options__","CommutativeRing","CommutativeRingRecord","RingRecord0","commutativeRingUnit","commutativeRingRecordNil","commutativeRingFn","dictCommutativeRing","commutativeRingRecord","dictCommutativeRingRecord","commutativeRingRecordCons","Control_Alt","Plus","Alt0","empty","plusArray","Control_Applicative","Control_Bind","Monad","Applicative0","Bind1","monadFn","monadArray","liftM1","dictMonad","ap","whenM","mb","unlessM","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","self","sanctuaryTypeClasses","sanctuaryTypeIdentifiers","type","__doctest","require","List","Maybe","Nil","Cons","Nothing","Just","concat_","concat","constant","forEachKey","strMap","keys","forEach","has","k","pair","sameType","iterationNext","done","iterationDone","TypeClass","url","dependencies","test","every","Constructor","Value","_funcPath","allowInheritedProps","path","_x","idx","funcPath","implPath","implementations","functionName","match","exec","$","_name","requirements","getBoundMethod","typeRep","typeClass","arg","methods","reduce","Setoid","equals","lte","id","Monoid","Group","Filterable","filter","Bifunctor","bimap","Profunctor","promap","of","Chain","chain","ChainRec","chainRec","Alternative","Foldable","Traversable","traverse","Extend","extend","Comonad","extract","Contravariant","contramap","Array$of","Array$prototype$equals","other","Array$prototype$lte","Array$prototype$concat","Object$prototype$concat","result","assign","Null","toString","fantasy-land/equals","fantasy-land/lte","Undefined","Boolean","valueOf","Number","isNaN","Date","NaN","toISOString","RegExp","source","global","ignoreCase","multiline","sticky","unicode","String","fantasy-land/empty","JSON","stringify","fantasy-land/concat","Array","fantasy-land/of","fantasy-land/chainRec","nil","todo","head","more","steps","step","push","fantasy-land/zero","reprs","sort","fantasy-land/filter","pred","fantasy-land/map","fantasy-land/ap","fs","idx2","fantasy-land/chain","fantasy-land/alt","fantasy-land/reduce","initial","fantasy-land/traverse","go","Math","floor","fantasy-land/extend","_","slice","Arguments","message","theseKeys","otherKeys","shift","z","applicative","singleton","Function","fantasy-land/id","fantasy-land/compose","semigroupoid","functor","fantasy-land/promap","profunctor","fantasy-land/contramap","contravariant","$seen","method","pop","indexOf","xType","err","$pairs","some","lt","filterable","bifunctor","applyF","applyX","chain_","foldable","sortBy","rs","fx","lte_","isArray","F","traversable","extend_","gt","gte","group","reject","mapLeft","apFirst","apSecond","prepend","size","elem","foldMap","monoid","reverse","takeWhile","take","dropWhile","sequence","duplicate","comonad","$$type","pattern","parse","groups","namespace","version","MESSAGE","WorkerLoaderCommand","INIT","READY","WorkerCommand","TICK","RENDER","Data_HeytingAlgebra","BooleanAlgebra","HeytingAlgebra0","BooleanAlgebraRecord","HeytingAlgebraRecord0","booleanAlgebraUnit","booleanAlgebraRecordNil","booleanAlgebraBoolean","booleanAlgebraFn","dictBooleanAlgebra","booleanAlgebraRecord","dictBooleanAlgebraRecord","booleanAlgebraRecordCons","Control_Plus","Plus1","alternativeArray","Data_Ord","Bounded","Ord0","bottom","top","boundedUnit","boundedOrdering","boundedNumber","bottomNumber","topNumber","boundedInt","bottomInt","topInt","boundedChar","bottomChar","topChar","boundedBoolean","Data_EuclideanRing","Semigroup0","mempty","MonoidRecord","SemigroupRecord0","memptyRecord","monoidUnit","monoidString","monoidRecordNil","monoidOrdering","monoidArray","power","dictMonoid","x$prime","guard","monoidFn","monoidRecord","dictMonoidRecord","monoidRecordCons","DivisionRing","recip","divisionringNumber","leftDiv","dictDivisionRing","rightDiv","Utils_1","Worker_Types_1","index_1","initWorker","fork","console","error","worker","state","addEventListener","data","cmd","getInitialState","frameTs","updateState","postMessage","__export","getCompileFlags","buildMode","buildVersion","isProduction","fluture_1","loadWorker","Future","resolve","onInitial","removeEventListener","factory","Z","inspectf","Denque","concurrify","scope","window","setImmediate","setTimeout","noop","moop","showf","sf","replace","partial1","arguments","partial2","partial3","immediately","FL","ordinal","typeError","TypeError","invalidArgument","it","at","expected","actual","invalidContext","invalidFuture","info","isFunction","isThenable","Promise","then","isUnsigned","Infinity","isObject","isEmpty","throwRejection","computation","Computation","isFuture","_ap","mapper","_map","lmapper","rmapper","_bimap","_chain","mapRej","_mapRej","chainRej","_chainRej","race","_race","both","_both","and","_and","or","_or","swap","_swap","fold","_fold","finally","_finally","lastly","rej","res","_fork","callback","promise","_this","isRejected","isResolved","isSettled","extractLeft","extractRight","Core","_computation","Rejected","_value","Resolved","Never","_isNever","Sequence","open","cancel","left","right","never","isNever","Eager","future","rejected","resolved","Action","run","ApAction","MapAction","BimapAction","ChainAction","MapRejAction","ChainRejAction","SwapAction","FoldAction","FinallyAction","AndAction","OrAction","RaceAction","BothAction","RaceActionState","early","BothActionState","spawn","actions","_spawn","_actions","Next","Done","_transform","action","settled","cold","queue","async","settle","unshift","warmupActions","terminator","clear","str","Undetermined","Synchronous","Asynchronous","init","_step","_init","ap$mval","mval","mfunc","alt$left","map$mapper","bimap$lmapper$rmapper","bimap$lmapper","chain$chainer","chainer","mapRej$mapper","chainRej$chainer","lastly$right","and$left","both$left","or$left","race$right","fold$f$g","fold$f","done$callback","fork$f$g","fork$f","value$cont","cont","ParallelAp","_mval","_mfunc","After$race","_time","After","time","RejectAfter","after$time","rejectAfter$time","reason","Attempt","fn","_fn","attempt","timing","drain","func","val","c1","c2","okval","okfunc","ParallelAp$rej","clearTimeout","Cold","Cached","Pending","Rejected$1","Resolved$1","_pure","reset","Encase","_a","Encase2","_b","Encase3","_c","EncaseN","EncaseN2","EncaseN$1","EncaseP","EncaseP2","EncaseP3","check$iteration","Go","generator","_generator","Hook","acquire","dispose","consume","_acquire","_dispose","_consume","hook$acquire$cleanup","cleanup","hook$acquire","Node","check$parallel","Parallel","futures","_futures","_length","_max","_state","_addToQueue","_queue","_queued","_drainQueue","_cancel","iterator","next","check$iterator","cancelAcquire","resource","cancelConsume","Hook$done","Hook$dispose","disposal","Hook$cancelConsuption","Hook$consumptionRejected","Hook$consumptionResolved","consumption","cancels","out","cursor","running","blocked","Parallel$cancel","Parallel$run","Parallel$drain","emptyArray","parallel$max","TryP","Par","isParallel","Fluture","freeze","seq","par","sequential","after","rejectAfter","try","cache","encase","encase2","encase3","encaseN","encaseN2","encaseN3","encaseP","encaseP2","encaseP3","do","hook","node","parallel","tryP","eval","RSPACE","RCODE","RTABS","REOL","isCode","line","getPadding","pad","fixIndentation","lines","indentation","paddings","depth","tabsize","find","RPAD","shown","split","array","_head","_tail","_capacityMask","_list","_fromArray","peekAt","index","len","peek","peekFront","peekBack","item","_growArray","_shrinkArray","removeOne","remove","count","removed","del_count","toArray","splice","temp","arg_len","arguments_index","leng","_copyArray","fullCopy","newArray","list","isBinary","an","Repr","INNERTYPE","OUTERTYPE","identifier","INNERNAME","OUTERNAME","Concurrently","isInner","isOuter","construct","proto","mzero","maybe","nothingFn","justFn","value0","getMaybeValue","Data_Maybe","Data_Number_Format","$$Math","updateTick","startTime","now","mTick","lastTime","deltaTime","elapsedTime","tick","yy","n1","n2","b1","b2","code","charCodeAt","ss","separator","label","rec","copy","r1","r2","xlen","ylen","unsafeCompareImpl","s1","s2","Control_Alternative","Control_Extend","Control_Monad","Control_MonadZero","Data_Bounded","Data_Functor_Invariant","Data_Monoid","semigroupMaybe","maybe$prime","isNothing","isJust","functorMaybe","invariantMaybe","Invariant","imapF","extendMaybe","eqMaybe","ordMaybe","eq1Maybe","ord1Maybe","applyMaybe","bindMaybe","applicativeMaybe","monadMaybe","altMaybe","plusMaybe","alternativeMaybe","monadZeroMaybe","MonadZero","maybe'","fromMaybe","fromMaybe'","fromJust","dictPartial","$dollar35","optional","dictAlternative","monoidMaybe","boundedMaybe","dictBounded","showMaybe","arr","j","extendArray","arrayExtend","extendFlipped","dictExtend","w","composeCoKleisli","composeCoKleisliFlipped","extendFn","w$prime","Alternative1","Monad0","monadZeroArray","dictMonadZero","fromCharCode","POSITIVE_INFINITY","NEGATIVE_INFINITY","imap","invariantArray","invariantFn","Field","DivisionRing1","EuclideanRing0","field","Precision","Fixed","Exponential","precision","$5","fixed","$6","exponential","$7","toStringWith","toPrecisionNative","toFixedNative","toExponentialNative","wrap","num","toPrecision","toFixed","toExponential","acos","asin","atan","atan2","ceil","cos","exp","log","pow","round","sin","sqrt","tan","trunc","remainder","ln2","ln10","log2e","log10e","pi","tau","sqrt1_2","sqrt2","E","LN2","LN10","LOG2E","LOG10E","PI","SQRT1_2","SQRT2"],"mappings":"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","file":"83ce16682fe81b23eda3.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 38);\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nvar Data_Show = require(\"../Data.Show/index.js\");\nvar showUnit = new Data_Show.Show(function (v) {\n    return \"unit\";\n});\nmodule.exports = {\n    showUnit: showUnit,\n    unit: $foreign.unit\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nvar Control_Semigroupoid = require(\"../Control.Semigroupoid/index.js\");\nvar Data_Function = require(\"../Data.Function/index.js\");\nvar Data_Unit = require(\"../Data.Unit/index.js\");\nvar Functor = function (map) {\n    this.map = map;\n};\nvar map = function (dict) {\n    return dict.map;\n};\nvar mapFlipped = function (dictFunctor) {\n    return function (fa) {\n        return function (f) {\n            return map(dictFunctor)(f)(fa);\n        };\n    };\n};\nvar $$void = function (dictFunctor) {\n    return map(dictFunctor)(Data_Function[\"const\"](Data_Unit.unit));\n};\nvar voidLeft = function (dictFunctor) {\n    return function (f) {\n        return function (x) {\n            return map(dictFunctor)(Data_Function[\"const\"](x))(f);\n        };\n    };\n};\nvar voidRight = function (dictFunctor) {\n    return function (x) {\n        return map(dictFunctor)(Data_Function[\"const\"](x));\n    };\n};\nvar functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));\nvar functorArray = new Functor($foreign.arrayMap);\nvar flap = function (dictFunctor) {\n    return function (ff) {\n        return function (x) {\n            return map(dictFunctor)(function (f) {\n                return f(x);\n            })(ff);\n        };\n    };\n};\nmodule.exports = {\n    Functor: Functor,\n    map: map,\n    mapFlipped: mapFlipped,\n    \"void\": $$void,\n    voidRight: voidRight,\n    voidLeft: voidLeft,\n    flap: flap,\n    functorFn: functorFn,\n    functorArray: functorArray\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nvar SProxy = (function () {\n    function SProxy() {\n\n    };\n    SProxy.value = new SProxy();\n    return SProxy;\n})();\nvar IsSymbol = function (reflectSymbol) {\n    this.reflectSymbol = reflectSymbol;\n};\nvar reifySymbol = function (s) {\n    return function (f) {\n        return $foreign.unsafeCoerce(function (dictIsSymbol) {\n            return f(dictIsSymbol);\n        })({\n            reflectSymbol: function (v) {\n                return s;\n            }\n        })(SProxy.value);\n    };\n};\nvar reflectSymbol = function (dict) {\n    return dict.reflectSymbol;\n};\nmodule.exports = {\n    IsSymbol: IsSymbol,\n    reflectSymbol: reflectSymbol,\n    reifySymbol: reifySymbol,\n    SProxy: SProxy\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nvar Data_Semiring = require(\"../Data.Semiring/index.js\");\nvar Data_Symbol = require(\"../Data.Symbol/index.js\");\nvar Data_Unit = require(\"../Data.Unit/index.js\");\nvar Record_Unsafe = require(\"../Record.Unsafe/index.js\");\nvar Type_Data_RowList = require(\"../Type.Data.RowList/index.js\");\nvar Ring = function (Semiring0, sub) {\n    this.Semiring0 = Semiring0;\n    this.sub = sub;\n};\nvar RingRecord = function (SemiringRecord0, subRecord) {\n    this.SemiringRecord0 = SemiringRecord0;\n    this.subRecord = subRecord;\n};\nvar subRecord = function (dict) {\n    return dict.subRecord;\n};\nvar sub = function (dict) {\n    return dict.sub;\n};\nvar ringUnit = new Ring(function () {\n    return Data_Semiring.semiringUnit;\n}, function (v) {\n    return function (v1) {\n        return Data_Unit.unit;\n    };\n});\nvar ringRecordNil = new RingRecord(function () {\n    return Data_Semiring.semiringRecordNil;\n}, function (v) {\n    return function (v1) {\n        return function (v2) {\n            return {};\n        };\n    };\n});\nvar ringRecordCons = function (dictIsSymbol) {\n    return function (dictCons) {\n        return function (dictRingRecord) {\n            return function (dictRing) {\n                return new RingRecord(function () {\n                    return Data_Semiring.semiringRecordCons(dictIsSymbol)(dictCons)(dictRingRecord.SemiringRecord0())(dictRing.Semiring0());\n                }, function (v) {\n                    return function (ra) {\n                        return function (rb) {\n                            var tail = subRecord(dictRingRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);\n                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);\n                            var insert = Record_Unsafe.unsafeSet(key);\n                            var get = Record_Unsafe.unsafeGet(key);\n                            return insert(sub(dictRing)(get(ra))(get(rb)))(tail);\n                        };\n                    };\n                });\n            };\n        };\n    };\n};\nvar ringRecord = function (dictRowToList) {\n    return function (dictRingRecord) {\n        return new Ring(function () {\n            return Data_Semiring.semiringRecord(dictRowToList)(dictRingRecord.SemiringRecord0());\n        }, subRecord(dictRingRecord)(Type_Data_RowList.RLProxy.value));\n    };\n};\nvar ringNumber = new Ring(function () {\n    return Data_Semiring.semiringNumber;\n}, $foreign.numSub);\nvar ringInt = new Ring(function () {\n    return Data_Semiring.semiringInt;\n}, $foreign.intSub);\nvar ringFn = function (dictRing) {\n    return new Ring(function () {\n        return Data_Semiring.semiringFn(dictRing.Semiring0());\n    }, function (f) {\n        return function (g) {\n            return function (x) {\n                return sub(dictRing)(f(x))(g(x));\n            };\n        };\n    });\n};\nvar negate = function (dictRing) {\n    return function (a) {\n        return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);\n    };\n};\nmodule.exports = {\n    Ring: Ring,\n    sub: sub,\n    negate: negate,\n    RingRecord: RingRecord,\n    subRecord: subRecord,\n    ringInt: ringInt,\n    ringNumber: ringNumber,\n    ringUnit: ringUnit,\n    ringFn: ringFn,\n    ringRecord: ringRecord,\n    ringRecordNil: ringRecordNil,\n    ringRecordCons: ringRecordCons\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nmodule.exports = {\n    unsafeHas: $foreign.unsafeHas,\n    unsafeGet: $foreign.unsafeGet,\n    unsafeSet: $foreign.unsafeSet,\n    unsafeDelete: $foreign.unsafeDelete\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar RLProxy = (function () {\n    function RLProxy() {\n\n    };\n    RLProxy.value = new RLProxy();\n    return RLProxy;\n})();\nmodule.exports = {\n    RLProxy: RLProxy\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nvar Data_Symbol = require(\"../Data.Symbol/index.js\");\nvar Data_Unit = require(\"../Data.Unit/index.js\");\nvar Record_Unsafe = require(\"../Record.Unsafe/index.js\");\nvar Type_Data_Row = require(\"../Type.Data.Row/index.js\");\nvar Type_Data_RowList = require(\"../Type.Data.RowList/index.js\");\nvar Semiring = function (add, mul, one, zero) {\n    this.add = add;\n    this.mul = mul;\n    this.one = one;\n    this.zero = zero;\n};\nvar SemiringRecord = function (addRecord, mulRecord, oneRecord, zeroRecord) {\n    this.addRecord = addRecord;\n    this.mulRecord = mulRecord;\n    this.oneRecord = oneRecord;\n    this.zeroRecord = zeroRecord;\n};\nvar zeroRecord = function (dict) {\n    return dict.zeroRecord;\n};\nvar zero = function (dict) {\n    return dict.zero;\n};\nvar semiringUnit = new Semiring(function (v) {\n    return function (v1) {\n        return Data_Unit.unit;\n    };\n}, function (v) {\n    return function (v1) {\n        return Data_Unit.unit;\n    };\n}, Data_Unit.unit, Data_Unit.unit);\nvar semiringRecordNil = new SemiringRecord(function (v) {\n    return function (v1) {\n        return function (v2) {\n            return {};\n        };\n    };\n}, function (v) {\n    return function (v1) {\n        return function (v2) {\n            return {};\n        };\n    };\n}, function (v) {\n    return function (v1) {\n        return {};\n    };\n}, function (v) {\n    return function (v1) {\n        return {};\n    };\n});\nvar semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);\nvar semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);\nvar oneRecord = function (dict) {\n    return dict.oneRecord;\n};\nvar one = function (dict) {\n    return dict.one;\n};\nvar mulRecord = function (dict) {\n    return dict.mulRecord;\n};\nvar mul = function (dict) {\n    return dict.mul;\n};\nvar addRecord = function (dict) {\n    return dict.addRecord;\n};\nvar semiringRecord = function (dictRowToList) {\n    return function (dictSemiringRecord) {\n        return new Semiring(addRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value), mulRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value), oneRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value), zeroRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value));\n    };\n};\nvar add = function (dict) {\n    return dict.add;\n};\nvar semiringFn = function (dictSemiring) {\n    return new Semiring(function (f) {\n        return function (g) {\n            return function (x) {\n                return add(dictSemiring)(f(x))(g(x));\n            };\n        };\n    }, function (f) {\n        return function (g) {\n            return function (x) {\n                return mul(dictSemiring)(f(x))(g(x));\n            };\n        };\n    }, function (v) {\n        return one(dictSemiring);\n    }, function (v) {\n        return zero(dictSemiring);\n    });\n};\nvar semiringRecordCons = function (dictIsSymbol) {\n    return function (dictCons) {\n        return function (dictSemiringRecord) {\n            return function (dictSemiring) {\n                return new SemiringRecord(function (v) {\n                    return function (ra) {\n                        return function (rb) {\n                            var tail = addRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);\n                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);\n                            var insert = Record_Unsafe.unsafeSet(key);\n                            var get = Record_Unsafe.unsafeGet(key);\n                            return insert(add(dictSemiring)(get(ra))(get(rb)))(tail);\n                        };\n                    };\n                }, function (v) {\n                    return function (ra) {\n                        return function (rb) {\n                            var tail = mulRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);\n                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);\n                            var insert = Record_Unsafe.unsafeSet(key);\n                            var get = Record_Unsafe.unsafeGet(key);\n                            return insert(mul(dictSemiring)(get(ra))(get(rb)))(tail);\n                        };\n                    };\n                }, function (v) {\n                    return function (v1) {\n                        var tail = oneRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value);\n                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);\n                        var insert = Record_Unsafe.unsafeSet(key);\n                        return insert(one(dictSemiring))(tail);\n                    };\n                }, function (v) {\n                    return function (v1) {\n                        var tail = zeroRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value);\n                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);\n                        var insert = Record_Unsafe.unsafeSet(key);\n                        return insert(zero(dictSemiring))(tail);\n                    };\n                });\n            };\n        };\n    };\n};\nmodule.exports = {\n    Semiring: Semiring,\n    add: add,\n    zero: zero,\n    mul: mul,\n    one: one,\n    SemiringRecord: SemiringRecord,\n    addRecord: addRecord,\n    mulRecord: mulRecord,\n    oneRecord: oneRecord,\n    zeroRecord: zeroRecord,\n    semiringInt: semiringInt,\n    semiringNumber: semiringNumber,\n    semiringFn: semiringFn,\n    semiringUnit: semiringUnit,\n    semiringRecord: semiringRecord,\n    semiringRecordNil: semiringRecordNil,\n    semiringRecordCons: semiringRecordCons\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nvar Control_Category = require(\"../Control.Category/index.js\");\nvar Data_Function = require(\"../Data.Function/index.js\");\nvar Data_Functor = require(\"../Data.Functor/index.js\");\nvar Apply = function (Functor0, apply) {\n    this.Functor0 = Functor0;\n    this.apply = apply;\n};\nvar applyFn = new Apply(function () {\n    return Data_Functor.functorFn;\n}, function (f) {\n    return function (g) {\n        return function (x) {\n            return f(x)(g(x));\n        };\n    };\n});\nvar applyArray = new Apply(function () {\n    return Data_Functor.functorArray;\n}, $foreign.arrayApply);\nvar apply = function (dict) {\n    return dict.apply;\n};\nvar applyFirst = function (dictApply) {\n    return function (a) {\n        return function (b) {\n            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function[\"const\"])(a))(b);\n        };\n    };\n};\nvar applySecond = function (dictApply) {\n    return function (a) {\n        return function (b) {\n            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function[\"const\"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);\n        };\n    };\n};\nvar lift2 = function (dictApply) {\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);\n            };\n        };\n    };\n};\nvar lift3 = function (dictApply) {\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c);\n                };\n            };\n        };\n    };\n};\nvar lift4 = function (dictApply) {\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return function (d) {\n                        return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d);\n                    };\n                };\n            };\n        };\n    };\n};\nvar lift5 = function (dictApply) {\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return function (d) {\n                        return function (e) {\n                            return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d))(e);\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nmodule.exports = {\n    Apply: Apply,\n    apply: apply,\n    applyFirst: applyFirst,\n    applySecond: applySecond,\n    lift2: lift2,\n    lift3: lift3,\n    lift4: lift4,\n    lift5: lift5,\n    applyFn: applyFn,\n    applyArray: applyArray\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nvar Data_HeytingAlgebra = require(\"../Data.HeytingAlgebra/index.js\");\nvar Data_Symbol = require(\"../Data.Symbol/index.js\");\nvar Data_Unit = require(\"../Data.Unit/index.js\");\nvar Data_Void = require(\"../Data.Void/index.js\");\nvar Record_Unsafe = require(\"../Record.Unsafe/index.js\");\nvar Type_Data_RowList = require(\"../Type.Data.RowList/index.js\");\nvar Eq = function (eq) {\n    this.eq = eq;\n};\nvar Eq1 = function (eq1) {\n    this.eq1 = eq1;\n};\nvar EqRecord = function (eqRecord) {\n    this.eqRecord = eqRecord;\n};\nvar eqVoid = new Eq(function (v) {\n    return function (v1) {\n        return true;\n    };\n});\nvar eqUnit = new Eq(function (v) {\n    return function (v1) {\n        return true;\n    };\n});\nvar eqString = new Eq($foreign.refEq);\nvar eqRowNil = new EqRecord(function (v) {\n    return function (v1) {\n        return function (v2) {\n            return true;\n        };\n    };\n});\nvar eqRecord = function (dict) {\n    return dict.eqRecord;\n};\nvar eqRec = function (dictRowToList) {\n    return function (dictEqRecord) {\n        return new Eq(eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value));\n    };\n};\nvar eqNumber = new Eq($foreign.refEq);\nvar eqInt = new Eq($foreign.refEq);\nvar eqChar = new Eq($foreign.refEq);\nvar eqBoolean = new Eq($foreign.refEq);\nvar eq1 = function (dict) {\n    return dict.eq1;\n};\nvar eq = function (dict) {\n    return dict.eq;\n};\nvar eqArray = function (dictEq) {\n    return new Eq($foreign.eqArrayImpl(eq(dictEq)));\n};\nvar eq1Array = new Eq1(function (dictEq) {\n    return eq(eqArray(dictEq));\n});\nvar eqRowCons = function (dictEqRecord) {\n    return function (dictCons) {\n        return function (dictIsSymbol) {\n            return function (dictEq) {\n                return new EqRecord(function (v) {\n                    return function (ra) {\n                        return function (rb) {\n                            var tail = eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);\n                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);\n                            var get = Record_Unsafe.unsafeGet(key);\n                            return eq(dictEq)(get(ra))(get(rb)) && tail;\n                        };\n                    };\n                });\n            };\n        };\n    };\n};\nvar notEq = function (dictEq) {\n    return function (x) {\n        return function (y) {\n            return eq(eqBoolean)(eq(dictEq)(x)(y))(false);\n        };\n    };\n};\nvar notEq1 = function (dictEq1) {\n    return function (dictEq) {\n        return function (x) {\n            return function (y) {\n                return eq(eqBoolean)(eq1(dictEq1)(dictEq)(x)(y))(false);\n            };\n        };\n    };\n};\nmodule.exports = {\n    Eq: Eq,\n    eq: eq,\n    notEq: notEq,\n    Eq1: Eq1,\n    eq1: eq1,\n    notEq1: notEq1,\n    EqRecord: EqRecord,\n    eqRecord: eqRecord,\n    eqBoolean: eqBoolean,\n    eqInt: eqInt,\n    eqNumber: eqNumber,\n    eqChar: eqChar,\n    eqString: eqString,\n    eqUnit: eqUnit,\n    eqVoid: eqVoid,\n    eqArray: eqArray,\n    eqRec: eqRec,\n    eq1Array: eq1Array,\n    eqRowNil: eqRowNil,\n    eqRowCons: eqRowCons\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Control_Category = require(\"../Control.Category/index.js\");\nvar Data_Boolean = require(\"../Data.Boolean/index.js\");\nvar Data_Ord = require(\"../Data.Ord/index.js\");\nvar Data_Ring = require(\"../Data.Ring/index.js\");\nvar on = function (f) {\n    return function (g) {\n        return function (x) {\n            return function (y) {\n                return f(g(x))(g(y));\n            };\n        };\n    };\n};\nvar flip = function (f) {\n    return function (b) {\n        return function (a) {\n            return f(a)(b);\n        };\n    };\n};\nvar $$const = function (a) {\n    return function (v) {\n        return a;\n    };\n};\nvar applyN = function (f) {\n    var go = function ($copy_n) {\n        return function ($copy_acc) {\n            var $tco_var_n = $copy_n;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(n, acc) {\n                if (n <= 0) {\n                    $tco_done = true;\n                    return acc;\n                };\n                if (Data_Boolean.otherwise) {\n                    $tco_var_n = n - 1 | 0;\n                    $copy_acc = f(acc);\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.Function line 94, column 3 - line 96, column 37: \" + [ n.constructor.name, acc.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_n, $copy_acc);\n            };\n            return $tco_result;\n        };\n    };\n    return go;\n};\nvar applyFlipped = function (x) {\n    return function (f) {\n        return f(x);\n    };\n};\nvar apply = function (f) {\n    return function (x) {\n        return f(x);\n    };\n};\nmodule.exports = {\n    flip: flip,\n    \"const\": $$const,\n    apply: apply,\n    applyFlipped: applyFlipped,\n    applyN: applyN,\n    on: on\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Control_Semigroupoid = require(\"../Control.Semigroupoid/index.js\");\nvar Category = function (Semigroupoid0, identity) {\n    this.Semigroupoid0 = Semigroupoid0;\n    this.identity = identity;\n};\nvar identity = function (dict) {\n    return dict.identity;\n};\nvar categoryFn = new Category(function () {\n    return Control_Semigroupoid.semigroupoidFn;\n}, function (x) {\n    return x;\n});\nmodule.exports = {\n    Category: Category,\n    identity: identity,\n    categoryFn: categoryFn\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nvar Data_Eq = require(\"../Data.Eq/index.js\");\nvar Data_Ord_Unsafe = require(\"../Data.Ord.Unsafe/index.js\");\nvar Data_Ordering = require(\"../Data.Ordering/index.js\");\nvar Data_Ring = require(\"../Data.Ring/index.js\");\nvar Data_Semiring = require(\"../Data.Semiring/index.js\");\nvar Data_Unit = require(\"../Data.Unit/index.js\");\nvar Data_Void = require(\"../Data.Void/index.js\");\nvar Ord = function (Eq0, compare) {\n    this.Eq0 = Eq0;\n    this.compare = compare;\n};\nvar Ord1 = function (Eq10, compare1) {\n    this.Eq10 = Eq10;\n    this.compare1 = compare1;\n};\nvar ordVoid = new Ord(function () {\n    return Data_Eq.eqVoid;\n}, function (v) {\n    return function (v1) {\n        return Data_Ordering.EQ.value;\n    };\n});\nvar ordUnit = new Ord(function () {\n    return Data_Eq.eqUnit;\n}, function (v) {\n    return function (v1) {\n        return Data_Ordering.EQ.value;\n    };\n});\nvar ordString = new Ord(function () {\n    return Data_Eq.eqString;\n}, Data_Ord_Unsafe.unsafeCompare);\nvar ordOrdering = new Ord(function () {\n    return Data_Ordering.eqOrdering;\n}, function (v) {\n    return function (v1) {\n        if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {\n            return Data_Ordering.EQ.value;\n        };\n        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {\n            return Data_Ordering.EQ.value;\n        };\n        if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {\n            return Data_Ordering.EQ.value;\n        };\n        if (v instanceof Data_Ordering.LT) {\n            return Data_Ordering.LT.value;\n        };\n        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {\n            return Data_Ordering.GT.value;\n        };\n        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {\n            return Data_Ordering.LT.value;\n        };\n        if (v instanceof Data_Ordering.GT) {\n            return Data_Ordering.GT.value;\n        };\n        throw new Error(\"Failed pattern match at Data.Ord line 67, column 1 - line 67, column 37: \" + [ v.constructor.name, v1.constructor.name ]);\n    };\n});\nvar ordNumber = new Ord(function () {\n    return Data_Eq.eqNumber;\n}, Data_Ord_Unsafe.unsafeCompare);\nvar ordInt = new Ord(function () {\n    return Data_Eq.eqInt;\n}, Data_Ord_Unsafe.unsafeCompare);\nvar ordChar = new Ord(function () {\n    return Data_Eq.eqChar;\n}, Data_Ord_Unsafe.unsafeCompare);\nvar ordBoolean = new Ord(function () {\n    return Data_Eq.eqBoolean;\n}, Data_Ord_Unsafe.unsafeCompare);\nvar compare1 = function (dict) {\n    return dict.compare1;\n};\nvar compare = function (dict) {\n    return dict.compare;\n};\nvar comparing = function (dictOrd) {\n    return function (f) {\n        return function (x) {\n            return function (y) {\n                return compare(dictOrd)(f(x))(f(y));\n            };\n        };\n    };\n};\nvar greaterThan = function (dictOrd) {\n    return function (a1) {\n        return function (a2) {\n            var v = compare(dictOrd)(a1)(a2);\n            if (v instanceof Data_Ordering.GT) {\n                return true;\n            };\n            return false;\n        };\n    };\n};\nvar greaterThanOrEq = function (dictOrd) {\n    return function (a1) {\n        return function (a2) {\n            var v = compare(dictOrd)(a1)(a2);\n            if (v instanceof Data_Ordering.LT) {\n                return false;\n            };\n            return true;\n        };\n    };\n};\nvar signum = function (dictOrd) {\n    return function (dictRing) {\n        return function (x) {\n            var $33 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));\n            if ($33) {\n                return Data_Semiring.one(dictRing.Semiring0());\n            };\n            return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()));\n        };\n    };\n};\nvar lessThan = function (dictOrd) {\n    return function (a1) {\n        return function (a2) {\n            var v = compare(dictOrd)(a1)(a2);\n            if (v instanceof Data_Ordering.LT) {\n                return true;\n            };\n            return false;\n        };\n    };\n};\nvar lessThanOrEq = function (dictOrd) {\n    return function (a1) {\n        return function (a2) {\n            var v = compare(dictOrd)(a1)(a2);\n            if (v instanceof Data_Ordering.GT) {\n                return false;\n            };\n            return true;\n        };\n    };\n};\nvar max = function (dictOrd) {\n    return function (x) {\n        return function (y) {\n            var v = compare(dictOrd)(x)(y);\n            if (v instanceof Data_Ordering.LT) {\n                return y;\n            };\n            if (v instanceof Data_Ordering.EQ) {\n                return x;\n            };\n            if (v instanceof Data_Ordering.GT) {\n                return x;\n            };\n            throw new Error(\"Failed pattern match at Data.Ord line 122, column 3 - line 125, column 12: \" + [ v.constructor.name ]);\n        };\n    };\n};\nvar min = function (dictOrd) {\n    return function (x) {\n        return function (y) {\n            var v = compare(dictOrd)(x)(y);\n            if (v instanceof Data_Ordering.LT) {\n                return x;\n            };\n            if (v instanceof Data_Ordering.EQ) {\n                return x;\n            };\n            if (v instanceof Data_Ordering.GT) {\n                return y;\n            };\n            throw new Error(\"Failed pattern match at Data.Ord line 113, column 3 - line 116, column 12: \" + [ v.constructor.name ]);\n        };\n    };\n};\nvar ordArray = function (dictOrd) {\n    return new Ord(function () {\n        return Data_Eq.eqArray(dictOrd.Eq0());\n    }, (function () {\n        var toDelta = function (x) {\n            return function (y) {\n                var v = compare(dictOrd)(x)(y);\n                if (v instanceof Data_Ordering.EQ) {\n                    return 0;\n                };\n                if (v instanceof Data_Ordering.LT) {\n                    return 1;\n                };\n                if (v instanceof Data_Ordering.GT) {\n                    return -1 | 0;\n                };\n                throw new Error(\"Failed pattern match at Data.Ord line 60, column 7 - line 65, column 1: \" + [ v.constructor.name ]);\n            };\n        };\n        return function (xs) {\n            return function (ys) {\n                return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));\n            };\n        };\n    })());\n};\nvar ord1Array = new Ord1(function () {\n    return Data_Eq.eq1Array;\n}, function (dictOrd) {\n    return compare(ordArray(dictOrd));\n});\nvar clamp = function (dictOrd) {\n    return function (low) {\n        return function (hi) {\n            return function (x) {\n                return min(dictOrd)(hi)(max(dictOrd)(low)(x));\n            };\n        };\n    };\n};\nvar between = function (dictOrd) {\n    return function (low) {\n        return function (hi) {\n            return function (x) {\n                if (lessThan(dictOrd)(x)(low)) {\n                    return false;\n                };\n                if (greaterThan(dictOrd)(x)(hi)) {\n                    return false;\n                };\n                return true;\n            };\n        };\n    };\n};\nvar abs = function (dictOrd) {\n    return function (dictRing) {\n        return function (x) {\n            var $42 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));\n            if ($42) {\n                return x;\n            };\n            return Data_Ring.negate(dictRing)(x);\n        };\n    };\n};\nmodule.exports = {\n    Ord: Ord,\n    compare: compare,\n    Ord1: Ord1,\n    compare1: compare1,\n    lessThan: lessThan,\n    lessThanOrEq: lessThanOrEq,\n    greaterThan: greaterThan,\n    greaterThanOrEq: greaterThanOrEq,\n    comparing: comparing,\n    min: min,\n    max: max,\n    clamp: clamp,\n    between: between,\n    abs: abs,\n    signum: signum,\n    ordBoolean: ordBoolean,\n    ordInt: ordInt,\n    ordNumber: ordNumber,\n    ordString: ordString,\n    ordChar: ordChar,\n    ordUnit: ordUnit,\n    ordVoid: ordVoid,\n    ordArray: ordArray,\n    ordOrdering: ordOrdering,\n    ord1Array: ord1Array\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Data_Eq = require(\"../Data.Eq/index.js\");\nvar Data_Semigroup = require(\"../Data.Semigroup/index.js\");\nvar Data_Show = require(\"../Data.Show/index.js\");\nvar LT = (function () {\n    function LT() {\n\n    };\n    LT.value = new LT();\n    return LT;\n})();\nvar GT = (function () {\n    function GT() {\n\n    };\n    GT.value = new GT();\n    return GT;\n})();\nvar EQ = (function () {\n    function EQ() {\n\n    };\n    EQ.value = new EQ();\n    return EQ;\n})();\nvar showOrdering = new Data_Show.Show(function (v) {\n    if (v instanceof LT) {\n        return \"LT\";\n    };\n    if (v instanceof GT) {\n        return \"GT\";\n    };\n    if (v instanceof EQ) {\n        return \"EQ\";\n    };\n    throw new Error(\"Failed pattern match at Data.Ordering line 26, column 1 - line 26, column 39: \" + [ v.constructor.name ]);\n});\nvar semigroupOrdering = new Data_Semigroup.Semigroup(function (v) {\n    return function (v1) {\n        if (v instanceof LT) {\n            return LT.value;\n        };\n        if (v instanceof GT) {\n            return GT.value;\n        };\n        if (v instanceof EQ) {\n            return v1;\n        };\n        throw new Error(\"Failed pattern match at Data.Ordering line 21, column 1 - line 21, column 49: \" + [ v.constructor.name, v1.constructor.name ]);\n    };\n});\nvar invert = function (v) {\n    if (v instanceof GT) {\n        return LT.value;\n    };\n    if (v instanceof EQ) {\n        return EQ.value;\n    };\n    if (v instanceof LT) {\n        return GT.value;\n    };\n    throw new Error(\"Failed pattern match at Data.Ordering line 33, column 1 - line 33, column 31: \" + [ v.constructor.name ]);\n};\nvar eqOrdering = new Data_Eq.Eq(function (v) {\n    return function (v1) {\n        if (v instanceof LT && v1 instanceof LT) {\n            return true;\n        };\n        if (v instanceof GT && v1 instanceof GT) {\n            return true;\n        };\n        if (v instanceof EQ && v1 instanceof EQ) {\n            return true;\n        };\n        return false;\n    };\n});\nmodule.exports = {\n    LT: LT,\n    GT: GT,\n    EQ: EQ,\n    invert: invert,\n    eqOrdering: eqOrdering,\n    semigroupOrdering: semigroupOrdering,\n    showOrdering: showOrdering\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nvar Data_Symbol = require(\"../Data.Symbol/index.js\");\nvar Data_Unit = require(\"../Data.Unit/index.js\");\nvar Data_Void = require(\"../Data.Void/index.js\");\nvar Record_Unsafe = require(\"../Record.Unsafe/index.js\");\nvar Type_Data_RowList = require(\"../Type.Data.RowList/index.js\");\nvar Semigroup = function (append) {\n    this.append = append;\n};\nvar SemigroupRecord = function (appendRecord) {\n    this.appendRecord = appendRecord;\n};\nvar semigroupVoid = new Semigroup(function (v) {\n    return Data_Void.absurd;\n});\nvar semigroupUnit = new Semigroup(function (v) {\n    return function (v1) {\n        return Data_Unit.unit;\n    };\n});\nvar semigroupString = new Semigroup($foreign.concatString);\nvar semigroupRecordNil = new SemigroupRecord(function (v) {\n    return function (v1) {\n        return function (v2) {\n            return {};\n        };\n    };\n});\nvar semigroupArray = new Semigroup($foreign.concatArray);\nvar appendRecord = function (dict) {\n    return dict.appendRecord;\n};\nvar semigroupRecord = function (dictRowToList) {\n    return function (dictSemigroupRecord) {\n        return new Semigroup(appendRecord(dictSemigroupRecord)(Type_Data_RowList.RLProxy.value));\n    };\n};\nvar append = function (dict) {\n    return dict.append;\n};\nvar semigroupFn = function (dictSemigroup) {\n    return new Semigroup(function (f) {\n        return function (g) {\n            return function (x) {\n                return append(dictSemigroup)(f(x))(g(x));\n            };\n        };\n    });\n};\nvar semigroupRecordCons = function (dictIsSymbol) {\n    return function (dictCons) {\n        return function (dictSemigroupRecord) {\n            return function (dictSemigroup) {\n                return new SemigroupRecord(function (v) {\n                    return function (ra) {\n                        return function (rb) {\n                            var tail = appendRecord(dictSemigroupRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);\n                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);\n                            var insert = Record_Unsafe.unsafeSet(key);\n                            var get = Record_Unsafe.unsafeGet(key);\n                            return insert(append(dictSemigroup)(get(ra))(get(rb)))(tail);\n                        };\n                    };\n                });\n            };\n        };\n    };\n};\nmodule.exports = {\n    Semigroup: Semigroup,\n    append: append,\n    SemigroupRecord: SemigroupRecord,\n    appendRecord: appendRecord,\n    semigroupString: semigroupString,\n    semigroupUnit: semigroupUnit,\n    semigroupVoid: semigroupVoid,\n    semigroupFn: semigroupFn,\n    semigroupArray: semigroupArray,\n    semigroupRecord: semigroupRecord,\n    semigroupRecordNil: semigroupRecordNil,\n    semigroupRecordCons: semigroupRecordCons\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Control_Apply = require(\"../Control.Apply/index.js\");\nvar Data_Functor = require(\"../Data.Functor/index.js\");\nvar Data_Unit = require(\"../Data.Unit/index.js\");\nvar Applicative = function (Apply0, pure) {\n    this.Apply0 = Apply0;\n    this.pure = pure;\n};\nvar pure = function (dict) {\n    return dict.pure;\n};\nvar unless = function (dictApplicative) {\n    return function (v) {\n        return function (v1) {\n            if (!v) {\n                return v1;\n            };\n            if (v) {\n                return pure(dictApplicative)(Data_Unit.unit);\n            };\n            throw new Error(\"Failed pattern match at Control.Applicative line 62, column 1 - line 62, column 65: \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nvar when = function (dictApplicative) {\n    return function (v) {\n        return function (v1) {\n            if (v) {\n                return v1;\n            };\n            if (!v) {\n                return pure(dictApplicative)(Data_Unit.unit);\n            };\n            throw new Error(\"Failed pattern match at Control.Applicative line 57, column 1 - line 57, column 63: \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nvar liftA1 = function (dictApplicative) {\n    return function (f) {\n        return function (a) {\n            return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);\n        };\n    };\n};\nvar applicativeFn = new Applicative(function () {\n    return Control_Apply.applyFn;\n}, function (x) {\n    return function (v) {\n        return x;\n    };\n});\nvar applicativeArray = new Applicative(function () {\n    return Control_Apply.applyArray;\n}, function (x) {\n    return [ x ];\n});\nmodule.exports = {\n    Applicative: Applicative,\n    pure: pure,\n    liftA1: liftA1,\n    unless: unless,\n    when: when,\n    applicativeFn: applicativeFn,\n    applicativeArray: applicativeArray\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nvar Data_BooleanAlgebra = require(\"../Data.BooleanAlgebra/index.js\");\nvar Data_CommutativeRing = require(\"../Data.CommutativeRing/index.js\");\nvar Data_Eq = require(\"../Data.Eq/index.js\");\nvar Data_HeytingAlgebra = require(\"../Data.HeytingAlgebra/index.js\");\nvar Data_Ring = require(\"../Data.Ring/index.js\");\nvar Data_Semiring = require(\"../Data.Semiring/index.js\");\nvar EuclideanRing = function (CommutativeRing0, degree, div, mod) {\n    this.CommutativeRing0 = CommutativeRing0;\n    this.degree = degree;\n    this.div = div;\n    this.mod = mod;\n};\nvar mod = function (dict) {\n    return dict.mod;\n};\nvar gcd = function ($copy_dictEq) {\n    return function ($copy_dictEuclideanRing) {\n        return function ($copy_a) {\n            return function ($copy_b) {\n                var $tco_var_dictEq = $copy_dictEq;\n                var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;\n                var $tco_var_a = $copy_a;\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(dictEq, dictEuclideanRing, a, b) {\n                    var $7 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));\n                    if ($7) {\n                        $tco_done = true;\n                        return a;\n                    };\n                    $tco_var_dictEq = dictEq;\n                    $tco_var_dictEuclideanRing = dictEuclideanRing;\n                    $tco_var_a = b;\n                    $copy_b = mod(dictEuclideanRing)(a)(b);\n                    return;\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);\n                };\n                return $tco_result;\n            };\n        };\n    };\n};\nvar euclideanRingNumber = new EuclideanRing(function () {\n    return Data_CommutativeRing.commutativeRingNumber;\n}, function (v) {\n    return 1;\n}, $foreign.numDiv, function (v) {\n    return function (v1) {\n        return 0.0;\n    };\n});\nvar euclideanRingInt = new EuclideanRing(function () {\n    return Data_CommutativeRing.commutativeRingInt;\n}, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);\nvar div = function (dict) {\n    return dict.div;\n};\nvar lcm = function (dictEq) {\n    return function (dictEuclideanRing) {\n        return function (a) {\n            return function (b) {\n                var $8 = Data_Eq.eq(dictEq)(a)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())) || Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));\n                if ($8) {\n                    return Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0());\n                };\n                return div(dictEuclideanRing)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(a)(b))(gcd(dictEq)(dictEuclideanRing)(a)(b));\n            };\n        };\n    };\n};\nvar degree = function (dict) {\n    return dict.degree;\n};\nmodule.exports = {\n    EuclideanRing: EuclideanRing,\n    degree: degree,\n    div: div,\n    mod: mod,\n    gcd: gcd,\n    lcm: lcm,\n    euclideanRingInt: euclideanRingInt,\n    euclideanRingNumber: euclideanRingNumber\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nvar Data_Symbol = require(\"../Data.Symbol/index.js\");\nvar Record_Unsafe = require(\"../Record.Unsafe/index.js\");\nvar Type_Data_RowList = require(\"../Type.Data.RowList/index.js\");\nvar Show = function (show) {\n    this.show = show;\n};\nvar ShowRecordFields = function (showRecordFields) {\n    this.showRecordFields = showRecordFields;\n};\nvar showString = new Show($foreign.showStringImpl);\nvar showRecordFieldsNil = new ShowRecordFields(function (v) {\n    return function (v1) {\n        return [  ];\n    };\n});\nvar showRecordFields = function (dict) {\n    return dict.showRecordFields;\n};\nvar showRecord = function (dictRowToList) {\n    return function (dictShowRecordFields) {\n        return new Show(function (record) {\n            var v = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);\n            if (v.length === 0) {\n                return \"{}\";\n            };\n            return $foreign.join(\" \")([ \"{\", $foreign.join(\", \")(v), \"}\" ]);\n        });\n    };\n};\nvar showNumber = new Show($foreign.showNumberImpl);\nvar showInt = new Show($foreign.showIntImpl);\nvar showChar = new Show($foreign.showCharImpl);\nvar showBoolean = new Show(function (v) {\n    if (v) {\n        return \"true\";\n    };\n    if (!v) {\n        return \"false\";\n    };\n    throw new Error(\"Failed pattern match at Data.Show line 20, column 1 - line 20, column 37: \" + [ v.constructor.name ]);\n});\nvar show = function (dict) {\n    return dict.show;\n};\nvar showArray = function (dictShow) {\n    return new Show($foreign.showArrayImpl(show(dictShow)));\n};\nvar showRecordFieldsCons = function (dictIsSymbol) {\n    return function (dictShowRecordFields) {\n        return function (dictShow) {\n            return new ShowRecordFields(function (v) {\n                return function (record) {\n                    var tail = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);\n                    var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);\n                    var focus = Record_Unsafe.unsafeGet(key)(record);\n                    return $foreign.cons($foreign.join(\": \")([ key, show(dictShow)(focus) ]))(tail);\n                };\n            });\n        };\n    };\n};\nmodule.exports = {\n    Show: Show,\n    show: show,\n    ShowRecordFields: ShowRecordFields,\n    showRecordFields: showRecordFields,\n    showBoolean: showBoolean,\n    showInt: showInt,\n    showNumber: showNumber,\n    showChar: showChar,\n    showString: showString,\n    showArray: showArray,\n    showRecord: showRecord,\n    showRecordFieldsNil: showRecordFieldsNil,\n    showRecordFieldsCons: showRecordFieldsCons\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nvar Data_Symbol = require(\"../Data.Symbol/index.js\");\nvar Data_Unit = require(\"../Data.Unit/index.js\");\nvar Record_Unsafe = require(\"../Record.Unsafe/index.js\");\nvar Type_Data_Row = require(\"../Type.Data.Row/index.js\");\nvar Type_Data_RowList = require(\"../Type.Data.RowList/index.js\");\nvar HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {\n    this.conj = conj;\n    this.disj = disj;\n    this.ff = ff;\n    this.implies = implies;\n    this.not = not;\n    this.tt = tt;\n};\nvar HeytingAlgebraRecord = function (conjRecord, disjRecord, ffRecord, impliesRecord, notRecord, ttRecord) {\n    this.conjRecord = conjRecord;\n    this.disjRecord = disjRecord;\n    this.ffRecord = ffRecord;\n    this.impliesRecord = impliesRecord;\n    this.notRecord = notRecord;\n    this.ttRecord = ttRecord;\n};\nvar ttRecord = function (dict) {\n    return dict.ttRecord;\n};\nvar tt = function (dict) {\n    return dict.tt;\n};\nvar notRecord = function (dict) {\n    return dict.notRecord;\n};\nvar not = function (dict) {\n    return dict.not;\n};\nvar impliesRecord = function (dict) {\n    return dict.impliesRecord;\n};\nvar implies = function (dict) {\n    return dict.implies;\n};\nvar heytingAlgebraUnit = new HeytingAlgebra(function (v) {\n    return function (v1) {\n        return Data_Unit.unit;\n    };\n}, function (v) {\n    return function (v1) {\n        return Data_Unit.unit;\n    };\n}, Data_Unit.unit, function (v) {\n    return function (v1) {\n        return Data_Unit.unit;\n    };\n}, function (v) {\n    return Data_Unit.unit;\n}, Data_Unit.unit);\nvar heytingAlgebraRecordNil = new HeytingAlgebraRecord(function (v) {\n    return function (v1) {\n        return function (v2) {\n            return {};\n        };\n    };\n}, function (v) {\n    return function (v1) {\n        return function (v2) {\n            return {};\n        };\n    };\n}, function (v) {\n    return function (v1) {\n        return {};\n    };\n}, function (v) {\n    return function (v1) {\n        return function (v2) {\n            return {};\n        };\n    };\n}, function (v) {\n    return function (v1) {\n        return {};\n    };\n}, function (v) {\n    return function (v1) {\n        return {};\n    };\n});\nvar ffRecord = function (dict) {\n    return dict.ffRecord;\n};\nvar ff = function (dict) {\n    return dict.ff;\n};\nvar disjRecord = function (dict) {\n    return dict.disjRecord;\n};\nvar disj = function (dict) {\n    return dict.disj;\n};\nvar heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {\n    return function (b) {\n        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);\n    };\n}, $foreign.boolNot, true);\nvar conjRecord = function (dict) {\n    return dict.conjRecord;\n};\nvar heytingAlgebraRecord = function (dictRowToList) {\n    return function (dictHeytingAlgebraRecord) {\n        return new HeytingAlgebra(conjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), disjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), ffRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value), impliesRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), notRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), ttRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value));\n    };\n};\nvar conj = function (dict) {\n    return dict.conj;\n};\nvar heytingAlgebraFunction = function (dictHeytingAlgebra) {\n    return new HeytingAlgebra(function (f) {\n        return function (g) {\n            return function (a) {\n                return conj(dictHeytingAlgebra)(f(a))(g(a));\n            };\n        };\n    }, function (f) {\n        return function (g) {\n            return function (a) {\n                return disj(dictHeytingAlgebra)(f(a))(g(a));\n            };\n        };\n    }, function (v) {\n        return ff(dictHeytingAlgebra);\n    }, function (f) {\n        return function (g) {\n            return function (a) {\n                return implies(dictHeytingAlgebra)(f(a))(g(a));\n            };\n        };\n    }, function (f) {\n        return function (a) {\n            return not(dictHeytingAlgebra)(f(a));\n        };\n    }, function (v) {\n        return tt(dictHeytingAlgebra);\n    });\n};\nvar heytingAlgebraRecordCons = function (dictIsSymbol) {\n    return function (dictCons) {\n        return function (dictHeytingAlgebraRecord) {\n            return function (dictHeytingAlgebra) {\n                return new HeytingAlgebraRecord(function (v) {\n                    return function (ra) {\n                        return function (rb) {\n                            var tail = conjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);\n                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);\n                            var insert = Record_Unsafe.unsafeSet(key);\n                            var get = Record_Unsafe.unsafeGet(key);\n                            return insert(conj(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);\n                        };\n                    };\n                }, function (v) {\n                    return function (ra) {\n                        return function (rb) {\n                            var tail = disjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);\n                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);\n                            var insert = Record_Unsafe.unsafeSet(key);\n                            var get = Record_Unsafe.unsafeGet(key);\n                            return insert(disj(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);\n                        };\n                    };\n                }, function (v) {\n                    return function (row) {\n                        var tail = ffRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(row);\n                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);\n                        var insert = Record_Unsafe.unsafeSet(key);\n                        return insert(ff(dictHeytingAlgebra))(tail);\n                    };\n                }, function (v) {\n                    return function (ra) {\n                        return function (rb) {\n                            var tail = impliesRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);\n                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);\n                            var insert = Record_Unsafe.unsafeSet(key);\n                            var get = Record_Unsafe.unsafeGet(key);\n                            return insert(implies(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);\n                        };\n                    };\n                }, function (v) {\n                    return function (row) {\n                        var tail = notRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(row);\n                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);\n                        var insert = Record_Unsafe.unsafeSet(key);\n                        var get = Record_Unsafe.unsafeGet(key);\n                        return insert(not(dictHeytingAlgebra)(get(row)))(tail);\n                    };\n                }, function (v) {\n                    return function (row) {\n                        var tail = ttRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(row);\n                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);\n                        var insert = Record_Unsafe.unsafeSet(key);\n                        return insert(tt(dictHeytingAlgebra))(tail);\n                    };\n                });\n            };\n        };\n    };\n};\nmodule.exports = {\n    HeytingAlgebra: HeytingAlgebra,\n    tt: tt,\n    ff: ff,\n    implies: implies,\n    conj: conj,\n    disj: disj,\n    not: not,\n    HeytingAlgebraRecord: HeytingAlgebraRecord,\n    ffRecord: ffRecord,\n    ttRecord: ttRecord,\n    impliesRecord: impliesRecord,\n    conjRecord: conjRecord,\n    disjRecord: disjRecord,\n    notRecord: notRecord,\n    heytingAlgebraBoolean: heytingAlgebraBoolean,\n    heytingAlgebraUnit: heytingAlgebraUnit,\n    heytingAlgebraFunction: heytingAlgebraFunction,\n    heytingAlgebraRecord: heytingAlgebraRecord,\n    heytingAlgebraRecordNil: heytingAlgebraRecordNil,\n    heytingAlgebraRecordCons: heytingAlgebraRecordCons\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Data_Show = require(\"../Data.Show/index.js\");\nvar Void = function (x) {\n    return x;\n};\nvar absurd = function (a) {\n    var spin = function ($copy_v) {\n        var $tco_result;\n        function $tco_loop(v) {\n            $copy_v = v;\n            return;\n        };\n        while (!false) {\n            $tco_result = $tco_loop($copy_v);\n        };\n        return $tco_result;\n    };\n    return spin(a);\n};\nvar showVoid = new Data_Show.Show(absurd);\nmodule.exports = {\n    absurd: absurd,\n    showVoid: showVoid\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Semigroupoid = function (compose) {\n    this.compose = compose;\n};\nvar semigroupoidFn = new Semigroupoid(function (f) {\n    return function (g) {\n        return function (x) {\n            return f(g(x));\n        };\n    };\n});\nvar compose = function (dict) {\n    return dict.compose;\n};\nvar composeFlipped = function (dictSemigroupoid) {\n    return function (f) {\n        return function (g) {\n            return compose(dictSemigroupoid)(g)(f);\n        };\n    };\n};\nmodule.exports = {\n    compose: compose,\n    Semigroupoid: Semigroupoid,\n    composeFlipped: composeFlipped,\n    semigroupoidFn: semigroupoidFn\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Data_Functor = require(\"../Data.Functor/index.js\");\nvar Data_Semigroup = require(\"../Data.Semigroup/index.js\");\nvar Alt = function (Functor0, alt) {\n    this.Functor0 = Functor0;\n    this.alt = alt;\n};\nvar altArray = new Alt(function () {\n    return Data_Functor.functorArray;\n}, Data_Semigroup.append(Data_Semigroup.semigroupArray));\nvar alt = function (dict) {\n    return dict.alt;\n};\nmodule.exports = {\n    Alt: Alt,\n    alt: alt,\n    altArray: altArray\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nvar Control_Applicative = require(\"../Control.Applicative/index.js\");\nvar Control_Apply = require(\"../Control.Apply/index.js\");\nvar Control_Category = require(\"../Control.Category/index.js\");\nvar Data_Function = require(\"../Data.Function/index.js\");\nvar Data_Functor = require(\"../Data.Functor/index.js\");\nvar Data_Unit = require(\"../Data.Unit/index.js\");\nvar Bind = function (Apply0, bind) {\n    this.Apply0 = Apply0;\n    this.bind = bind;\n};\nvar Discard = function (discard) {\n    this.discard = discard;\n};\nvar discard = function (dict) {\n    return dict.discard;\n};\nvar bindFn = new Bind(function () {\n    return Control_Apply.applyFn;\n}, function (m) {\n    return function (f) {\n        return function (x) {\n            return f(m(x))(x);\n        };\n    };\n});\nvar bindArray = new Bind(function () {\n    return Control_Apply.applyArray;\n}, $foreign.arrayBind);\nvar bind = function (dict) {\n    return dict.bind;\n};\nvar bindFlipped = function (dictBind) {\n    return Data_Function.flip(bind(dictBind));\n};\nvar composeKleisliFlipped = function (dictBind) {\n    return function (f) {\n        return function (g) {\n            return function (a) {\n                return bindFlipped(dictBind)(f)(g(a));\n            };\n        };\n    };\n};\nvar composeKleisli = function (dictBind) {\n    return function (f) {\n        return function (g) {\n            return function (a) {\n                return bind(dictBind)(f(a))(g);\n            };\n        };\n    };\n};\nvar discardUnit = new Discard(function (dictBind) {\n    return bind(dictBind);\n});\nvar ifM = function (dictBind) {\n    return function (cond) {\n        return function (t) {\n            return function (f) {\n                return bind(dictBind)(cond)(function (cond$prime) {\n                    if (cond$prime) {\n                        return t;\n                    };\n                    return f;\n                });\n            };\n        };\n    };\n};\nvar join = function (dictBind) {\n    return function (m) {\n        return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));\n    };\n};\nmodule.exports = {\n    Bind: Bind,\n    bind: bind,\n    bindFlipped: bindFlipped,\n    Discard: Discard,\n    discard: discard,\n    join: join,\n    composeKleisli: composeKleisli,\n    composeKleisliFlipped: composeKleisliFlipped,\n    ifM: ifM,\n    bindFn: bindFn,\n    bindArray: bindArray,\n    discardUnit: discardUnit\n};\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Data_Ring = require(\"../Data.Ring/index.js\");\nvar Data_Semiring = require(\"../Data.Semiring/index.js\");\nvar Data_Symbol = require(\"../Data.Symbol/index.js\");\nvar Data_Unit = require(\"../Data.Unit/index.js\");\nvar CommutativeRing = function (Ring0) {\n    this.Ring0 = Ring0;\n};\nvar CommutativeRingRecord = function (RingRecord0) {\n    this.RingRecord0 = RingRecord0;\n};\nvar commutativeRingUnit = new CommutativeRing(function () {\n    return Data_Ring.ringUnit;\n});\nvar commutativeRingRecordNil = new CommutativeRingRecord(function () {\n    return Data_Ring.ringRecordNil;\n});\nvar commutativeRingRecordCons = function (dictIsSymbol) {\n    return function (dictCons) {\n        return function (dictCommutativeRingRecord) {\n            return function (dictCommutativeRing) {\n                return new CommutativeRingRecord(function () {\n                    return Data_Ring.ringRecordCons(dictIsSymbol)(dictCons)(dictCommutativeRingRecord.RingRecord0())(dictCommutativeRing.Ring0());\n                });\n            };\n        };\n    };\n};\nvar commutativeRingRecord = function (dictRowToList) {\n    return function (dictCommutativeRingRecord) {\n        return new CommutativeRing(function () {\n            return Data_Ring.ringRecord(dictRowToList)(dictCommutativeRingRecord.RingRecord0());\n        });\n    };\n};\nvar commutativeRingNumber = new CommutativeRing(function () {\n    return Data_Ring.ringNumber;\n});\nvar commutativeRingInt = new CommutativeRing(function () {\n    return Data_Ring.ringInt;\n});\nvar commutativeRingFn = function (dictCommutativeRing) {\n    return new CommutativeRing(function () {\n        return Data_Ring.ringFn(dictCommutativeRing.Ring0());\n    });\n};\nmodule.exports = {\n    CommutativeRing: CommutativeRing,\n    CommutativeRingRecord: CommutativeRingRecord,\n    commutativeRingInt: commutativeRingInt,\n    commutativeRingNumber: commutativeRingNumber,\n    commutativeRingUnit: commutativeRingUnit,\n    commutativeRingFn: commutativeRingFn,\n    commutativeRingRecord: commutativeRingRecord,\n    commutativeRingRecordNil: commutativeRingRecordNil,\n    commutativeRingRecordCons: commutativeRingRecordCons\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar otherwise = true;\nmodule.exports = {\n    otherwise: otherwise\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Control_Alt = require(\"../Control.Alt/index.js\");\nvar Data_Functor = require(\"../Data.Functor/index.js\");\nvar Plus = function (Alt0, empty) {\n    this.Alt0 = Alt0;\n    this.empty = empty;\n};\nvar plusArray = new Plus(function () {\n    return Control_Alt.altArray;\n}, [  ]);\nvar empty = function (dict) {\n    return dict.empty;\n};\nmodule.exports = {\n    Plus: Plus,\n    empty: empty,\n    plusArray: plusArray\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Control_Applicative = require(\"../Control.Applicative/index.js\");\nvar Control_Apply = require(\"../Control.Apply/index.js\");\nvar Control_Bind = require(\"../Control.Bind/index.js\");\nvar Data_Functor = require(\"../Data.Functor/index.js\");\nvar Data_Unit = require(\"../Data.Unit/index.js\");\nvar Monad = function (Applicative0, Bind1) {\n    this.Applicative0 = Applicative0;\n    this.Bind1 = Bind1;\n};\nvar whenM = function (dictMonad) {\n    return function (mb) {\n        return function (m) {\n            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {\n                return Control_Applicative.when(dictMonad.Applicative0())(v)(m);\n            });\n        };\n    };\n};\nvar unlessM = function (dictMonad) {\n    return function (mb) {\n        return function (m) {\n            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {\n                return Control_Applicative.unless(dictMonad.Applicative0())(v)(m);\n            });\n        };\n    };\n};\nvar monadFn = new Monad(function () {\n    return Control_Applicative.applicativeFn;\n}, function () {\n    return Control_Bind.bindFn;\n});\nvar monadArray = new Monad(function () {\n    return Control_Applicative.applicativeArray;\n}, function () {\n    return Control_Bind.bindArray;\n});\nvar liftM1 = function (dictMonad) {\n    return function (f) {\n        return function (a) {\n            return Control_Bind.bind(dictMonad.Bind1())(a)(function (v) {\n                return Control_Applicative.pure(dictMonad.Applicative0())(f(v));\n            });\n        };\n    };\n};\nvar ap = function (dictMonad) {\n    return function (f) {\n        return function (a) {\n            return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {\n                return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {\n                    return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));\n                });\n            });\n        };\n    };\n};\nmodule.exports = {\n    Monad: Monad,\n    liftM1: liftM1,\n    ap: ap,\n    whenM: whenM,\n    unlessM: unlessM,\n    monadFn: monadFn,\n    monadArray: monadArray\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Control_Applicative = require(\"../Control.Applicative/index.js\");\nvar Control_Apply = require(\"../Control.Apply/index.js\");\nvar Control_Bind = require(\"../Control.Bind/index.js\");\nvar Control_Category = require(\"../Control.Category/index.js\");\nvar Control_Monad = require(\"../Control.Monad/index.js\");\nvar Control_Semigroupoid = require(\"../Control.Semigroupoid/index.js\");\nvar Data_Boolean = require(\"../Data.Boolean/index.js\");\nvar Data_BooleanAlgebra = require(\"../Data.BooleanAlgebra/index.js\");\nvar Data_Bounded = require(\"../Data.Bounded/index.js\");\nvar Data_CommutativeRing = require(\"../Data.CommutativeRing/index.js\");\nvar Data_DivisionRing = require(\"../Data.DivisionRing/index.js\");\nvar Data_Eq = require(\"../Data.Eq/index.js\");\nvar Data_EuclideanRing = require(\"../Data.EuclideanRing/index.js\");\nvar Data_Field = require(\"../Data.Field/index.js\");\nvar Data_Function = require(\"../Data.Function/index.js\");\nvar Data_Functor = require(\"../Data.Functor/index.js\");\nvar Data_HeytingAlgebra = require(\"../Data.HeytingAlgebra/index.js\");\nvar Data_Monoid = require(\"../Data.Monoid/index.js\");\nvar Data_NaturalTransformation = require(\"../Data.NaturalTransformation/index.js\");\nvar Data_Ord = require(\"../Data.Ord/index.js\");\nvar Data_Ordering = require(\"../Data.Ordering/index.js\");\nvar Data_Ring = require(\"../Data.Ring/index.js\");\nvar Data_Semigroup = require(\"../Data.Semigroup/index.js\");\nvar Data_Semiring = require(\"../Data.Semiring/index.js\");\nvar Data_Show = require(\"../Data.Show/index.js\");\nvar Data_Unit = require(\"../Data.Unit/index.js\");\nvar Data_Void = require(\"../Data.Void/index.js\");\nmodule.exports = {};\n","/*\n             ############                  #\n            ############                  ###\n                  #####                  #####\n                #####      ####################\n              #####       ######################\n            #####                     ###########\n          #####         ######################\n        #####          ####################\n      #####                        #####\n     ############                 ###\n    ############                 */\n\n//. # sanctuary-type-classes\n//.\n//. The [Fantasy Land Specification][FL] \"specifies interoperability of common\n//. algebraic structures\" by defining a number of type classes. For each type\n//. class, it states laws which every member of a type must obey in order for\n//. the type to be a member of the type class. In order for the Maybe type to\n//. be considered a [Functor][], for example, every `Maybe a` value must have\n//. a `fantasy-land/map` method which obeys the identity and composition laws.\n//.\n//. This project provides:\n//.\n//.   - [`TypeClass`](#TypeClass), a function for defining type classes;\n//.   - one `TypeClass` value for each Fantasy Land type class;\n//.   - lawful Fantasy Land methods for JavaScript's built-in types;\n//.   - one function for each Fantasy Land method; and\n//.   - several functions derived from these functions.\n//.\n//. ## Type-class hierarchy\n//.\n/* eslint-disable max-len */\n//. <pre>\n//.  Setoid   Semigroupoid  Semigroup   Foldable        Functor      Contravariant  Filterable\n//. (equals)    (compose)    (concat)   (reduce)         (map)        (contramap)    (filter)\n//.     |           |           |           \\         / | | | | \\\n//.     |           |           |            \\       /  | | | |  \\\n//.     |           |           |             \\     /   | | | |   \\\n//.     |           |           |              \\   /    | | | |    \\\n//.     |           |           |               \\ /     | | | |     \\\n//.    Ord      Category     Monoid         Traversable | | | |      \\\n//.   (lte)       (id)       (empty)        (traverse)  / | | \\       \\\n//.                             |                      /  | |  \\       \\\n//.                             |                     /   / \\   \\       \\\n//.                             |             Profunctor /   \\ Bifunctor \\\n//.                             |              (promap) /     \\ (bimap)   \\\n//.                             |                      /       \\           \\\n//.                           Group                   /         \\           \\\n//.                          (invert)               Alt        Apply      Extend\n//.                                                (alt)        (ap)     (extend)\n//.                                                 /           / \\           \\\n//.                                                /           /   \\           \\\n//.                                               /           /     \\           \\\n//.                                              /           /       \\           \\\n//.                                             /           /         \\           \\\n//.                                           Plus    Applicative    Chain      Comonad\n//.                                          (zero)       (of)      (chain)    (extract)\n//.                                             \\         / \\         / \\\n//.                                              \\       /   \\       /   \\\n//.                                               \\     /     \\     /     \\\n//.                                                \\   /       \\   /       \\\n//.                                                 \\ /         \\ /         \\\n//.                                             Alternative    Monad     ChainRec\n//.                                                                     (chainRec)\n//. </pre>\n/* eslint-enable max-len */\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f(require('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define(['sanctuary-type-identifiers'], f);\n  } else {\n    self.sanctuaryTypeClasses = f(self.sanctuaryTypeIdentifiers);\n  }\n\n}(function(type) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* global __doctest:false */\n    /* eslint-disable no-unused-vars */\n    var Identity = __doctest.require('./test/Identity');\n    var List = __doctest.require('./test/List');\n    var Maybe = __doctest.require('./test/Maybe');\n    var Sum = __doctest.require('./test/Sum');\n    var Tuple = __doctest.require('./test/Tuple');\n\n    var Nil = List.Nil, Cons = List.Cons;\n    var Nothing = Maybe.Nothing, Just = Maybe.Just;\n    /* eslint-enable no-unused-vars */\n  }\n\n  //  concat_ :: Array a -> Array a -> Array a\n  function concat_(xs) {\n    return function(ys) {\n      return xs.concat(ys);\n    };\n  }\n\n  //  constant :: a -> b -> a\n  function constant(x) {\n    return function(y) {\n      return x;\n    };\n  }\n\n  //  forEachKey :: (StrMap a, StrMap a ~> String -> Undefined) -> Undefined\n  function forEachKey(strMap, f) {\n    Object.keys(strMap).forEach(f, strMap);\n  }\n\n  //  has :: (String, Object) -> Boolean\n  function has(k, o) {\n    return Object.prototype.hasOwnProperty.call(o, k);\n  }\n\n  //  identity :: a -> a\n  function identity(x) { return x; }\n\n  //  pair :: a -> b -> Array2 a b\n  function pair(x) {\n    return function(y) {\n      return [x, y];\n    };\n  }\n\n  //  sameType :: (a, b) -> Boolean\n  function sameType(x, y) {\n    return typeof x === typeof y && type(x) === type(y);\n  }\n\n  //  thrush :: a -> (a -> b) -> b\n  function thrush(x) {\n    return function(f) {\n      return f(x);\n    };\n  }\n\n  //  type Iteration a = { value :: a, done :: Boolean }\n\n  //  iterationNext :: a -> Iteration a\n  function iterationNext(x) { return {value: x, done: false}; }\n\n  //  iterationDone :: a -> Iteration a\n  function iterationDone(x) { return {value: x, done: true}; }\n\n  //# TypeClass :: (String, String, Array TypeClass, a -> Boolean) -> TypeClass\n  //.\n  //. The arguments are:\n  //.\n  //.   - the name of the type class, prefixed by its npm package name;\n  //.   - the documentation URL of the type class;\n  //.   - an array of dependencies; and\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if the value satisfies the requirements of the type class; `false`\n  //.     otherwise.\n  //.\n  //. Example:\n  //.\n  //. ```javascript\n  //. //    hasMethod :: String -> a -> Boolean\n  //. const hasMethod = name => x => x != null && typeof x[name] == 'function';\n  //.\n  //. //    Foo :: TypeClass\n  //. const Foo = Z.TypeClass(\n  //.   'my-package/Foo',\n  //.   'http://example.com/my-package#Foo',\n  //.   [],\n  //.   hasMethod('foo')\n  //. );\n  //.\n  //. //    Bar :: TypeClass\n  //. const Bar = Z.TypeClass(\n  //.   'my-package/Bar',\n  //.   'http://example.com/my-package#Bar',\n  //.   [Foo],\n  //.   hasMethod('bar')\n  //. );\n  //. ```\n  //.\n  //. Types whose values have a `foo` method are members of the Foo type class.\n  //. Members of the Foo type class whose values have a `bar` method are also\n  //. members of the Bar type class.\n  //.\n  //. Each `TypeClass` value has a `test` field: a function which accepts\n  //. any JavaScript value and returns `true` if the value satisfies the\n  //. type class's predicate and the predicates of all the type class's\n  //. dependencies; `false` otherwise.\n  //.\n  //. `TypeClass` values may be used with [sanctuary-def][type-classes]\n  //. to define parametrically polymorphic functions which verify their\n  //. type-class constraints at run time.\n  function TypeClass(name, url, dependencies, test) {\n    if (!(this instanceof TypeClass)) {\n      return new TypeClass(name, url, dependencies, test);\n    }\n    this.name = name;\n    this.url = url;\n    this.test = function(x) {\n      return dependencies.every(function(d) { return d.test(x); }) && test(x);\n    };\n  }\n\n  TypeClass['@@type'] = 'sanctuary-type-classes/TypeClass';\n\n  //  data Location = Constructor | Value\n\n  //  Constructor :: Location\n  var Constructor = 'Constructor';\n\n  //  Value :: Location\n  var Value = 'Value';\n\n  //  _funcPath :: (Boolean, Array String, a) -> Nullable Function\n  function _funcPath(allowInheritedProps, path, _x) {\n    var x = _x;\n    for (var idx = 0; idx < path.length; idx += 1) {\n      var k = path[idx];\n      if (x == null || !(allowInheritedProps || has(k, x))) return null;\n      x = x[k];\n    }\n    return typeof x === 'function' ? x : null;\n  }\n\n  //  funcPath :: (Array String, a) -> Nullable Function\n  function funcPath(path, x) {\n    return _funcPath(true, path, x);\n  }\n\n  //  implPath :: Array String -> Nullable Function\n  function implPath(path) {\n    return _funcPath(false, path, implementations);\n  }\n\n  //  functionName :: Function -> String\n  var functionName = has('name', function f() {}) ?\n    function functionName(f) { return f.name; } :\n    /* istanbul ignore next */\n    function functionName(f) {\n      var match = /function (\\w*)/.exec(f);\n      return match == null ? '' : match[1];\n    };\n\n  //  $ :: (String, Array TypeClass, StrMap (Array Location)) -> TypeClass\n  function $(_name, dependencies, requirements) {\n    function getBoundMethod(_name) {\n      var name = 'fantasy-land/' + _name;\n      return requirements[_name] === Constructor ?\n        function(typeRep) {\n          var f = funcPath([name], typeRep);\n          return f == null && typeof typeRep === 'function' ?\n            implPath([functionName(typeRep), name]) :\n            f;\n        } :\n        function(x) {\n          var isPrototype = x != null &&\n                            x.constructor != null &&\n                            x.constructor.prototype === x;\n          var m = null;\n          if (!isPrototype) m = funcPath([name], x);\n          if (m == null)    m = implPath([type(x), 'prototype', name]);\n          return m && m.bind(x);\n        };\n    }\n\n    var version = '8.2.1';  // updated programmatically\n    var keys = Object.keys(requirements);\n\n    var typeClass = TypeClass(\n      'sanctuary-type-classes/' + _name,\n      'https://github.com/sanctuary-js/sanctuary-type-classes/tree/v' + version\n        + '#' + _name,\n      dependencies,\n      function(x) {\n        return keys.every(function(_name) {\n          var arg = requirements[_name] === Constructor ? x.constructor : x;\n          return getBoundMethod(_name)(arg) != null;\n        });\n      }\n    );\n\n    typeClass.methods = keys.reduce(function(methods, _name) {\n      methods[_name] = getBoundMethod(_name);\n      return methods;\n    }, {});\n\n    return typeClass;\n  }\n\n  //# Setoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Setoid][].\n  //.\n  //. ```javascript\n  //. > Setoid.test(null)\n  //. true\n  //. ```\n  var Setoid = $('Setoid', [], {equals: Value});\n\n  //# Ord :: TypeClass\n  //.\n  //. `TypeClass` value for [Ord][].\n  //.\n  //. ```javascript\n  //. > Ord.test(0)\n  //. true\n  //.\n  //. > Ord.test(Math.sqrt)\n  //. false\n  //. ```\n  var Ord = $('Ord', [Setoid], {lte: Value});\n\n  //# Semigroupoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroupoid][].\n  //.\n  //. ```javascript\n  //. > Semigroupoid.test(Math.sqrt)\n  //. true\n  //.\n  //. > Semigroupoid.test(0)\n  //. false\n  //. ```\n  var Semigroupoid = $('Semigroupoid', [], {compose: Value});\n\n  //# Category :: TypeClass\n  //.\n  //. `TypeClass` value for [Category][].\n  //.\n  //. ```javascript\n  //. > Category.test(Math.sqrt)\n  //. true\n  //.\n  //. > Category.test(0)\n  //. false\n  //. ```\n  var Category = $('Category', [Semigroupoid], {id: Constructor});\n\n  //# Semigroup :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroup][].\n  //.\n  //. ```javascript\n  //. > Semigroup.test('')\n  //. true\n  //.\n  //. > Semigroup.test(0)\n  //. false\n  //. ```\n  var Semigroup = $('Semigroup', [], {concat: Value});\n\n  //# Monoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Monoid][].\n  //.\n  //. ```javascript\n  //. > Monoid.test('')\n  //. true\n  //.\n  //. > Monoid.test(0)\n  //. false\n  //. ```\n  var Monoid = $('Monoid', [Semigroup], {empty: Constructor});\n\n  //# Group :: TypeClass\n  //.\n  //. `TypeClass` value for [Group][].\n  //.\n  //. ```javascript\n  //. > Group.test(Sum(0))\n  //. true\n  //.\n  //. > Group.test('')\n  //. false\n  //. ```\n  var Group = $('Group', [Monoid], {invert: Value});\n\n  //# Filterable :: TypeClass\n  //.\n  //. `TypeClass` value for [Filterable][].\n  //.\n  //. ```javascript\n  //. > Filterable.test({})\n  //. true\n  //.\n  //. > Filterable.test('')\n  //. false\n  //. ```\n  var Filterable = $('Filterable', [], {filter: Value});\n\n  //# Functor :: TypeClass\n  //.\n  //. `TypeClass` value for [Functor][].\n  //.\n  //. ```javascript\n  //. > Functor.test([])\n  //. true\n  //.\n  //. > Functor.test('')\n  //. false\n  //. ```\n  var Functor = $('Functor', [], {map: Value});\n\n  //# Bifunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Bifunctor][].\n  //.\n  //. ```javascript\n  //. > Bifunctor.test(Tuple('foo', 64))\n  //. true\n  //.\n  //. > Bifunctor.test([])\n  //. false\n  //. ```\n  var Bifunctor = $('Bifunctor', [Functor], {bimap: Value});\n\n  //# Profunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Profunctor][].\n  //.\n  //. ```javascript\n  //. > Profunctor.test(Math.sqrt)\n  //. true\n  //.\n  //. > Profunctor.test([])\n  //. false\n  //. ```\n  var Profunctor = $('Profunctor', [Functor], {promap: Value});\n\n  //# Apply :: TypeClass\n  //.\n  //. `TypeClass` value for [Apply][].\n  //.\n  //. ```javascript\n  //. > Apply.test([])\n  //. true\n  //.\n  //. > Apply.test('')\n  //. false\n  //. ```\n  var Apply = $('Apply', [Functor], {ap: Value});\n\n  //# Applicative :: TypeClass\n  //.\n  //. `TypeClass` value for [Applicative][].\n  //.\n  //. ```javascript\n  //. > Applicative.test([])\n  //. true\n  //.\n  //. > Applicative.test({})\n  //. false\n  //. ```\n  var Applicative = $('Applicative', [Apply], {of: Constructor});\n\n  //# Chain :: TypeClass\n  //.\n  //. `TypeClass` value for [Chain][].\n  //.\n  //. ```javascript\n  //. > Chain.test([])\n  //. true\n  //.\n  //. > Chain.test({})\n  //. false\n  //. ```\n  var Chain = $('Chain', [Apply], {chain: Value});\n\n  //# ChainRec :: TypeClass\n  //.\n  //. `TypeClass` value for [ChainRec][].\n  //.\n  //. ```javascript\n  //. > ChainRec.test([])\n  //. true\n  //.\n  //. > ChainRec.test({})\n  //. false\n  //. ```\n  var ChainRec = $('ChainRec', [Chain], {chainRec: Constructor});\n\n  //# Monad :: TypeClass\n  //.\n  //. `TypeClass` value for [Monad][].\n  //.\n  //. ```javascript\n  //. > Monad.test([])\n  //. true\n  //.\n  //. > Monad.test({})\n  //. false\n  //. ```\n  var Monad = $('Monad', [Applicative, Chain], {});\n\n  //# Alt :: TypeClass\n  //.\n  //. `TypeClass` value for [Alt][].\n  //.\n  //. ```javascript\n  //. > Alt.test({})\n  //. true\n  //.\n  //. > Alt.test('')\n  //. false\n  //. ```\n  var Alt = $('Alt', [Functor], {alt: Value});\n\n  //# Plus :: TypeClass\n  //.\n  //. `TypeClass` value for [Plus][].\n  //.\n  //. ```javascript\n  //. > Plus.test({})\n  //. true\n  //.\n  //. > Plus.test('')\n  //. false\n  //. ```\n  var Plus = $('Plus', [Alt], {zero: Constructor});\n\n  //# Alternative :: TypeClass\n  //.\n  //. `TypeClass` value for [Alternative][].\n  //.\n  //. ```javascript\n  //. > Alternative.test([])\n  //. true\n  //.\n  //. > Alternative.test({})\n  //. false\n  //. ```\n  var Alternative = $('Alternative', [Applicative, Plus], {});\n\n  //# Foldable :: TypeClass\n  //.\n  //. `TypeClass` value for [Foldable][].\n  //.\n  //. ```javascript\n  //. > Foldable.test({})\n  //. true\n  //.\n  //. > Foldable.test('')\n  //. false\n  //. ```\n  var Foldable = $('Foldable', [], {reduce: Value});\n\n  //# Traversable :: TypeClass\n  //.\n  //. `TypeClass` value for [Traversable][].\n  //.\n  //. ```javascript\n  //. > Traversable.test([])\n  //. true\n  //.\n  //. > Traversable.test('')\n  //. false\n  //. ```\n  var Traversable = $('Traversable', [Functor, Foldable], {traverse: Value});\n\n  //# Extend :: TypeClass\n  //.\n  //. `TypeClass` value for [Extend][].\n  //.\n  //. ```javascript\n  //. > Extend.test([])\n  //. true\n  //.\n  //. > Extend.test({})\n  //. false\n  //. ```\n  var Extend = $('Extend', [Functor], {extend: Value});\n\n  //# Comonad :: TypeClass\n  //.\n  //. `TypeClass` value for [Comonad][].\n  //.\n  //. ```javascript\n  //. > Comonad.test(Identity(0))\n  //. true\n  //.\n  //. > Comonad.test([])\n  //. false\n  //. ```\n  var Comonad = $('Comonad', [Extend], {extract: Value});\n\n  //# Contravariant :: TypeClass\n  //.\n  //. `TypeClass` value for [Contravariant][].\n  //.\n  //. ```javascript\n  //. > Contravariant.test(Math.sqrt)\n  //. true\n  //.\n  //. > Contravariant.test([])\n  //. false\n  //. ```\n  var Contravariant = $('Contravariant', [], {contramap: Value});\n\n  //  Null$prototype$toString :: Null ~> () -> String\n  function Null$prototype$toString() {\n    return 'null';\n  }\n\n  //  Null$prototype$equals :: Null ~> Null -> Boolean\n  function Null$prototype$equals(other) {\n    return true;\n  }\n\n  //  Null$prototype$lte :: Null ~> Null -> Boolean\n  function Null$prototype$lte(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$toString :: Undefined ~> () -> String\n  function Undefined$prototype$toString() {\n    return 'undefined';\n  }\n\n  //  Undefined$prototype$equals :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$equals(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$lte :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$lte(other) {\n    return true;\n  }\n\n  //  Boolean$prototype$toString :: Boolean ~> () -> String\n  function Boolean$prototype$toString() {\n    return typeof this === 'object' ?\n      'new Boolean(' + toString(this.valueOf()) + ')' :\n      this.toString();\n  }\n\n  //  Boolean$prototype$equals :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      this === other;\n  }\n\n  //  Boolean$prototype$lte :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      this === false || other === true;\n  }\n\n  //  Number$prototype$toString :: Number ~> () -> String\n  function Number$prototype$toString() {\n    return typeof this === 'object' ?\n      'new Number(' + toString(this.valueOf()) + ')' :\n      1 / this === -Infinity ? '-0' : this.toString(10);\n  }\n\n  //  Number$prototype$equals :: Number ~> Number -> Boolean\n  function Number$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      isNaN(this) && isNaN(other) || this === other;\n  }\n\n  //  Number$prototype$lte :: Number ~> Number -> Boolean\n  function Number$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      isNaN(this) || this <= other;\n  }\n\n  //  Date$prototype$toString :: Date ~> () -> String\n  function Date$prototype$toString() {\n    var x = isNaN(this.valueOf()) ? NaN : this.toISOString();\n    return 'new Date(' + toString(x) + ')';\n  }\n\n  //  Date$prototype$equals :: Date ~> Date -> Boolean\n  function Date$prototype$equals(other) {\n    return equals(this.valueOf(), other.valueOf());\n  }\n\n  //  Date$prototype$lte :: Date ~> Date -> Boolean\n  function Date$prototype$lte(other) {\n    return lte(this.valueOf(), other.valueOf());\n  }\n\n  //  RegExp$prototype$equals :: RegExp ~> RegExp -> Boolean\n  function RegExp$prototype$equals(other) {\n    return other.source === this.source &&\n           other.global === this.global &&\n           other.ignoreCase === this.ignoreCase &&\n           other.multiline === this.multiline &&\n           other.sticky === this.sticky &&\n           other.unicode === this.unicode;\n  }\n\n  //  String$empty :: () -> String\n  function String$empty() {\n    return '';\n  }\n\n  //  String$prototype$toString :: String ~> () -> String\n  function String$prototype$toString() {\n    return typeof this === 'object' ?\n      'new String(' + toString(this.valueOf()) + ')' :\n      JSON.stringify(this);\n  }\n\n  //  String$prototype$equals :: String ~> String -> Boolean\n  function String$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      this === other;\n  }\n\n  //  String$prototype$lte :: String ~> String -> Boolean\n  function String$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      this <= other;\n  }\n\n  //  String$prototype$concat :: String ~> String -> String\n  function String$prototype$concat(other) {\n    return this + other;\n  }\n\n  //  Array$empty :: () -> Array a\n  function Array$empty() {\n    return [];\n  }\n\n  //  Array$of :: a -> Array a\n  function Array$of(x) {\n    return [x];\n  }\n\n  //  Array$chainRec :: ((a -> c, b -> c, a) -> Array c, a) -> Array b\n  function Array$chainRec(f, x) {\n    var result = [];\n    var nil = {};\n    var todo = {head: x, tail: nil};\n    while (todo !== nil) {\n      var more = nil;\n      var steps = f(iterationNext, iterationDone, todo.head);\n      for (var idx = 0; idx < steps.length; idx += 1) {\n        var step = steps[idx];\n        if (step.done) {\n          result.push(step.value);\n        } else {\n          more = {head: step.value, tail: more};\n        }\n      }\n      todo = todo.tail;\n      while (more !== nil) {\n        todo = {head: more.head, tail: todo};\n        more = more.tail;\n      }\n    }\n    return result;\n  }\n\n  //  Array$zero :: () -> Array a\n  function Array$zero() {\n    return [];\n  }\n\n  //  Array$prototype$toString :: Array a ~> () -> String\n  function Array$prototype$toString() {\n    var reprs = this.map(toString);\n    var keys = Object.keys(this).sort();\n    for (var idx = 0; idx < keys.length; idx += 1) {\n      var k = keys[idx];\n      if (!/^\\d+$/.test(k)) {\n        reprs.push(toString(k) + ': ' + toString(this[k]));\n      }\n    }\n    return '[' + reprs.join(', ') + ']';\n  }\n\n  //  Array$prototype$equals :: Array a ~> Array a -> Boolean\n  function Array$prototype$equals(other) {\n    if (other.length !== this.length) return false;\n    for (var idx = 0; idx < this.length; idx += 1) {\n      if (!equals(this[idx], other[idx])) return false;\n    }\n    return true;\n  }\n\n  //  Array$prototype$lte :: Array a ~> Array a -> Boolean\n  function Array$prototype$lte(other) {\n    for (var idx = 0; true; idx += 1) {\n      if (idx === this.length) return true;\n      if (idx === other.length) return false;\n      if (!equals(this[idx], other[idx])) return lte(this[idx], other[idx]);\n    }\n  }\n\n  //  Array$prototype$concat :: Array a ~> Array a -> Array a\n  function Array$prototype$concat(other) {\n    return this.concat(other);\n  }\n\n  //  Array$prototype$filter :: Array a ~> (a -> Boolean) -> Array a\n  function Array$prototype$filter(pred) {\n    return this.filter(function(x) { return pred(x); });\n  }\n\n  //  Array$prototype$map :: Array a ~> (a -> b) -> Array b\n  function Array$prototype$map(f) {\n    return this.map(function(x) { return f(x); });\n  }\n\n  //  Array$prototype$ap :: Array a ~> Array (a -> b) -> Array b\n  function Array$prototype$ap(fs) {\n    var result = [];\n    for (var idx = 0; idx < fs.length; idx += 1) {\n      for (var idx2 = 0; idx2 < this.length; idx2 += 1) {\n        result.push(fs[idx](this[idx2]));\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$chain :: Array a ~> (a -> Array b) -> Array b\n  function Array$prototype$chain(f) {\n    var result = [];\n    for (var idx = 0; idx < this.length; idx += 1) {\n      for (var idx2 = 0, xs = f(this[idx]); idx2 < xs.length; idx2 += 1) {\n        result.push(xs[idx2]);\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$alt :: Array a ~> Array a -> Array a\n  var Array$prototype$alt = Array$prototype$concat;\n\n  //  Array$prototype$reduce :: Array a ~> ((b, a) -> b, b) -> b\n  function Array$prototype$reduce(f, initial) {\n    var acc = initial;\n    for (var idx = 0; idx < this.length; idx += 1) acc = f(acc, this[idx]);\n    return acc;\n  }\n\n  //  Array$prototype$traverse :: Applicative f => Array a ~> (TypeRep f, a -> f b) -> f (Array b)\n  function Array$prototype$traverse(typeRep, f) {\n    var xs = this;\n    function go(idx, n) {\n      switch (n) {\n        case 0: return of(typeRep, []);\n        case 2: return lift2(pair, f(xs[idx]), f(xs[idx + 1]));\n        default:\n          var m = Math.floor(n / 4) * 2;\n          return lift2(concat_, go(idx, m), go(idx + m, n - m));\n      }\n    }\n    return this.length % 2 === 1 ?\n      lift2(concat_, map(Array$of, f(this[0])), go(1, this.length - 1)) :\n      go(0, this.length);\n  }\n\n  //  Array$prototype$extend :: Array a ~> (Array a -> b) -> Array b\n  function Array$prototype$extend(f) {\n    return this.map(function(_, idx, xs) { return f(xs.slice(idx)); });\n  }\n\n  //  Arguments$prototype$toString :: Arguments ~> String\n  function Arguments$prototype$toString() {\n    var args = Array.prototype.map.call(this, toString).join(', ');\n    return '(function () { return arguments; }(' + args + '))';\n  }\n\n  //  Arguments$prototype$equals :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$equals(other) {\n    return Array$prototype$equals.call(this, other);\n  }\n\n  //  Arguments$prototype$lte :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$lte(other) {\n    return Array$prototype$lte.call(this, other);\n  }\n\n  //  Error$prototype$toString :: Error ~> () -> String\n  function Error$prototype$toString() {\n    return 'new ' + this.name + '(' + toString(this.message) + ')';\n  }\n\n  //  Error$prototype$equals :: Error ~> Error -> Boolean\n  function Error$prototype$equals(other) {\n    return equals(this.name, other.name) &&\n           equals(this.message, other.message);\n  }\n\n  //  Object$empty :: () -> StrMap a\n  function Object$empty() {\n    return {};\n  }\n\n  //  Object$zero :: () -> StrMap a\n  function Object$zero() {\n    return {};\n  }\n\n  //  Object$prototype$toString :: StrMap a ~> () -> String\n  function Object$prototype$toString() {\n    var reprs = [];\n    var keys = Object.keys(this).sort();\n    for (var idx = 0; idx < keys.length; idx += 1) {\n      var k = keys[idx];\n      reprs.push(toString(k) + ': ' + toString(this[k]));\n    }\n    return '{' + reprs.join(', ') + '}';\n  }\n\n  //  Object$prototype$equals :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$equals(other) {\n    var self = this;\n    var keys = Object.keys(this).sort();\n    return equals(keys, Object.keys(other).sort()) &&\n           keys.every(function(k) { return equals(self[k], other[k]); });\n  }\n\n  //  Object$prototype$lte :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$lte(other) {\n    var theseKeys = Object.keys(this).sort();\n    var otherKeys = Object.keys(other).sort();\n    while (true) {\n      if (theseKeys.length === 0) return true;\n      if (otherKeys.length === 0) return false;\n      var k = theseKeys.shift();\n      var z = otherKeys.shift();\n      if (k < z) return true;\n      if (k > z) return false;\n      if (!equals(this[k], other[k])) return lte(this[k], other[k]);\n    }\n  }\n\n  //  Object$prototype$concat :: StrMap a ~> StrMap a -> StrMap a\n  function Object$prototype$concat(other) {\n    var result = {};\n    function assign(k) { result[k] = this[k]; }\n    forEachKey(this, assign);\n    forEachKey(other, assign);\n    return result;\n  }\n\n  //  Object$prototype$filter :: StrMap a ~> (a -> Boolean) -> StrMap a\n  function Object$prototype$filter(pred) {\n    var result = {};\n    forEachKey(this, function(k) { if (pred(this[k])) result[k] = this[k]; });\n    return result;\n  }\n\n  //  Object$prototype$map :: StrMap a ~> (a -> b) -> StrMap b\n  function Object$prototype$map(f) {\n    var result = {};\n    forEachKey(this, function(k) { result[k] = f(this[k]); });\n    return result;\n  }\n\n  //  Object$prototype$ap :: StrMap a ~> StrMap (a -> b) -> StrMap b\n  function Object$prototype$ap(other) {\n    var result = {};\n    forEachKey(this, function(k) {\n      if (has(k, other)) result[k] = other[k](this[k]);\n    });\n    return result;\n  }\n\n  //  Object$prototype$alt :: StrMap a ~> StrMap a -> StrMap a\n  var Object$prototype$alt = Object$prototype$concat;\n\n  //  Object$prototype$reduce :: StrMap a ~> ((b, a) -> b, b) -> b\n  function Object$prototype$reduce(f, initial) {\n    var self = this;\n    function reducer(acc, k) { return f(acc, self[k]); }\n    return Object.keys(this).sort().reduce(reducer, initial);\n  }\n\n  //  Object$prototype$traverse :: Applicative f => StrMap a ~> (TypeRep f, a -> f b) -> f (StrMap b)\n  function Object$prototype$traverse(typeRep, f) {\n    var self = this;\n    return Object.keys(this).reduce(function(applicative, k) {\n      function set(o) {\n        return function(v) {\n          var singleton = {}; singleton[k] = v;\n          return Object$prototype$concat.call(o, singleton);\n        };\n      }\n      return lift2(set, applicative, f(self[k]));\n    }, of(typeRep, {}));\n  }\n\n  //  Function$id :: () -> a -> a\n  function Function$id() {\n    return identity;\n  }\n\n  //  Function$of :: b -> (a -> b)\n  function Function$of(x) {\n    return function(_) { return x; };\n  }\n\n  //  Function$chainRec :: ((a -> c, b -> c, a) -> (z -> c), a) -> (z -> b)\n  function Function$chainRec(f, x) {\n    return function(a) {\n      var step = iterationNext(x);\n      while (!step.done) {\n        step = f(iterationNext, iterationDone, step.value)(a);\n      }\n      return step.value;\n    };\n  }\n\n  //  Function$prototype$equals :: Function ~> Function -> Boolean\n  function Function$prototype$equals(other) {\n    return other === this;\n  }\n\n  //  Function$prototype$compose :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$compose(other) {\n    var semigroupoid = this;\n    return function(x) { return other(semigroupoid(x)); };\n  }\n\n  //  Function$prototype$map :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$map(f) {\n    var functor = this;\n    return function(x) { return f(functor(x)); };\n  }\n\n  //  Function$prototype$promap :: (b -> c) ~> (a -> b, c -> d) -> (a -> d)\n  function Function$prototype$promap(f, g) {\n    var profunctor = this;\n    return function(x) { return g(profunctor(f(x))); };\n  }\n\n  //  Function$prototype$ap :: (a -> b) ~> (a -> b -> c) -> (a -> c)\n  function Function$prototype$ap(f) {\n    var apply = this;\n    return function(x) { return f(x)(apply(x)); };\n  }\n\n  //  Function$prototype$chain :: (a -> b) ~> (b -> a -> c) -> (a -> c)\n  function Function$prototype$chain(f) {\n    var chain = this;\n    return function(x) { return f(chain(x))(x); };\n  }\n\n  //  Function$prototype$extend :: Semigroup a => (a -> b) ~> ((a -> b) -> c) -> (a -> c)\n  function Function$prototype$extend(f) {\n    var extend = this;\n    return function(x) {\n      return f(function(y) { return extend(concat(x, y)); });\n    };\n  }\n\n  //  Function$prototype$contramap :: (b -> c) ~> (a -> b) -> (a -> c)\n  function Function$prototype$contramap(f) {\n    var contravariant = this;\n    return function(x) { return contravariant(f(x)); };\n  }\n\n  /* eslint-disable key-spacing */\n  var implementations = {\n    Null: {\n      'prototype': {\n        'toString':                 Null$prototype$toString,\n        'fantasy-land/equals':      Null$prototype$equals,\n        'fantasy-land/lte':         Null$prototype$lte\n      }\n    },\n    Undefined: {\n      'prototype': {\n        'toString':                 Undefined$prototype$toString,\n        'fantasy-land/equals':      Undefined$prototype$equals,\n        'fantasy-land/lte':         Undefined$prototype$lte\n      }\n    },\n    Boolean: {\n      'prototype': {\n        'toString':                 Boolean$prototype$toString,\n        'fantasy-land/equals':      Boolean$prototype$equals,\n        'fantasy-land/lte':         Boolean$prototype$lte\n      }\n    },\n    Number: {\n      'prototype': {\n        'toString':                 Number$prototype$toString,\n        'fantasy-land/equals':      Number$prototype$equals,\n        'fantasy-land/lte':         Number$prototype$lte\n      }\n    },\n    Date: {\n      'prototype': {\n        'toString':                 Date$prototype$toString,\n        'fantasy-land/equals':      Date$prototype$equals,\n        'fantasy-land/lte':         Date$prototype$lte\n      }\n    },\n    RegExp: {\n      'prototype': {\n        'fantasy-land/equals':      RegExp$prototype$equals\n      }\n    },\n    String: {\n      'fantasy-land/empty':         String$empty,\n      'prototype': {\n        'toString':                 String$prototype$toString,\n        'fantasy-land/equals':      String$prototype$equals,\n        'fantasy-land/lte':         String$prototype$lte,\n        'fantasy-land/concat':      String$prototype$concat\n      }\n    },\n    Array: {\n      'fantasy-land/empty':         Array$empty,\n      'fantasy-land/of':            Array$of,\n      'fantasy-land/chainRec':      Array$chainRec,\n      'fantasy-land/zero':          Array$zero,\n      'prototype': {\n        'toString':                 Array$prototype$toString,\n        'fantasy-land/equals':      Array$prototype$equals,\n        'fantasy-land/lte':         Array$prototype$lte,\n        'fantasy-land/concat':      Array$prototype$concat,\n        'fantasy-land/filter':      Array$prototype$filter,\n        'fantasy-land/map':         Array$prototype$map,\n        'fantasy-land/ap':          Array$prototype$ap,\n        'fantasy-land/chain':       Array$prototype$chain,\n        'fantasy-land/alt':         Array$prototype$alt,\n        'fantasy-land/reduce':      Array$prototype$reduce,\n        'fantasy-land/traverse':    Array$prototype$traverse,\n        'fantasy-land/extend':      Array$prototype$extend\n      }\n    },\n    Arguments: {\n      'prototype': {\n        'toString':                 Arguments$prototype$toString,\n        'fantasy-land/equals':      Arguments$prototype$equals,\n        'fantasy-land/lte':         Arguments$prototype$lte\n      }\n    },\n    Error: {\n      'prototype': {\n        'toString':                 Error$prototype$toString,\n        'fantasy-land/equals':      Error$prototype$equals\n      }\n    },\n    Object: {\n      'fantasy-land/empty':         Object$empty,\n      'fantasy-land/zero':          Object$zero,\n      'prototype': {\n        'toString':                 Object$prototype$toString,\n        'fantasy-land/equals':      Object$prototype$equals,\n        'fantasy-land/lte':         Object$prototype$lte,\n        'fantasy-land/concat':      Object$prototype$concat,\n        'fantasy-land/filter':      Object$prototype$filter,\n        'fantasy-land/map':         Object$prototype$map,\n        'fantasy-land/ap':          Object$prototype$ap,\n        'fantasy-land/alt':         Object$prototype$alt,\n        'fantasy-land/reduce':      Object$prototype$reduce,\n        'fantasy-land/traverse':    Object$prototype$traverse\n      }\n    },\n    Function: {\n      'fantasy-land/id':            Function$id,\n      'fantasy-land/of':            Function$of,\n      'fantasy-land/chainRec':      Function$chainRec,\n      'prototype': {\n        'fantasy-land/equals':      Function$prototype$equals,\n        'fantasy-land/compose':     Function$prototype$compose,\n        'fantasy-land/map':         Function$prototype$map,\n        'fantasy-land/promap':      Function$prototype$promap,\n        'fantasy-land/ap':          Function$prototype$ap,\n        'fantasy-land/chain':       Function$prototype$chain,\n        'fantasy-land/extend':      Function$prototype$extend,\n        'fantasy-land/contramap':   Function$prototype$contramap\n      }\n    }\n  };\n  /* eslint-enable key-spacing */\n\n  //# toString :: a -> String\n  //.\n  //. Returns a useful string representation of its argument.\n  //.\n  //. Dispatches to the argument's `toString` method if appropriate.\n  //.\n  //. Where practical, `equals(eval(toString(x)), x) = true`.\n  //.\n  //. `toString` implementations are provided for the following built-in types:\n  //. Null, Undefined, Boolean, Number, Date, String, Array, Arguments, Error,\n  //. and Object.\n  //.\n  //. ```javascript\n  //. > toString(-0)\n  //. '-0'\n  //.\n  //. > toString(['foo', 'bar', 'baz'])\n  //. '[\"foo\", \"bar\", \"baz\"]'\n  //.\n  //. > toString({x: 1, y: 2, z: 3})\n  //. '{\"x\": 1, \"y\": 2, \"z\": 3}'\n  //.\n  //. > toString(Cons(1, Cons(2, Cons(3, Nil))))\n  //. 'Cons(1, Cons(2, Cons(3, Nil)))'\n  //. ```\n  var toString = (function() {\n    //  $seen :: Array Any\n    var $seen = [];\n\n    function call(method, x) {\n      $seen.push(x);\n      try { return method.call(x); } finally { $seen.pop(); }\n    }\n\n    return function toString(x) {\n      if ($seen.indexOf(x) >= 0) return '<Circular>';\n\n      var xType = type(x);\n      if (xType === 'Object') {\n        var result;\n        try { result = call(x.toString, x); } catch (err) {}\n        if (result != null && result !== '[object Object]') return result;\n      }\n\n      return call(implPath([xType, 'prototype', 'toString']) || x.toString, x);\n    };\n  }());\n\n  //# equals :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and equal according\n  //. to the type's [`fantasy-land/equals`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/equals` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, RegExp, String,\n  //. Array, Arguments, Error, Object, and Function.\n  //.\n  //. The algorithm supports circular data structures. Two arrays are equal\n  //. if they have the same index paths and for each path have equal values.\n  //. Two arrays which represent `[1, [1, [1, [1, [1, ...]]]]]`, for example,\n  //. are equal even if their internal structures differ. Two objects are equal\n  //. if they have the same property paths and for each path have equal values.\n  //.\n  //. ```javascript\n  //. > equals(0, -0)\n  //. true\n  //.\n  //. > equals(NaN, NaN)\n  //. true\n  //.\n  //. > equals(Cons('foo', Cons('bar', Nil)), Cons('foo', Cons('bar', Nil)))\n  //. true\n  //.\n  //. > equals(Cons('foo', Cons('bar', Nil)), Cons('bar', Cons('foo', Nil)))\n  //. false\n  //. ```\n  var equals = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function equals(x, y) {\n      if (!sameType(x, y)) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some(function(p) { return p[0] === x && p[1] === y; })) {\n        return true;\n      }\n\n      $pairs.push([x, y]);\n      try {\n        return Setoid.test(x) && Setoid.test(y) && Setoid.methods.equals(x)(y);\n      } finally {\n        $pairs.pop();\n      }\n    };\n  }());\n\n  //# lt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. less than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`gt`](#gt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lt(0, 0)\n  //. false\n  //.\n  //. > lt(0, 1)\n  //. true\n  //.\n  //. > lt(1, 0)\n  //. false\n  //. ```\n  function lt(x, y) {\n    return sameType(x, y) && !lte(y, x);\n  }\n\n  //# lte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is less than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/lte` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, String, Array,\n  //. Arguments, and Object.\n  //.\n  //. The algorithm supports circular data structures in the same manner as\n  //. [`equals`](#equals).\n  //.\n  //. See also [`lt`](#lt), [`gt`](#gt), and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lte(0, 0)\n  //. true\n  //.\n  //. > lte(0, 1)\n  //. true\n  //.\n  //. > lte(1, 0)\n  //. false\n  //. ```\n  var lte = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function lte(x, y) {\n      if (!sameType(x, y)) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some(function(p) { return p[0] === x && p[1] === y; })) {\n        return equals(x, y);\n      }\n\n      $pairs.push([x, y]);\n      try {\n        return Ord.test(x) && Ord.test(y) && Ord.methods.lte(x)(y);\n      } finally {\n        $pairs.pop();\n      }\n    };\n  }());\n\n  //# gt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. greater than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > gt(0, 0)\n  //. false\n  //.\n  //. > gt(0, 1)\n  //. false\n  //.\n  //. > gt(1, 0)\n  //. true\n  //. ```\n  function gt(x, y) {\n    return lt(y, x);\n  }\n\n  //# gte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is greater than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gt`](#gt).\n  //.\n  //. ```javascript\n  //. > gte(0, 0)\n  //. true\n  //.\n  //. > gte(0, 1)\n  //. false\n  //.\n  //. > gte(1, 0)\n  //. true\n  //. ```\n  function gte(x, y) {\n    return lte(y, x);\n  }\n\n  //# min :: Ord a => (a, a) -> a\n  //.\n  //. Returns the smaller of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > min(10, 2)\n  //. 2\n  //.\n  //. > min(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('1999-12-31')\n  //.\n  //. > min('10', '2')\n  //. '10'\n  //. ```\n  function min(x, y) {\n    return lte(x, y) ? x : y;\n  }\n\n  //# max :: Ord a => (a, a) -> a\n  //.\n  //. Returns the larger of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > max(10, 2)\n  //. 10\n  //.\n  //. > max(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('2000-01-01')\n  //.\n  //. > max('10', '2')\n  //. '2'\n  //. ```\n  function max(x, y) {\n    return lte(x, y) ? y : x;\n  }\n\n  //# compose :: Semigroupoid c => (c j k, c i j) -> c i k\n  //.\n  //. Function wrapper for [`fantasy-land/compose`][].\n  //.\n  //. `fantasy-land/compose` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > compose(Math.sqrt, x => x + 1)(99)\n  //. 10\n  //. ```\n  function compose(x, y) {\n    return Semigroupoid.methods.compose(y)(x);\n  }\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. Function wrapper for [`fantasy-land/id`][].\n  //.\n  //. `fantasy-land/id` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > id(Function)('foo')\n  //. 'foo'\n  //. ```\n  function id(typeRep) {\n    return Category.methods.id(typeRep)();\n  }\n\n  //# concat :: Semigroup a => (a, a) -> a\n  //.\n  //. Function wrapper for [`fantasy-land/concat`][].\n  //.\n  //. `fantasy-land/concat` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > concat('abc', 'def')\n  //. 'abcdef'\n  //.\n  //. > concat([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > concat({x: 1, y: 2}, {y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > concat(Cons('foo', Cons('bar', Cons('baz', Nil))), Cons('quux', Nil))\n  //. Cons('foo', Cons('bar', Cons('baz', Cons('quux', Nil))))\n  //. ```\n  function concat(x, y) {\n    return Semigroup.methods.concat(x)(y);\n  }\n\n  //# empty :: Monoid m => TypeRep m -> m\n  //.\n  //. Function wrapper for [`fantasy-land/empty`][].\n  //.\n  //. `fantasy-land/empty` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > empty(String)\n  //. ''\n  //.\n  //. > empty(Array)\n  //. []\n  //.\n  //. > empty(Object)\n  //. {}\n  //.\n  //. > empty(List)\n  //. Nil\n  //. ```\n  function empty(typeRep) {\n    return Monoid.methods.empty(typeRep)();\n  }\n\n  //# invert :: Group g => g -> g\n  //.\n  //. Function wrapper for [`fantasy-land/invert`][].\n  //.\n  //. ```javascript\n  //. > invert(Sum(5))\n  //. Sum(-5)\n  //. ```\n  function invert(group) {\n    return Group.methods.invert(group)();\n  }\n\n  //# filter :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/filter`][]. Discards every element\n  //. which does not satisfy the predicate.\n  //.\n  //. `fantasy-land/filter` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`reject`](#reject).\n  //.\n  //. ```javascript\n  //. > filter(x => x % 2 == 1, [1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > filter(x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {x: 1, z: 3}\n  //.\n  //. > filter(x => x % 2 == 1, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(1, Cons(3, Nil))\n  //.\n  //. > filter(x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > filter(x => x % 2 == 1, Just(0))\n  //. Nothing\n  //.\n  //. > filter(x => x % 2 == 1, Just(1))\n  //. Just(1)\n  //. ```\n  function filter(pred, filterable) {\n    return Filterable.methods.filter(filterable)(pred);\n  }\n\n  //# reject :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards every element which satisfies the predicate.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > reject(x => x % 2 == 1, [1, 2, 3])\n  //. [2]\n  //.\n  //. > reject(x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {y: 2}\n  //.\n  //. > reject(x => x % 2 == 1, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(2, Nil)\n  //.\n  //. > reject(x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > reject(x => x % 2 == 1, Just(0))\n  //. Just(0)\n  //.\n  //. > reject(x => x % 2 == 1, Just(1))\n  //. Nothing\n  //. ```\n  function reject(pred, filterable) {\n    return filter(function(x) { return !pred(x); }, filterable);\n  }\n\n  //# takeWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`dropWhile`](#dropWhile).\n  //.\n  //. ```javascript\n  //. > takeWhile(s => /x/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx']\n  //.\n  //. > takeWhile(s => /y/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy']\n  //.\n  //. > takeWhile(s => /z/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. []\n  //. ```\n  function takeWhile(pred, filterable) {\n    var take = true;\n    return filter(function(x) { return take = take && pred(x); }, filterable);\n  }\n\n  //# dropWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Retains the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`takeWhile`](#takeWhile).\n  //.\n  //. ```javascript\n  //. > dropWhile(s => /x/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['yz', 'zx', 'zy']\n  //.\n  //. > dropWhile(s => /y/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xz', 'yx', 'yz', 'zx', 'zy']\n  //.\n  //. > dropWhile(s => /z/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx', 'yz', 'zx', 'zy']\n  //. ```\n  function dropWhile(pred, filterable) {\n    var take = false;\n    return filter(function(x) { return take = take || !pred(x); }, filterable);\n  }\n\n  //# map :: Functor f => (a -> b, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/map`][].\n  //.\n  //. `fantasy-land/map` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > map(Math.sqrt, [1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > map(Math.sqrt, {x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > map(Math.sqrt, s => s.length)('Sanctuary')\n  //. 3\n  //.\n  //. > map(Math.sqrt, Tuple('foo', 64))\n  //. Tuple('foo', 8)\n  //.\n  //. > map(Math.sqrt, Nil)\n  //. Nil\n  //.\n  //. > map(Math.sqrt, Cons(1, Cons(4, Cons(9, Nil))))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function map(f, functor) {\n    return Functor.methods.map(functor)(f);\n  }\n\n  //# flip :: Functor f => (f (a -> b), a) -> f b\n  //.\n  //. Maps over the given functions, applying each to the given value.\n  //.\n  //. This function is derived from [`map`](#map).\n  //.\n  //. ```javascript\n  //. > flip(x => y => x + y, '!')('foo')\n  //. 'foo!'\n  //.\n  //. > flip([Math.floor, Math.ceil], 1.5)\n  //. [1, 2]\n  //.\n  //. > flip({floor: Math.floor, ceil: Math.ceil}, 1.5)\n  //. {floor: 1, ceil: 2}\n  //.\n  //. > flip(Cons(Math.floor, Cons(Math.ceil, Nil)), 1.5)\n  //. Cons(1, Cons(2, Nil))\n  //. ```\n  function flip(functor, x) {\n    return Functor.methods.map(functor)(thrush(x));\n  }\n\n  //# bimap :: Bifunctor f => (a -> b, c -> d, f a c) -> f b d\n  //.\n  //. Function wrapper for [`fantasy-land/bimap`][].\n  //.\n  //. ```javascript\n  //. > bimap(s => s.toUpperCase(), Math.sqrt, Tuple('foo', 64))\n  //. Tuple('FOO', 8)\n  //. ```\n  function bimap(f, g, bifunctor) {\n    return Bifunctor.methods.bimap(bifunctor)(f, g);\n  }\n\n  //# mapLeft :: Bifunctor f => (a -> b, f a c) -> f b c\n  //.\n  //. Maps the given function over the left side of a Bifunctor.\n  //.\n  //. ```javascript\n  //. > mapLeft(Math.sqrt, Tuple(64, 9))\n  //. Tuple(8, 9)\n  //. ```\n  function mapLeft(f, bifunctor) {\n    return bimap(f, identity, bifunctor);\n  }\n\n  //# promap :: Profunctor p => (a -> b, c -> d, p b c) -> p a d\n  //.\n  //. Function wrapper for [`fantasy-land/promap`][].\n  //.\n  //. `fantasy-land/promap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > promap(Math.abs, x => x + 1, Math.sqrt)(-100)\n  //. 11\n  //. ```\n  function promap(f, g, profunctor) {\n    return Profunctor.methods.promap(profunctor)(f, g);\n  }\n\n  //# ap :: Apply f => (f (a -> b), f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/ap`][].\n  //.\n  //. `fantasy-land/ap` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > ap([Math.sqrt, x => x * x], [1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > ap({a: Math.sqrt, b: x => x * x}, {a: 16, b: 10, c: 1})\n  //. {a: 4, b: 100}\n  //.\n  //. > ap(s => n => s.slice(0, n), s => Math.ceil(s.length / 2))('Haskell')\n  //. 'Hask'\n  //.\n  //. > ap(Identity(Math.sqrt), Identity(64))\n  //. Identity(8)\n  //.\n  //. > ap(Cons(Math.sqrt, Cons(x => x * x, Nil)), Cons(16, Cons(100, Nil)))\n  //. Cons(4, Cons(10, Cons(256, Cons(10000, Nil))))\n  //. ```\n  function ap(applyF, applyX) {\n    return Apply.methods.ap(applyX)(applyF);\n  }\n\n  //# lift2 :: Apply f => (a -> b -> c, f a, f b) -> f c\n  //.\n  //. Lifts `a -> b -> c` to `Apply f => f a -> f b -> f c` and returns the\n  //. result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift3`](#lift3).\n  //.\n  //. ```javascript\n  //. > lift2(x => y => Math.pow(x, y), [10], [1, 2, 3])\n  //. [10, 100, 1000]\n  //.\n  //. > lift2(x => y => Math.pow(x, y), Identity(10), Identity(3))\n  //. Identity(1000)\n  //. ```\n  function lift2(f, x, y) {\n    return ap(map(f, x), y);\n  }\n\n  //# lift3 :: Apply f => (a -> b -> c -> d, f a, f b, f c) -> f d\n  //.\n  //. Lifts `a -> b -> c -> d` to `Apply f => f a -> f b -> f c -> f d` and\n  //. returns the result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift2`](#lift2).\n  //.\n  //. ```javascript\n  //. > lift3(x => y => z => x + z + y, ['<'], ['>'], ['foo', 'bar', 'baz'])\n  //. ['<foo>', '<bar>', '<baz>']\n  //.\n  //. > lift3(x => y => z => x + z + y, Identity('<'), Identity('>'), Identity('baz'))\n  //. Identity('<baz>')\n  //. ```\n  function lift3(f, x, y, z) {\n    return ap(ap(map(f, x), y), z);\n  }\n\n  //# apFirst :: Apply f => (f a, f b) -> f a\n  //.\n  //. Combines two effectful actions, keeping only the result of the first.\n  //. Equivalent to Haskell's `(<*)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > apFirst([1, 2], [3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > apFirst(Identity(1), Identity(2))\n  //. Identity(1)\n  //. ```\n  function apFirst(x, y) {\n    return lift2(constant, x, y);\n  }\n\n  //# apSecond :: Apply f => (f a, f b) -> f b\n  //.\n  //. Combines two effectful actions, keeping only the result of the second.\n  //. Equivalent to Haskell's `(*>)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > apSecond([1, 2], [3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > apSecond(Identity(1), Identity(2))\n  //. Identity(2)\n  //. ```\n  function apSecond(x, y) {\n    return lift2(constant(identity), x, y);\n  }\n\n  //# of :: Applicative f => (TypeRep f, a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/of`][].\n  //.\n  //. `fantasy-land/of` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > of(Array, 42)\n  //. [42]\n  //.\n  //. > of(Function, 42)(null)\n  //. 42\n  //.\n  //. > of(List, 42)\n  //. Cons(42, Nil)\n  //. ```\n  function of(typeRep, x) {\n    return Applicative.methods.of(typeRep)(x);\n  }\n\n  //# append :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > append(3, [1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > append(3, Cons(1, Cons(2, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function append(x, xs) {\n    return concat(xs, of(xs.constructor, x));\n  }\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > prepend(1, [2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > prepend(1, Cons(2, Cons(3, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function prepend(x, xs) {\n    return concat(of(xs.constructor, x), xs);\n  }\n\n  //# chain :: Chain m => (a -> m b, m a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chain`][].\n  //.\n  //. `fantasy-land/chain` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > chain(x => [x, x], [1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > chain(x => x % 2 == 1 ? of(List, x) : Nil, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(1, Cons(3, Nil))\n  //.\n  //. > chain(n => s => s.slice(0, n), s => Math.ceil(s.length / 2))('Haskell')\n  //. 'Hask'\n  //. ```\n  function chain(f, chain_) {\n    return Chain.methods.chain(chain_)(f);\n  }\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. This function is derived from [`chain`](#chain).\n  //.\n  //. ```javascript\n  //. > join([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > join([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > join(Identity(Identity(1)))\n  //. Identity(1)\n  //. ```\n  function join(chain_) {\n    return chain(identity, chain_);\n  }\n\n  //# chainRec :: ChainRec m => (TypeRep m, (a -> c, b -> c, a) -> m c, a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chainRec`][].\n  //.\n  //. `fantasy-land/chainRec` implementations are provided for the following\n  //. built-in types: Array.\n  //.\n  //. ```javascript\n  //. > chainRec(\n  //. .   Array,\n  //. .   (next, done, s) => s.length == 2 ? [s + '!', s + '?'].map(done)\n  //. .                                    : [s + 'o', s + 'n'].map(next),\n  //. .   ''\n  //. . )\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep, f, x) {\n    return ChainRec.methods.chainRec(typeRep)(f, x);\n  }\n\n  //# alt :: Alt f => (f a, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/alt`][].\n  //.\n  //. `fantasy-land/alt` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > alt([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > alt(Nothing, Nothing)\n  //. Nothing\n  //.\n  //. > alt(Nothing, Just(1))\n  //. Just(1)\n  //.\n  //. > alt(Just(2), Just(3))\n  //. Just(2)\n  //. ```\n  function alt(x, y) {\n    return Alt.methods.alt(x)(y);\n  }\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/zero`][].\n  //.\n  //. `fantasy-land/zero` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > zero(Array)\n  //. []\n  //.\n  //. > zero(Object)\n  //. {}\n  //.\n  //. > zero(Maybe)\n  //. Nothing\n  //. ```\n  function zero(typeRep) {\n    return Plus.methods.zero(typeRep)();\n  }\n\n  //# reduce :: Foldable f => ((b, a) -> b, b, f a) -> b\n  //.\n  //. Function wrapper for [`fantasy-land/reduce`][].\n  //.\n  //. `fantasy-land/reduce` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > reduce((xs, x) => [x].concat(xs), [], [1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reduce(concat, '', Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. 'foobarbaz'\n  //. ```\n  function reduce(f, x, foldable) {\n    return Foldable.methods.reduce(foldable)(f, x);\n  }\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > size([])\n  //. 0\n  //.\n  //. > size(['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > size(Nil)\n  //. 0\n  //.\n  //. > size(Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. 3\n  //. ```\n  function size(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray(foldable)) return foldable.length;\n    return reduce(function(n, _) { return n + 1; }, 0, foldable);\n  }\n\n  //# elem :: (Setoid a, Foldable f) => (a, f a) -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` if the\n  //. value is an element of the structure; `false` otherwise.\n  //.\n  //. This function is derived from [`equals`](#equals) and\n  //. [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > elem('c', ['a', 'b', 'c'])\n  //. true\n  //.\n  //. > elem('x', ['a', 'b', 'c'])\n  //. false\n  //.\n  //. > elem(3, {x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > elem(8, {x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > elem(0, Just(0))\n  //. true\n  //.\n  //. > elem(0, Just(1))\n  //. false\n  //.\n  //. > elem(0, Nothing)\n  //. false\n  //. ```\n  function elem(x, foldable) {\n    return reduce(function(b, y) { return b || equals(x, y); },\n                  false,\n                  foldable);\n  }\n\n  //# foldMap :: (Monoid m, Foldable f) => (TypeRep m, a -> m, f a) -> m\n  //.\n  //. Deconstructs a foldable by mapping every element to a monoid and\n  //. concatenating the results.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > foldMap(String, f => f.name, [Math.sin, Math.cos, Math.tan])\n  //. 'sincostan'\n  //. ```\n  function foldMap(typeRep, f, foldable) {\n    return reduce(function(monoid, x) { return concat(monoid, f(x)); },\n                  empty(typeRep),\n                  foldable);\n  }\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > reverse([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reverse(Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(3, Cons(2, Cons(1, Nil)))\n  //. ```\n  function reverse(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray(foldable)) return foldable.slice().reverse();\n    var F = foldable.constructor;\n    return reduce(function(xs, x) { return concat(of(F, x), xs); },\n                  empty(F),\n                  foldable);\n  }\n\n  //# sort :: (Ord a, Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) for comparisons.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > sort(['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > sort([Just(2), Nothing, Just(1)])\n  //. [Nothing, Just(1), Just(2)]\n  //.\n  //. > sort(Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. Cons('bar', Cons('baz', Cons('foo', Nil)))\n  //. ```\n  function sort(foldable) {\n    return sortBy(identity, foldable);\n  }\n\n  //# sortBy :: (Ord b, Applicative f, Foldable f, Monoid (f a)) => (a -> b, f a) -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) to compare the values produced by applying the\n  //. given function to each element of the structure.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > sortBy(s => s.length, ['red', 'green', 'blue'])\n  //. ['red', 'blue', 'green']\n  //.\n  //. > sortBy(s => s.length, ['black', 'white'])\n  //. ['black', 'white']\n  //.\n  //. > sortBy(s => s.length, ['white', 'black'])\n  //. ['white', 'black']\n  //.\n  //. > sortBy(s => s.length, Cons('red', Cons('green', Cons('blue', Nil))))\n  //. Cons('red', Cons('blue', Cons('green', Nil)))\n  //. ```\n  function sortBy(f, foldable) {\n    var rs = reduce(function(rs, x) {\n      rs.push({idx: rs.length, x: x, fx: f(x)});\n      return rs;\n    }, [], foldable);\n\n    var lte_ = (function(r) {\n      switch (typeof (r && r.fx)) {\n        case 'number':  return function(x, y) { return x <= y || x !== x; };\n        case 'string':  return function(x, y) { return x <= y; };\n        default:        return lte;\n      }\n    }(rs[0]));\n\n    rs.sort(function(a, b) {\n      return lte_(a.fx, b.fx) ? lte_(b.fx, a.fx) ? a.idx - b.idx : -1 : 1;\n    });\n\n    if (Array.isArray(foldable)) {\n      for (var idx = 0; idx < rs.length; idx += 1) rs[idx] = rs[idx].x;\n      return rs;\n    }\n\n    var F = foldable.constructor;\n    var result = empty(F);\n    for (idx = 0; idx < rs.length; idx += 1) {\n      result = concat(result, of(F, rs[idx].x));\n    }\n    return result;\n  }\n\n  //# traverse :: (Applicative f, Traversable t) => (TypeRep f, a -> f b, t a) -> f (t b)\n  //.\n  //. Function wrapper for [`fantasy-land/traverse`][].\n  //.\n  //. `fantasy-land/traverse` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`sequence`](#sequence).\n  //.\n  //. ```javascript\n  //. > traverse(Array, x => x, [[1, 2, 3], [4, 5]])\n  //. [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]\n  //.\n  //. > traverse(Identity, x => Identity(x + 1), [1, 2, 3])\n  //. Identity([2, 3, 4])\n  //. ```\n  function traverse(typeRep, f, traversable) {\n    return Traversable.methods.traverse(traversable)(typeRep, f);\n  }\n\n  //# sequence :: (Applicative f, Traversable t) => (TypeRep f, t (f a)) -> f (t a)\n  //.\n  //. Inverts the given `t (f a)` to produce an `f (t a)`.\n  //.\n  //. This function is derived from [`traverse`](#traverse).\n  //.\n  //. ```javascript\n  //. > sequence(Array, Identity([1, 2, 3]))\n  //. [Identity(1), Identity(2), Identity(3)]\n  //.\n  //. > sequence(Identity, [Identity(1), Identity(2), Identity(3)])\n  //. Identity([1, 2, 3])\n  //. ```\n  function sequence(typeRep, traversable) {\n    return traverse(typeRep, identity, traversable);\n  }\n\n  //# extend :: Extend w => (w a -> b, w a) -> w b\n  //.\n  //. Function wrapper for [`fantasy-land/extend`][].\n  //.\n  //. `fantasy-land/extend` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > extend(ss => ss.join(''), ['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //.\n  //. > extend(f => f([3, 4]), reverse)([1, 2])\n  //. [4, 3, 2, 1]\n  //. ```\n  function extend(f, extend_) {\n    return Extend.methods.extend(extend_)(f);\n  }\n\n  //# duplicate :: Extend w => w a -> w (w a)\n  //.\n  //. Adds one level of nesting to a comonadic structure.\n  //.\n  //. This function is derived from [`extend`](#extend).\n  //.\n  //. ```javascript\n  //. > duplicate(Identity(1))\n  //. Identity(Identity(1))\n  //.\n  //. > duplicate([1])\n  //. [[1]]\n  //.\n  //. > duplicate([1, 2, 3])\n  //. [[1, 2, 3], [2, 3], [3]]\n  //.\n  //. > duplicate(reverse)([1, 2])([3, 4])\n  //. [4, 3, 2, 1]\n  //. ```\n  function duplicate(extend_) {\n    return extend(identity, extend_);\n  }\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. Function wrapper for [`fantasy-land/extract`][].\n  //.\n  //. ```javascript\n  //. > extract(Identity(42))\n  //. 42\n  //. ```\n  function extract(comonad) {\n    return Comonad.methods.extract(comonad)();\n  }\n\n  //# contramap :: Contravariant f => (b -> a, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/contramap`][].\n  //.\n  //. `fantasy-land/contramap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > contramap(s => s.length, Math.sqrt)('Sanctuary')\n  //. 3\n  //. ```\n  function contramap(f, contravariant) {\n    return Contravariant.methods.contramap(contravariant)(f);\n  }\n\n  return {\n    TypeClass: TypeClass,\n    Setoid: Setoid,\n    Ord: Ord,\n    Semigroupoid: Semigroupoid,\n    Category: Category,\n    Semigroup: Semigroup,\n    Monoid: Monoid,\n    Group: Group,\n    Filterable: Filterable,\n    Functor: Functor,\n    Bifunctor: Bifunctor,\n    Profunctor: Profunctor,\n    Apply: Apply,\n    Applicative: Applicative,\n    Chain: Chain,\n    ChainRec: ChainRec,\n    Monad: Monad,\n    Alt: Alt,\n    Plus: Plus,\n    Alternative: Alternative,\n    Foldable: Foldable,\n    Traversable: Traversable,\n    Extend: Extend,\n    Comonad: Comonad,\n    Contravariant: Contravariant,\n    toString: toString,\n    equals: equals,\n    lt: lt,\n    lte: lte,\n    gt: gt,\n    gte: gte,\n    min: min,\n    max: max,\n    compose: compose,\n    id: id,\n    concat: concat,\n    empty: empty,\n    invert: invert,\n    filter: filter,\n    reject: reject,\n    map: map,\n    flip: flip,\n    bimap: bimap,\n    mapLeft: mapLeft,\n    promap: promap,\n    ap: ap,\n    lift2: lift2,\n    lift3: lift3,\n    apFirst: apFirst,\n    apSecond: apSecond,\n    of: of,\n    append: append,\n    prepend: prepend,\n    chain: chain,\n    join: join,\n    chainRec: chainRec,\n    alt: alt,\n    zero: zero,\n    reduce: reduce,\n    size: size,\n    elem: elem,\n    foldMap: foldMap,\n    reverse: reverse,\n    sort: sort,\n    sortBy: sortBy,\n    takeWhile: takeWhile,\n    dropWhile: dropWhile,\n    traverse: traverse,\n    sequence: sequence,\n    extend: extend,\n    duplicate: duplicate,\n    extract: extract,\n    contramap: contramap\n  };\n\n}));\n\n//. [Alt]:                      v:fantasyland/fantasy-land#alt\n//. [Alternative]:              v:fantasyland/fantasy-land#alternative\n//. [Applicative]:              v:fantasyland/fantasy-land#applicative\n//. [Apply]:                    v:fantasyland/fantasy-land#apply\n//. [Bifunctor]:                v:fantasyland/fantasy-land#bifunctor\n//. [Category]:                 v:fantasyland/fantasy-land#category\n//. [Chain]:                    v:fantasyland/fantasy-land#chain\n//. [ChainRec]:                 v:fantasyland/fantasy-land#chainrec\n//. [Comonad]:                  v:fantasyland/fantasy-land#comonad\n//. [Contravariant]:            v:fantasyland/fantasy-land#contravariant\n//. [Extend]:                   v:fantasyland/fantasy-land#extend\n//. [FL]:                       v:fantasyland/fantasy-land\n//. [Filterable]:               v:fantasyland/fantasy-land#filterable\n//. [Foldable]:                 v:fantasyland/fantasy-land#foldable\n//. [Functor]:                  v:fantasyland/fantasy-land#functor\n//. [Group]:                    v:fantasyland/fantasy-land#group\n//. [Monad]:                    v:fantasyland/fantasy-land#monad\n//. [Monoid]:                   v:fantasyland/fantasy-land#monoid\n//. [Ord]:                      v:fantasyland/fantasy-land#ord\n//. [Plus]:                     v:fantasyland/fantasy-land#plus\n//. [Profunctor]:               v:fantasyland/fantasy-land#profunctor\n//. [Semigroup]:                v:fantasyland/fantasy-land#semigroup\n//. [Semigroupoid]:             v:fantasyland/fantasy-land#semigroupoid\n//. [Setoid]:                   v:fantasyland/fantasy-land#setoid\n//. [Traversable]:              v:fantasyland/fantasy-land#traversable\n//. [`fantasy-land/alt`]:       v:fantasyland/fantasy-land#alt-method\n//. [`fantasy-land/ap`]:        v:fantasyland/fantasy-land#ap-method\n//. [`fantasy-land/bimap`]:     v:fantasyland/fantasy-land#bimap-method\n//. [`fantasy-land/chain`]:     v:fantasyland/fantasy-land#chain-method\n//. [`fantasy-land/chainRec`]:  v:fantasyland/fantasy-land#chainrec-method\n//. [`fantasy-land/compose`]:   v:fantasyland/fantasy-land#compose-method\n//. [`fantasy-land/concat`]:    v:fantasyland/fantasy-land#concat-method\n//. [`fantasy-land/contramap`]: v:fantasyland/fantasy-land#contramap-method\n//. [`fantasy-land/empty`]:     v:fantasyland/fantasy-land#empty-method\n//. [`fantasy-land/equals`]:    v:fantasyland/fantasy-land#equals-method\n//. [`fantasy-land/extend`]:    v:fantasyland/fantasy-land#extend-method\n//. [`fantasy-land/extract`]:   v:fantasyland/fantasy-land#extract-method\n//. [`fantasy-land/filter`]:    v:fantasyland/fantasy-land#filter-method\n//. [`fantasy-land/id`]:        v:fantasyland/fantasy-land#id-method\n//. [`fantasy-land/invert`]:    v:fantasyland/fantasy-land#invert-method\n//. [`fantasy-land/lte`]:       v:fantasyland/fantasy-land#lte-method\n//. [`fantasy-land/map`]:       v:fantasyland/fantasy-land#map-method\n//. [`fantasy-land/of`]:        v:fantasyland/fantasy-land#of-method\n//. [`fantasy-land/promap`]:    v:fantasyland/fantasy-land#promap-method\n//. [`fantasy-land/reduce`]:    v:fantasyland/fantasy-land#reduce-method\n//. [`fantasy-land/traverse`]:  v:fantasyland/fantasy-land#traverse-method\n//. [`fantasy-land/zero`]:      v:fantasyland/fantasy-land#zero-method\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [type-classes]:             https://github.com/sanctuary-js/sanctuary-def#type-classes\n","/*\n        @@@@@@@            @@@@@@@         @@\n      @@       @@        @@       @@      @@@\n    @@   @@@ @@  @@    @@   @@@ @@  @@   @@@@@@ @@   @@@  @@ @@@      @@@@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@   @@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@@@@@@\n   @@  @@   @@@  @@   @@  @@   @@@  @@    @@@   @@   @@@  @@@   @@  @@@\n    @@   @@@ @@@@@     @@   @@@ @@@@@      @@@    @@@ @@  @@@@@@      @@@@@\n      @@                 @@                           @@  @@\n        @@@@@@@            @@@@@@@               @@@@@    @@\n                                                          */\n//. # sanctuary-type-identifiers\n//.\n//. A type is a set of values. Boolean, for example, is the type comprising\n//. `true` and `false`. A value may be a member of multiple types (`42` is a\n//. member of Number, PositiveNumber, Integer, and many other types).\n//.\n//. In certain situations it is useful to divide JavaScript values into\n//. non-overlapping types. The language provides two constructs for this\n//. purpose: the [`typeof`][1] operator and [`Object.prototype.toString`][2].\n//. Each has pros and cons, but neither supports user-defined types.\n//.\n//. This package specifies an [algorithm][3] for deriving a _type identifier_\n//. from any JavaScript value, and exports an implementation of the algorithm.\n//. Authors of algebraic data types may follow this specification in order to\n//. make their data types compatible with the algorithm.\n//.\n//. ### Algorithm\n//.\n//. 1.  Take any JavaScript value `x`.\n//.\n//. 2.  If `x` is `null` or `undefined`, go to step 6.\n//.\n//. 3.  If `x.constructor` evaluates to `null` or `undefined`, go to step 6.\n//.\n//. 4.  If `x.constructor.prototype === x`, go to step 6. This check prevents a\n//.     prototype object from being considered a member of its associated type.\n//.\n//. 5.  If `typeof x.constructor['@@type']` evaluates to `'string'`, return\n//.     the value of `x.constructor['@@type']`.\n//.\n//. 6.  Return the [`Object.prototype.toString`][2] representation of `x`\n//.     without the leading `'[object '` and trailing `']'`.\n//.\n//. ### Compatibility\n//.\n//. For an algebraic data type to be compatible with the [algorithm][3]:\n//.\n//.   - every member of the type must have a `constructor` property pointing\n//.     to an object known as the _type representative_;\n//.\n//.   - the type representative must have a `@@type` property; and\n//.\n//.   - the type representative's `@@type` property (the _type identifier_)\n//.     must be a string primitive, ideally `'<npm-package-name>/<type-name>'`.\n//.\n//. For example:\n//.\n//. ```javascript\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   if (!(this instanceof Identity)) return new Identity(x);\n//.   this.value = x;\n//. }\n//.\n//. Identity['@@type'] = 'my-package/Identity';\n//. ```\n//.\n//. Note that by using a constructor function the `constructor` property is set\n//. implicitly for each value created. Constructor functions are convenient for\n//. this reason, but are not required. This definition is also valid:\n//.\n//. ```javascript\n//. //  IdentityTypeRep :: TypeRep Identity\n//. var IdentityTypeRep = {\n//.   '@@type': 'my-package/Identity'\n//. };\n//.\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   return {constructor: IdentityTypeRep, value: x};\n//. }\n//. ```\n//.\n//. ### Usage\n//.\n//. ```javascript\n//. var Identity = require('my-package').Identity;\n//. var type = require('sanctuary-type-identifiers');\n//.\n//. type(null);         // => 'Null'\n//. type(true);         // => 'Boolean'\n//. type([1, 2, 3]);    // => 'Array'\n//. type(Identity);     // => 'Function'\n//. type(Identity(0));  // => 'my-package/Identity'\n//. ```\n//.\n//.\n//. [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n//. [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n//. [3]: #algorithm\n\n(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryTypeIdentifiers = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$type :: String\n  var $$type = '@@type';\n\n  //  type :: Any -> String\n  function type(x) {\n    return x != null &&\n           x.constructor != null &&\n           x.constructor.prototype !== x &&\n           typeof x.constructor[$$type] === 'string' ?\n      x.constructor[$$type] :\n      Object.prototype.toString.call(x).slice('[object '.length, -']'.length);\n  }\n\n  return type;\n\n}));\n","/*\n        @@@@@@@            @@@@@@@         @@\n      @@       @@        @@       @@      @@@\n    @@   @@@ @@  @@    @@   @@@ @@  @@   @@@@@@ @@   @@@  @@ @@@      @@@@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@   @@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@@@@@@\n   @@  @@   @@@  @@   @@  @@   @@@  @@    @@@   @@   @@@  @@@   @@  @@@\n    @@   @@@ @@@@@     @@   @@@ @@@@@      @@@    @@@ @@  @@@@@@      @@@@@\n      @@                 @@                           @@  @@\n        @@@@@@@            @@@@@@@               @@@@@    @@\n                                                          */\n//. # sanctuary-type-identifiers\n//.\n//. A type is a set of values. Boolean, for example, is the type comprising\n//. `true` and `false`. A value may be a member of multiple types (`42` is a\n//. member of Number, PositiveNumber, Integer, and many other types).\n//.\n//. In certain situations it is useful to divide JavaScript values into\n//. non-overlapping types. The language provides two constructs for this\n//. purpose: the [`typeof`][1] operator and [`Object.prototype.toString`][2].\n//. Each has pros and cons, but neither supports user-defined types.\n//.\n//. sanctuary-type-identifiers comprises:\n//.\n//.   - an npm and browser -compatible package for deriving the\n//.     _type identifier_ of a JavaScript value; and\n//.   - a specification which authors may follow to specify type\n//.     identifiers for their types.\n//.\n//. ### Specification\n//.\n//. For a type to be compatible with the algorithm:\n//.\n//.   - every member of the type MUST have a `constructor` property\n//.     pointing to an object known as the _type representative_;\n//.\n//.   - the type representative MUST have a `@@type` property\n//.     (the _type identifier_); and\n//.\n//.   - the type identifier MUST be a string primitive and SHOULD have\n//.     format `'<namespace>/<name>[@<version>]'`, where:\n//.\n//.       - `<namespace>` MUST consist of one or more characters, and\n//.         SHOULD equal the name of the npm package which defines the\n//.         type (including [scope][3] where appropriate);\n//.\n//.       - `<name>` MUST consist of one or more characters, and SHOULD\n//.         be the unique name of the type; and\n//.\n//.       - `<version>` MUST consist of one or more digits, and SHOULD\n//.         represent the version of the type.\n//.\n//. If the type identifier does not conform to the format specified above,\n//. it is assumed that the entire string represents the _name_ of the type;\n//. _namespace_ will be `null` and _version_ will be `0`.\n//.\n//. If the _version_ is not given, it is assumed to be `0`.\n//.\n//. For example:\n//.\n//. ```javascript\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   if (!(this instanceof Identity)) return new Identity(x);\n//.   this.value = x;\n//. }\n//.\n//. Identity['@@type'] = 'my-package/Identity';\n//. ```\n//.\n//. Note that by using a constructor function the `constructor` property is set\n//. implicitly for each value created. Constructor functions are convenient for\n//. this reason, but are not required. This definition is also valid:\n//.\n//. ```javascript\n//. //  IdentityTypeRep :: TypeRep Identity\n//. var IdentityTypeRep = {\n//.   '@@type': 'my-package/Identity'\n//. };\n//.\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   return {constructor: IdentityTypeRep, value: x};\n//. }\n//. ```\n\n(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryTypeIdentifiers = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$type :: String\n  var $$type = '@@type';\n\n  //  pattern :: RegExp\n  var pattern = new RegExp(\n    '^'\n  + '([\\\\s\\\\S]+)'   //  <namespace>\n  + '/'             //  SOLIDUS (U+002F)\n  + '([\\\\s\\\\S]+?)'  //  <name>\n  + '(?:'           //  optional non-capturing group {\n  +   '@'           //    COMMERCIAL AT (U+0040)\n  +   '([0-9]+)'    //    <version>\n  + ')?'            //  }\n  + '$'\n  );\n\n  //. ### Usage\n  //.\n  //. ```javascript\n  //. const type = require('sanctuary-type-identifiers');\n  //. ```\n  //.\n  //. ```javascript\n  //. > function Identity(x) {\n  //. .   if (!(this instanceof Identity)) return new Identity(x);\n  //. .   this.value = x;\n  //. . }\n  //. . Identity['@@type'] = 'my-package/Identity@1';\n  //.\n  //. > type.parse(type(Identity(0)))\n  //. {namespace: 'my-package', name: 'Identity', version: 1}\n  //. ```\n  //.\n  //. ### API\n  //.\n  //# type :: Any -> String\n  //.\n  //. Takes any value and returns a string which identifies its type. If the\n  //. value conforms to the [specification][4], the custom type identifier is\n  //. returned.\n  //.\n  //. ```javascript\n  //. > type(null)\n  //. 'Null'\n  //.\n  //. > type(true)\n  //. 'Boolean'\n  //.\n  //. > type(Identity(0))\n  //. 'my-package/Identity@1'\n  //. ```\n  function type(x) {\n    return x != null &&\n           x.constructor != null &&\n           x.constructor.prototype !== x &&\n           typeof x.constructor[$$type] === 'string' ?\n      x.constructor[$$type] :\n      Object.prototype.toString.call(x).slice('[object '.length, -']'.length);\n  }\n\n  //# type.parse :: String -> { namespace :: Nullable String, name :: String, version :: Number }\n  //.\n  //. Takes any string and parses it according to the [specification][4],\n  //. returning an object with `namespace`, `name`, and `version` fields.\n  //.\n  //. ```javascript\n  //. > type.parse('my-package/List@2')\n  //. {namespace: 'my-package', name: 'List', version: 2}\n  //.\n  //. > type.parse('nonsense!')\n  //. {namespace: null, name: 'nonsense!', version: 0}\n  //.\n  //. > type.parse(Identity['@@type'])\n  //. {namespace: 'my-package', name: 'Identity', version: 1}\n  //. ```\n  type.parse = function parse(s) {\n    var groups = pattern.exec(s);\n    return {\n      namespace: groups == null || groups[1] == null ? null : groups[1],\n      name:      groups == null                      ? s    : groups[2],\n      version:   groups == null || groups[3] == null ? 0    : Number(groups[3])\n    };\n  };\n\n  return type;\n\n}));\n\n//. [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n//. [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n//. [3]: https://docs.npmjs.com/misc/scope\n//. [4]: #specification\n","//Built-in constant from web api\r\nexport const MESSAGE = \"message\";\r\n\r\n/* \r\n * These are really just internal wrapped with the loader functions\r\n */\r\nexport enum WorkerLoaderCommand {\r\n    INIT, //Sent from IO when Worker JS is loaded\r\n    READY, //Sent from Worker when INIT is received (worker is ready)\r\n}\r\n\r\n/*\r\n * See where these are called in IO.ts and Worker.ts to make stuff happen\r\n */\r\n\r\nexport enum WorkerCommand {\r\n    TICK, //Sent from IO on frame tick - but only when not busy \r\n    RENDER, //Sent from Worker when work is finished processing \r\n}\r\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Data_HeytingAlgebra = require(\"../Data.HeytingAlgebra/index.js\");\nvar Data_Symbol = require(\"../Data.Symbol/index.js\");\nvar Data_Unit = require(\"../Data.Unit/index.js\");\nvar BooleanAlgebra = function (HeytingAlgebra0) {\n    this.HeytingAlgebra0 = HeytingAlgebra0;\n};\nvar BooleanAlgebraRecord = function (HeytingAlgebraRecord0) {\n    this.HeytingAlgebraRecord0 = HeytingAlgebraRecord0;\n};\nvar booleanAlgebraUnit = new BooleanAlgebra(function () {\n    return Data_HeytingAlgebra.heytingAlgebraUnit;\n});\nvar booleanAlgebraRecordNil = new BooleanAlgebraRecord(function () {\n    return Data_HeytingAlgebra.heytingAlgebraRecordNil;\n});\nvar booleanAlgebraRecordCons = function (dictIsSymbol) {\n    return function (dictCons) {\n        return function (dictBooleanAlgebraRecord) {\n            return function (dictBooleanAlgebra) {\n                return new BooleanAlgebraRecord(function () {\n                    return Data_HeytingAlgebra.heytingAlgebraRecordCons(dictIsSymbol)(dictCons)(dictBooleanAlgebraRecord.HeytingAlgebraRecord0())(dictBooleanAlgebra.HeytingAlgebra0());\n                });\n            };\n        };\n    };\n};\nvar booleanAlgebraRecord = function (dictRowToList) {\n    return function (dictBooleanAlgebraRecord) {\n        return new BooleanAlgebra(function () {\n            return Data_HeytingAlgebra.heytingAlgebraRecord(dictRowToList)(dictBooleanAlgebraRecord.HeytingAlgebraRecord0());\n        });\n    };\n};\nvar booleanAlgebraFn = function (dictBooleanAlgebra) {\n    return new BooleanAlgebra(function () {\n        return Data_HeytingAlgebra.heytingAlgebraFunction(dictBooleanAlgebra.HeytingAlgebra0());\n    });\n};\nvar booleanAlgebraBoolean = new BooleanAlgebra(function () {\n    return Data_HeytingAlgebra.heytingAlgebraBoolean;\n});\nmodule.exports = {\n    BooleanAlgebra: BooleanAlgebra,\n    BooleanAlgebraRecord: BooleanAlgebraRecord,\n    booleanAlgebraBoolean: booleanAlgebraBoolean,\n    booleanAlgebraUnit: booleanAlgebraUnit,\n    booleanAlgebraFn: booleanAlgebraFn,\n    booleanAlgebraRecord: booleanAlgebraRecord,\n    booleanAlgebraRecordNil: booleanAlgebraRecordNil,\n    booleanAlgebraRecordCons: booleanAlgebraRecordCons\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar RProxy = (function () {\n    function RProxy() {\n\n    };\n    RProxy.value = new RProxy();\n    return RProxy;\n})();\nmodule.exports = {\n    RProxy: RProxy\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Control_Alt = require(\"../Control.Alt/index.js\");\nvar Control_Applicative = require(\"../Control.Applicative/index.js\");\nvar Control_Apply = require(\"../Control.Apply/index.js\");\nvar Control_Plus = require(\"../Control.Plus/index.js\");\nvar Data_Functor = require(\"../Data.Functor/index.js\");\nvar Alternative = function (Applicative0, Plus1) {\n    this.Applicative0 = Applicative0;\n    this.Plus1 = Plus1;\n};\nvar alternativeArray = new Alternative(function () {\n    return Control_Applicative.applicativeArray;\n}, function () {\n    return Control_Plus.plusArray;\n});\nmodule.exports = {\n    Alternative: Alternative,\n    alternativeArray: alternativeArray\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nvar Data_Ord = require(\"../Data.Ord/index.js\");\nvar Data_Ordering = require(\"../Data.Ordering/index.js\");\nvar Data_Unit = require(\"../Data.Unit/index.js\");\nvar Bounded = function (Ord0, bottom, top) {\n    this.Ord0 = Ord0;\n    this.bottom = bottom;\n    this.top = top;\n};\nvar top = function (dict) {\n    return dict.top;\n};\nvar boundedUnit = new Bounded(function () {\n    return Data_Ord.ordUnit;\n}, Data_Unit.unit, Data_Unit.unit);\nvar boundedOrdering = new Bounded(function () {\n    return Data_Ord.ordOrdering;\n}, Data_Ordering.LT.value, Data_Ordering.GT.value);\nvar boundedNumber = new Bounded(function () {\n    return Data_Ord.ordNumber;\n}, $foreign.bottomNumber, $foreign.topNumber);\nvar boundedInt = new Bounded(function () {\n    return Data_Ord.ordInt;\n}, $foreign.bottomInt, $foreign.topInt);\nvar boundedChar = new Bounded(function () {\n    return Data_Ord.ordChar;\n}, $foreign.bottomChar, $foreign.topChar);\nvar boundedBoolean = new Bounded(function () {\n    return Data_Ord.ordBoolean;\n}, false, true);\nvar bottom = function (dict) {\n    return dict.bottom;\n};\nmodule.exports = {\n    Bounded: Bounded,\n    bottom: bottom,\n    top: top,\n    boundedBoolean: boundedBoolean,\n    boundedInt: boundedInt,\n    boundedChar: boundedChar,\n    boundedOrdering: boundedOrdering,\n    boundedUnit: boundedUnit,\n    boundedNumber: boundedNumber\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Data_Boolean = require(\"../Data.Boolean/index.js\");\nvar Data_Eq = require(\"../Data.Eq/index.js\");\nvar Data_EuclideanRing = require(\"../Data.EuclideanRing/index.js\");\nvar Data_Ord = require(\"../Data.Ord/index.js\");\nvar Data_Ordering = require(\"../Data.Ordering/index.js\");\nvar Data_Semigroup = require(\"../Data.Semigroup/index.js\");\nvar Data_Symbol = require(\"../Data.Symbol/index.js\");\nvar Data_Unit = require(\"../Data.Unit/index.js\");\nvar Record_Unsafe = require(\"../Record.Unsafe/index.js\");\nvar Type_Data_RowList = require(\"../Type.Data.RowList/index.js\");\nvar Monoid = function (Semigroup0, mempty) {\n    this.Semigroup0 = Semigroup0;\n    this.mempty = mempty;\n};\nvar MonoidRecord = function (SemigroupRecord0, memptyRecord) {\n    this.SemigroupRecord0 = SemigroupRecord0;\n    this.memptyRecord = memptyRecord;\n};\nvar monoidUnit = new Monoid(function () {\n    return Data_Semigroup.semigroupUnit;\n}, Data_Unit.unit);\nvar monoidString = new Monoid(function () {\n    return Data_Semigroup.semigroupString;\n}, \"\");\nvar monoidRecordNil = new MonoidRecord(function () {\n    return Data_Semigroup.semigroupRecordNil;\n}, function (v) {\n    return {};\n});\nvar monoidOrdering = new Monoid(function () {\n    return Data_Ordering.semigroupOrdering;\n}, Data_Ordering.EQ.value);\nvar monoidArray = new Monoid(function () {\n    return Data_Semigroup.semigroupArray;\n}, [  ]);\nvar memptyRecord = function (dict) {\n    return dict.memptyRecord;\n};\nvar monoidRecord = function (dictRowToList) {\n    return function (dictMonoidRecord) {\n        return new Monoid(function () {\n            return Data_Semigroup.semigroupRecord(dictRowToList)(dictMonoidRecord.SemigroupRecord0());\n        }, memptyRecord(dictMonoidRecord)(Type_Data_RowList.RLProxy.value));\n    };\n};\nvar mempty = function (dict) {\n    return dict.mempty;\n};\nvar monoidFn = function (dictMonoid) {\n    return new Monoid(function () {\n        return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());\n    }, function (v) {\n        return mempty(dictMonoid);\n    });\n};\nvar monoidRecordCons = function (dictIsSymbol) {\n    return function (dictMonoid) {\n        return function (dictCons) {\n            return function (dictMonoidRecord) {\n                return new MonoidRecord(function () {\n                    return Data_Semigroup.semigroupRecordCons(dictIsSymbol)(dictCons)(dictMonoidRecord.SemigroupRecord0())(dictMonoid.Semigroup0());\n                }, function (v) {\n                    var tail = memptyRecord(dictMonoidRecord)(Type_Data_RowList.RLProxy.value);\n                    var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);\n                    var insert = Record_Unsafe.unsafeSet(key);\n                    return insert(mempty(dictMonoid))(tail);\n                });\n            };\n        };\n    };\n};\nvar power = function (dictMonoid) {\n    return function (x) {\n        var go = function (p) {\n            if (p <= 0) {\n                return mempty(dictMonoid);\n            };\n            if (p === 1) {\n                return x;\n            };\n            if (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(p)(2) === 0) {\n                var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));\n                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x$prime);\n            };\n            if (Data_Boolean.otherwise) {\n                var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));\n                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x));\n            };\n            throw new Error(\"Failed pattern match at Data.Monoid line 66, column 3 - line 66, column 17: \" + [ p.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar guard = function (dictMonoid) {\n    return function (v) {\n        return function (v1) {\n            if (v) {\n                return v1;\n            };\n            if (!v) {\n                return mempty(dictMonoid);\n            };\n            throw new Error(\"Failed pattern match at Data.Monoid line 74, column 1 - line 74, column 49: \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nmodule.exports = {\n    Monoid: Monoid,\n    mempty: mempty,\n    power: power,\n    guard: guard,\n    MonoidRecord: MonoidRecord,\n    memptyRecord: memptyRecord,\n    monoidUnit: monoidUnit,\n    monoidOrdering: monoidOrdering,\n    monoidFn: monoidFn,\n    monoidString: monoidString,\n    monoidArray: monoidArray,\n    monoidRecord: monoidRecord,\n    monoidRecordNil: monoidRecordNil,\n    monoidRecordCons: monoidRecordCons\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Data_EuclideanRing = require(\"../Data.EuclideanRing/index.js\");\nvar Data_Ring = require(\"../Data.Ring/index.js\");\nvar Data_Semiring = require(\"../Data.Semiring/index.js\");\nvar DivisionRing = function (Ring0, recip) {\n    this.Ring0 = Ring0;\n    this.recip = recip;\n};\nvar recip = function (dict) {\n    return dict.recip;\n};\nvar rightDiv = function (dictDivisionRing) {\n    return function (a) {\n        return function (b) {\n            return Data_Semiring.mul((dictDivisionRing.Ring0()).Semiring0())(a)(recip(dictDivisionRing)(b));\n        };\n    };\n};\nvar leftDiv = function (dictDivisionRing) {\n    return function (a) {\n        return function (b) {\n            return Data_Semiring.mul((dictDivisionRing.Ring0()).Semiring0())(recip(dictDivisionRing)(b))(a);\n        };\n    };\n};\nvar divisionringNumber = new DivisionRing(function () {\n    return Data_Ring.ringNumber;\n}, function (x) {\n    return 1.0 / x;\n});\nmodule.exports = {\n    DivisionRing: DivisionRing,\n    recip: recip,\n    leftDiv: leftDiv,\n    rightDiv: rightDiv,\n    divisionringNumber: divisionringNumber\n};\n","import {initWorker} from \"utils/Utils\";\r\nimport {WorkerCommand, MESSAGE} from \"types/Worker-Types\";\r\nimport {updateState, getInitialState} from \"purescript/Main/index\";\r\n\r\ninitWorker().fork(\r\n    console.error,\r\n    worker => {\r\n\r\n        let state:any;\r\n\r\n        worker.addEventListener(MESSAGE, (e:MessageEvent) => {\r\n            switch(e.data.cmd) {\r\n                case WorkerCommand.TICK:\r\n                    state = state === undefined\r\n                        ?   getInitialState(e.data.frameTs)\r\n                        :   updateState (e.data.frameTs) (state); \r\n                    \r\n                    worker.postMessage({\r\n                        cmd: WorkerCommand.RENDER,\r\n                        state \r\n                    });\r\n\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n);\r\n\r\n\r\n","export * from \"./flags/Flags\";\r\nexport * from \"./worker/Worker-Loader\";\r\nexport * from \"./datatypes/Maybe\";\r\n","\r\nexport const getCompileFlags = () => {\r\n    const buildMode = process.env['NODE_ENV'];\r\n    const buildVersion =  process.env['BUILD_VERSION'];\r\n    const isProduction = buildMode === \"production\" ? true : false;\r\n\r\n    return {buildMode, buildVersion, isProduction}\r\n}\r\n","import {Future} from \"fluture\";\r\nimport {WorkerLoaderCommand, MESSAGE} from \"types/Worker-Types\";\r\n\r\n\r\n/*\r\n * these loaders resolve _after_ communication is established\r\n */\r\n//Loaded by main thread \r\nexport const loadWorker = (worker:any) => Future<any, Worker>((reject, resolve) => {\r\n    const onInitial = (e: MessageEvent) => {\r\n        if(e.data.cmd === WorkerLoaderCommand.READY) {\r\n            worker.removeEventListener(MESSAGE, onInitial);\r\n            resolve(worker);\r\n        }\r\n    }\r\n    worker.addEventListener(MESSAGE, onInitial);\r\n\r\n    worker.postMessage({ cmd: WorkerLoaderCommand.INIT});\r\n});\r\n\r\n//Loaded by worker thread\r\nexport const initWorker = () => Future<any, any>((reject, resolve) => {\r\n\r\n    const onInitial = (e: MessageEvent) => {\r\n\r\n        if(e.data.cmd === WorkerLoaderCommand.INIT) {\r\n            (self as any).removeEventListener(MESSAGE, onInitial);\r\n            (self as any).postMessage({cmd: WorkerLoaderCommand.READY});\r\n            resolve(self);\r\n        }\r\n    }\r\n    (self as any).addEventListener(MESSAGE, onInitial);\r\n});\r\n\r\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('sanctuary-type-classes'), require('inspect-f'), require('sanctuary-type-identifiers'), require('denque'), require('concurrify')) :\n\ttypeof define === 'function' && define.amd ? define(['sanctuary-type-classes', 'inspect-f', 'sanctuary-type-identifiers', 'denque', 'concurrify'], factory) :\n\t(global.Fluture = factory(global.sanctuaryTypeClasses,global.inspectf,global.sanctuaryTypeIdentifiers,global.Denque,global.concurrify));\n}(this, (function (Z,inspectf,type,Denque,concurrify) { 'use strict';\n\nZ = Z && Z.hasOwnProperty('default') ? Z['default'] : Z;\ninspectf = inspectf && inspectf.hasOwnProperty('default') ? inspectf['default'] : inspectf;\ntype = type && type.hasOwnProperty('default') ? type['default'] : type;\nDenque = Denque && Denque.hasOwnProperty('default') ? Denque['default'] : Denque;\nconcurrify = concurrify && concurrify.hasOwnProperty('default') ? concurrify['default'] : concurrify;\n\n/* istanbul ignore file: environment-specific */\n\n/* eslint-disable no-undef */\nconst scope = typeof self === 'object' ? self :\n                     typeof global === 'object' ? global :\n                     typeof window === 'object' ? window :\n                     {};\n/* eslint-enable no-undef */\n\nconst setImmediate = typeof scope.setImmediate === 'function' ?\n                            scope.setImmediate :\n                            function setImmediate(f, x){ return setTimeout(f, 0, x) };\n\nfunction noop(){}\nfunction moop(){ return this }\nvar show = Z.toString;\nfunction padf(sf, s){ return s.replace(/^/gm, sf).replace(sf, '') }\nfunction showf(f){ return padf('  ', inspectf(2, f)) }\n\nfunction mapArray(xs, f){\n  var l = xs.length, ys = new Array(l);\n  for(var i = 0; i < l; i++) ys[i] = f(xs[i], i, xs);\n  return ys;\n}\n\nfunction partial1(f, a){\n  return function bound1(b, c, d){\n    switch(arguments.length){\n      case 1: return f(a, b);\n      case 2: return f(a, b, c);\n      default: return f(a, b, c, d);\n    }\n  };\n}\n\nfunction partial2(f, a, b){\n  return function bound2(c, d){\n    return arguments.length === 1 ? f(a, b, c) : f(a, b, c, d);\n  };\n}\n\nfunction partial3(f, a, b, c){\n  return function bound3(d){\n    return f(a, b, c, d);\n  };\n}\n\nfunction immediately(f){\n  return function immediate(x){ return setImmediate(f, x) };\n}\n\nvar FL = {\n  map: 'fantasy-land/map',\n  bimap: 'fantasy-land/bimap',\n  chain: 'fantasy-land/chain',\n  chainRec: 'fantasy-land/chainRec',\n  ap: 'fantasy-land/ap',\n  of: 'fantasy-land/of',\n  zero: 'fantasy-land/zero'\n};\n\nvar ordinal = ['first', 'second', 'third', 'fourth', 'fifth'];\n\nvar namespace = 'fluture';\nvar name = 'Future';\nvar version = 3;\n\nvar $$type = namespace + '/' + name + '@' + version;\n\nfunction error(message){\n  throw new Error(message);\n}\n\nfunction typeError(message){\n  throw new TypeError(message);\n}\n\nfunction invalidArgument(it, at, expected, actual){\n  typeError(\n    it + ' expects its ' + ordinal[at] + ' argument to ' + expected + '\\n  Actual: ' + show(actual)\n  );\n}\n\nfunction invalidContext(it, actual){\n  typeError(\n    it + ' was invoked outside the context of a Future. You might want to use'\n  + ' a dispatcher instead\\n  Called on: ' + (show(actual))\n  );\n}\n\nfunction invalidNamespace(m, x){\n  return (\n    'The Future was not created by ' + namespace + '. '\n  + 'Make sure you transform other Futures to ' + namespace + ' Futures. '\n  + 'Got ' + (x ? ('a Future from ' + x) : 'an unscoped Future') + '.'\n  + '\\n  See: https://github.com/fluture-js/Fluture#casting-futures'\n  );\n}\n\nfunction invalidVersion(m, x){\n  return (\n    'The Future was created by ' + (x < version ? 'an older' : 'a newer')\n  + ' version of ' + namespace + '. '\n  + 'This means that one of the sources which creates Futures is outdated. '\n  + 'Update this source, or transform its created Futures to be compatible.'\n  + '\\n  See: https://github.com/fluture-js/Fluture#casting-futures'\n  );\n}\n\nfunction invalidFuture(it, at, m, s){\n  var id = type.parse(type(m));\n  var info = id.name === name ? '\\n' + (\n    id.namespace !== namespace ? invalidNamespace(m, id.namespace)\n  : id.version !== version ? invalidVersion(m, id.version)\n  : 'Nothing seems wrong. Contact the Fluture maintainers.') : '';\n  typeError(\n    it + ' expects ' + (ordinal[at] ? 'its ' + ordinal[at] + ' argument to be a valid Future' : at)\n  + '.' + info + '\\n  Actual: ' + (show(m)) + ' :: ' + (id.name) + (s || '')\n  );\n}\n\nfunction isFunction(f){\n  return typeof f === 'function';\n}\n\nfunction isThenable(m){\n  return m instanceof Promise || Boolean(m) && isFunction(m.then);\n}\n\nfunction isBoolean(f){\n  return typeof f === 'boolean';\n}\n\nfunction isNumber(f){\n  return typeof f === 'number';\n}\n\nfunction isUnsigned(n){\n  return (n === Infinity || isNumber(n) && n > 0 && n % 1 === 0);\n}\n\nfunction isObject(o){\n  return o !== null && typeof o === 'object';\n}\n\nfunction isIterator(i){\n  return isObject(i) && isFunction(i.next);\n}\n\nfunction isArray(x){\n  return Array.isArray(x);\n}\n\n/*eslint no-cond-assign:0, no-constant-condition:0 */\n\nfunction interpreter(rej, res){\n\n  //This is the primary queue of actions. All actions in here will be \"cold\",\n  //meaning they haven't had the chance yet to run concurrent computations.\n  var cold = new Denque(this._actions.size);\n\n  //This is the secondary queue of actions. All actions in here will be \"hot\",\n  //meaning they have already had a chance to run a concurrent computation.\n  var queue = new Denque(this._actions.size);\n\n  //These combined variables define our current state.\n  // future  = the future we are currently forking\n  // action  = the action to be informed when the future settles\n  // cancel  = the cancel function of the current future\n  // settled = a boolean indicating whether a new tick should start\n  // async   = a boolean indicating whether we are awaiting a result asynchronously\n  var future, action, cancel = noop, settled, async = true, it;\n\n  //This function is called with a future to use in the next tick.\n  //Here we \"flatten\" the actions of another Sequence into our own actions,\n  //this is the magic that allows for infinitely stack safe recursion because\n  //actions like ChainAction will return a new Sequence.\n  //If we settled asynchronously, we call drain() directly to run the next tick.\n  function settle(m){\n    settled = true;\n    future = m;\n\n    if(future._spawn){\n      var tail = future._actions;\n\n      while(!tail.isEmpty){\n        cold.unshift(tail.head);\n        tail = tail.tail;\n      }\n\n      future = future._spawn;\n    }\n\n    if(async) drain();\n  }\n\n  //This function serves as a rejection handler for our current future.\n  //It will tell the current action that the future rejected, and it will\n  //settle the current tick with the action's answer to that.\n  function rejected(x){\n    settle(action.rejected(x));\n  }\n\n  //This function serves as a resolution handler for our current future.\n  //It will tell the current action that the future resolved, and it will\n  //settle the current tick with the action's answer to that.\n  function resolved(x){\n    settle(action.resolved(x));\n  }\n\n  //This function is passed into actions when they are \"warmed up\".\n  //If the action decides that it has its result, without the need to await\n  //anything else, then it can call this function to force \"early termination\".\n  //When early termination occurs, all actions which were queued prior to the\n  //terminator will be skipped. If they were already hot, they will also receive\n  //a cancel signal so they can cancel their own concurrent computations, as\n  //their results are no longer needed.\n  function early(m, terminator){\n    cancel();\n    cold.clear();\n\n    if(async && action !== terminator){\n      action.cancel();\n      while((it = queue.shift()) && it !== terminator) it.cancel();\n    }\n\n    settle(m);\n  }\n\n  //This function serves to kickstart concurrent computations.\n  //Takes all actions from the cold queue *back-to-front*, and calls run() on\n  //each of them, passing them the \"early\" function. If any of them settles (by\n  //calling early()), we abort. After warming up all actions in the cold queue,\n  //we warm up the current action as well.\n  function warmupActions(){\n    while(it = cold.pop()){\n      it = it.run(early);\n      if(settled) return;\n      queue.unshift(it);\n    }\n\n    action = action.run(early);\n  }\n\n  //This function represents our main execution loop.\n  //When we refer to a \"tick\", we mean the execution of the body inside the\n  //primary while-loop of this function.\n  //Every tick follows the following algorithm:\n  // 1. We try to take an action from the cold queue, if we fail, go to step 2.\n  //      1a. We fork the future.\n  //      1b. We warmupActions() if the we haven't settled yet.\n  // 2. We try to take an action from the hot queue, if we fail, go to step 3.\n  //      2a. We fork the Future, if settles, we continue to the next tick.\n  // 3. If we couldn't take actions from either queues, we fork the Future into\n  //    the user provided continuations. This is the end of the interpretation.\n  // 4. If we did take an action from one of queues, but none of the steps\n  //    caused a settle(), it means we are asynchronously waiting for something\n  //    to settle and start the next tick, so we return from the function.\n  function drain(){\n    async = false;\n\n    while(true){\n      settled = false;\n      if(action = cold.shift()){\n        cancel = future._fork(rejected, resolved);\n        if(!settled) warmupActions();\n      }else if(action = queue.shift()){\n        cancel = future._fork(rejected, resolved);\n      }else break;\n      if(settled) continue;\n      async = true;\n      return;\n    }\n\n    cancel = future._fork(rej, res);\n  }\n\n  //Start the execution loop.\n  settle(this);\n\n  //Return a cancellation function. It will cancel the current Future, the\n  //current action, and all queued hot actions.\n  return function Sequence$cancel(){\n    cancel();\n    action && action.cancel();\n    while(it = queue.shift()) it.cancel();\n  };\n\n}\n\nvar empty = ({isEmpty: true, size: 0, head: null, tail: null});\n\nfunction cons(head, tail){\n  return {isEmpty: false, size: tail.size + 1, head: head, tail: tail};\n}\n\nfunction throwRejection(x){\n  error('Future#value was called on a rejected Future\\n  Actual: Future.reject(' + show(x) + ')');\n}\n\nfunction Future(computation){\n  if(!isFunction(computation)) invalidArgument('Future', 0, 'be a Function', computation);\n  return new Computation(computation);\n}\n\nfunction isFuture(x){\n  return x instanceof Future || type(x) === $$type;\n}\n\nFuture['@@type'] = $$type;\n\nFuture.prototype[FL.ap] = function Future$FL$ap(other){\n  return other._ap(this);\n};\n\nFuture.prototype[FL.map] = function Future$FL$map(mapper){\n  return this._map(mapper);\n};\n\nFuture.prototype[FL.bimap] = function Future$FL$bimap(lmapper, rmapper){\n  return this._bimap(lmapper, rmapper);\n};\n\nFuture.prototype[FL.chain] = function Future$FL$chain(mapper){\n  return this._chain(mapper);\n};\n\nFuture.prototype.ap = function Future$ap(other){\n  if(!isFuture(this)) invalidContext('Future#ap', this);\n  if(!isFuture(other)) invalidFuture('Future#ap', 0, other);\n  return this._ap(other);\n};\n\nFuture.prototype.map = function Future$map(mapper){\n  if(!isFuture(this)) invalidContext('Future#map', this);\n  if(!isFunction(mapper)) invalidArgument('Future#map', 0, 'to be a Function', mapper);\n  return this._map(mapper);\n};\n\nFuture.prototype.bimap = function Future$bimap(lmapper, rmapper){\n  if(!isFuture(this)) invalidContext('Future#bimap', this);\n  if(!isFunction(lmapper)) invalidArgument('Future#bimap', 0, 'to be a Function', lmapper);\n  if(!isFunction(rmapper)) invalidArgument('Future#bimap', 1, 'to be a Function', rmapper);\n  return this._bimap(lmapper, rmapper);\n};\n\nFuture.prototype.chain = function Future$chain(mapper){\n  if(!isFuture(this)) invalidContext('Future#chain', this);\n  if(!isFunction(mapper)) invalidArgument('Future#chain', 0, 'to be a Function', mapper);\n  return this._chain(mapper);\n};\n\nFuture.prototype.mapRej = function Future$mapRej(mapper){\n  if(!isFuture(this)) invalidContext('Future#mapRej', this);\n  if(!isFunction(mapper)) invalidArgument('Future#mapRej', 0, 'to be a Function', mapper);\n  return this._mapRej(mapper);\n};\n\nFuture.prototype.chainRej = function Future$chainRej(mapper){\n  if(!isFuture(this)) invalidContext('Future#chainRej', this);\n  if(!isFunction(mapper)) invalidArgument('Future#chainRej', 0, 'to be a Function', mapper);\n  return this._chainRej(mapper);\n};\n\nFuture.prototype.race = function Future$race(other){\n  if(!isFuture(this)) invalidContext('Future#race', this);\n  if(!isFuture(other)) invalidFuture('Future#race', 0, other);\n  return this._race(other);\n};\n\nFuture.prototype.both = function Future$both(other){\n  if(!isFuture(this)) invalidContext('Future#both', this);\n  if(!isFuture(other)) invalidFuture('Future#both', 0, other);\n  return this._both(other);\n};\n\nFuture.prototype.and = function Future$and(other){\n  if(!isFuture(this)) invalidContext('Future#and', this);\n  if(!isFuture(other)) invalidFuture('Future#and', 0, other);\n  return this._and(other);\n};\n\nFuture.prototype.or = function Future$or(other){\n  if(!isFuture(this)) invalidContext('Future#or', this);\n  if(!isFuture(other)) invalidFuture('Future#or', 0, other);\n  return this._or(other);\n};\n\nFuture.prototype.swap = function Future$swap(){\n  if(!isFuture(this)) invalidContext('Future#ap', this);\n  return this._swap();\n};\n\nFuture.prototype.fold = function Future$fold(lmapper, rmapper){\n  if(!isFuture(this)) invalidContext('Future#ap', this);\n  if(!isFunction(lmapper)) invalidArgument('Future#fold', 0, 'to be a Function', lmapper);\n  if(!isFunction(rmapper)) invalidArgument('Future#fold', 1, 'to be a Function', rmapper);\n  return this._fold(lmapper, rmapper);\n};\n\nFuture.prototype.finally = function Future$finally(other){\n  if(!isFuture(this)) invalidContext('Future#finally', this);\n  if(!isFuture(other)) invalidFuture('Future#finally', 0, other);\n  return this._finally(other);\n};\n\nFuture.prototype.lastly = function Future$lastly(other){\n  if(!isFuture(this)) invalidContext('Future#lastly', this);\n  if(!isFuture(other)) invalidFuture('Future#lastly', 0, other);\n  return this._finally(other);\n};\n\nFuture.prototype.fork = function Future$fork(rej, res){\n  if(!isFuture(this)) invalidContext('Future#fork', this);\n  if(!isFunction(rej)) invalidArgument('Future#fork', 0, 'to be a Function', rej);\n  if(!isFunction(res)) invalidArgument('Future#fork', 0, 'to be a Function', res);\n  return this._fork(rej, res);\n};\n\nFuture.prototype.value = function Future$value(res){\n  if(!isFuture(this)) invalidContext('Future#value', this);\n  if(!isFunction(res)) invalidArgument('Future#value', 0, 'to be a Function', res);\n  return this._fork(throwRejection, res);\n};\n\nFuture.prototype.done = function Future$done(callback){\n  if(!isFuture(this)) invalidContext('Future#done', this);\n  if(!isFunction(callback)) invalidArgument('Future#done', 0, 'to be a Function', callback);\n  return this._fork(function Future$done$rej(x){ callback(x); },\n                    function Future$done$res(x){ callback(null, x); });\n};\n\nFuture.prototype.promise = function Future$promise(){\n  var _this = this;\n  return new Promise(function Future$promise$computation(res, rej){\n    _this._fork(rej, res);\n  });\n};\n\nFuture.prototype.isRejected = function Future$isRejected(){\n  return false;\n};\n\nFuture.prototype.isResolved = function Future$isResolved(){\n  return false;\n};\n\nFuture.prototype.isSettled = function Future$isSettled(){\n  return this.isRejected() || this.isResolved();\n};\n\nFuture.prototype.extractLeft = function Future$extractLeft(){\n  return [];\n};\n\nFuture.prototype.extractRight = function Future$extractRight(){\n  return [];\n};\n\nvar Core = Object.create(Future.prototype);\n\nCore._ap = function Core$ap(other){\n  return new Sequence(this)._ap(other);\n};\n\nCore._map = function Core$map(mapper){\n  return new Sequence(this)._map(mapper);\n};\n\nCore._bimap = function Core$bimap(lmapper, rmapper){\n  return new Sequence(this)._bimap(lmapper, rmapper);\n};\n\nCore._chain = function Core$chain(mapper){\n  return new Sequence(this)._chain(mapper);\n};\n\nCore._mapRej = function Core$mapRej(mapper){\n  return new Sequence(this)._mapRej(mapper);\n};\n\nCore._chainRej = function Core$chainRej(mapper){\n  return new Sequence(this)._chainRej(mapper);\n};\n\nCore._race = function Core$race(other){\n  return new Sequence(this)._race(other);\n};\n\nCore._both = function Core$both(other){\n  return new Sequence(this)._both(other);\n};\n\nCore._and = function Core$and(other){\n  return new Sequence(this)._and(other);\n};\n\nCore._or = function Core$or(other){\n  return new Sequence(this)._or(other);\n};\n\nCore._swap = function Core$swap(){\n  return new Sequence(this)._swap();\n};\n\nCore._fold = function Core$fold(lmapper, rmapper){\n  return new Sequence(this)._fold(lmapper, rmapper);\n};\n\nCore._finally = function Core$finally(other){\n  return new Sequence(this)._finally(other);\n};\n\nfunction check$fork(f, c){\n  if(!(f === undefined || (isFunction(f) && f.length === 0))) typeError(\n    'Future expected its computation to return a nullary function or void'\n    + '\\n  Actual: ' + show(f) + '\\n  From calling: ' + showf(c)\n  );\n}\n\nfunction Computation(computation){\n  this._computation = computation;\n}\n\nComputation.prototype = Object.create(Core);\n\nComputation.prototype._fork = function Computation$_fork(rej, res){\n  var open = true;\n  var cancel = this._computation(function Computation$rej(x){\n    if(open){\n      open = false;\n      rej(x);\n    }\n  }, function Computation$res(x){\n    if(open){\n      open = false;\n      res(x);\n    }\n  });\n  check$fork(cancel, this._computation);\n\n  return function Computation$cancel(){\n    if(open){\n      open = false;\n      cancel && cancel();\n    }\n  };\n};\n\nComputation.prototype.toString = function Computation$toString(){\n  return 'Future(' + showf(this._computation) + ')';\n};\n\nfunction Rejected(value){\n  this._value = value;\n}\n\nRejected.prototype = Object.create(Core);\n\nRejected.prototype._ap = moop;\nRejected.prototype._map = moop;\nRejected.prototype._chain = moop;\nRejected.prototype._race = moop;\nRejected.prototype._both = moop;\nRejected.prototype._and = moop;\n\nRejected.prototype._or = function Rejected$or(other){\n  return other;\n};\n\nRejected.prototype._finally = function Rejected$finally(other){\n  return other._and(this);\n};\n\nRejected.prototype._swap = function Rejected$swap(){\n  return new Resolved(this._value);\n};\n\nRejected.prototype._fork = function Rejected$_fork(rej){\n  rej(this._value);\n  return noop;\n};\n\nRejected.prototype.isRejected = function Rejected$isRejected(){\n  return true;\n};\n\nRejected.prototype.extractLeft = function Rejected$extractLeft(){\n  return [this._value];\n};\n\nRejected.prototype.toString = function Rejected$toString(){\n  return 'Future.reject(' + show(this._value) + ')';\n};\n\nfunction reject(x){\n  return new Rejected(x);\n}\n\nfunction Resolved(value){\n  this._value = value;\n}\n\nResolved.prototype = Object.create(Core);\n\nResolved.prototype._race = moop;\nResolved.prototype._mapRej = moop;\nResolved.prototype._or = moop;\n\nResolved.prototype._and = function Resolved$and(other){\n  return other;\n};\n\nResolved.prototype._both = function Resolved$both(other){\n  var left = this._value;\n  return other._map(function Resolved$both$mapper(right){\n    return [left, right];\n  });\n};\n\nResolved.prototype._swap = function Resolved$swap(){\n  return new Rejected(this._value);\n};\n\nResolved.prototype._finally = function Resolved$finally(other){\n  var value = this._value;\n  return other._map(function Resolved$finally$mapper(){\n    return value;\n  });\n};\n\nResolved.prototype._fork = function _fork(rej, res){\n  res(this._value);\n  return noop;\n};\n\nResolved.prototype.isResolved = function Resolved$isResolved(){\n  return true;\n};\n\nResolved.prototype.extractRight = function Resolved$extractRight(){\n  return [this._value];\n};\n\nResolved.prototype.toString = function Resolved$toString(){\n  return 'Future.of(' + show(this._value) + ')';\n};\n\nfunction of(x){\n  return new Resolved(x);\n}\n\nfunction Never(){\n  this._isNever = true;\n}\n\nNever.prototype = Object.create(Future.prototype);\n\nNever.prototype._ap = moop;\nNever.prototype._map = moop;\nNever.prototype._bimap = moop;\nNever.prototype._chain = moop;\nNever.prototype._mapRej = moop;\nNever.prototype._chainRej = moop;\nNever.prototype._both = moop;\nNever.prototype._or = moop;\nNever.prototype._swap = moop;\nNever.prototype._fold = moop;\nNever.prototype._finally = moop;\n\nNever.prototype._race = function Never$race(other){\n  return other;\n};\n\nNever.prototype._fork = function Never$_fork(){\n  return noop;\n};\n\nNever.prototype.toString = function Never$toString(){\n  return 'Future.never';\n};\n\nvar never = new Never();\n\nfunction isNever(x){\n  return isFuture(x) && x._isNever === true;\n}\n\nfunction Eager(future){\n  var _this = this;\n  _this.rej = noop;\n  _this.res = noop;\n  _this.rejected = false;\n  _this.resolved = false;\n  _this.value = null;\n  _this.cancel = future._fork(function Eager$reject(x){\n    _this.value = x;\n    _this.rejected = true;\n    _this.cancel = noop;\n    _this.rej(x);\n  }, function Eager$resolve(x){\n    _this.value = x;\n    _this.resolved = true;\n    _this.cancel = noop;\n    _this.res(x);\n  });\n}\n\nEager.prototype = Object.create(Core);\n\nEager.prototype._fork = function Eager$_fork(rej, res){\n  if(this.rejected) rej(this.value);\n  else if(this.resolved) res(this.value);\n  else{\n    this.rej = rej;\n    this.res = res;\n  }\n  return this.cancel;\n};\n\nfunction check$ap(f){\n  return isFunction(f) ? f : typeError(\n    'Future#ap expects its first argument to be a Future of a Function'\n    + '\\n  Actual: Future.of(' + show(f) + ')'\n  );\n}\n\nfunction check$chain(m, f, x){\n  return isFuture(m) ? m : invalidFuture(\n    'Future#chain',\n    'the function it\\'s given to return a Future',\n    m,\n    '\\n  From calling: ' + showf(f) + '\\n  With: ' + show(x)\n  );\n}\n\nfunction check$chainRej(m, f, x){\n  return isFuture(m) ? m : invalidFuture(\n    'Future#chainRej',\n    'the function it\\'s given to return a Future',\n    m,\n    '\\n  From calling: ' + showf(f) + '\\n  With: ' + show(x)\n  );\n}\n\nvar Action = {\n  rejected: function Action$rejected(x){ this.cancel(); return new Rejected(x) },\n  resolved: function Action$resolved(x){ this.cancel(); return new Resolved(x) },\n  run: function Action$run(){ return this },\n  cancel: function Action$cancel(){}\n};\n\nfunction ApAction(other){ this.other = other; }\nApAction.prototype = Object.create(Action);\n\nApAction.prototype.resolved = function ApAction$resolved(f){\n  check$ap(f);\n  return this.other._map(function ApAction$resolved$mapper(x){ return f(x) });\n};\n\nApAction.prototype.toString = function ApAction$toString(){\n  return 'ap(' + this.other.toString() + ')';\n};\n\nfunction MapAction(mapper){ this.mapper = mapper; }\nMapAction.prototype = Object.create(Action);\n\nMapAction.prototype.resolved = function MapAction$resolved(x){\n  return new Resolved(this.mapper(x));\n};\n\nMapAction.prototype.toString = function MapAction$toString(){\n  return 'map(' + showf(this.mapper) + ')';\n};\n\nfunction BimapAction(lmapper, rmapper){ this.lmapper = lmapper; this.rmapper = rmapper; }\nBimapAction.prototype = Object.create(Action);\n\nBimapAction.prototype.rejected = function BimapAction$rejected(x){\n  return new Rejected(this.lmapper(x));\n};\n\nBimapAction.prototype.resolved = function BimapAction$resolved(x){\n  return new Resolved(this.rmapper(x));\n};\n\nBimapAction.prototype.toString = function BimapAction$toString(){\n  return 'bimap(' + showf(this.lmapper) + ', ' + showf(this.rmapper) + ')';\n};\n\nfunction ChainAction(mapper){ this.mapper = mapper; }\nChainAction.prototype = Object.create(Action);\n\nChainAction.prototype.resolved = function ChainAction$resolved(x){\n  return check$chain(this.mapper(x), this.mapper, x);\n};\n\nChainAction.prototype.toString = function ChainAction$toString(){\n  return 'chain(' + showf(this.mapper) + ')';\n};\n\nfunction MapRejAction(mapper){ this.mapper = mapper; }\nMapRejAction.prototype = Object.create(Action);\n\nMapRejAction.prototype.rejected = function MapRejAction$rejected(x){\n  return new Rejected(this.mapper(x));\n};\n\nMapRejAction.prototype.toString = function MapRejAction$toString(){\n  return 'mapRej(' + showf(this.mapper) + ')';\n};\n\nfunction ChainRejAction(mapper){ this.mapper = mapper; }\nChainRejAction.prototype = Object.create(Action);\n\nChainRejAction.prototype.rejected = function ChainRejAction$rejected(x){\n  return check$chainRej(this.mapper(x), this.mapper, x);\n};\n\nChainRejAction.prototype.toString = function ChainRejAction$toString(){\n  return 'chainRej(' + showf(this.mapper) + ')';\n};\n\nfunction SwapAction(){}\nSwapAction.prototype = Object.create(Action);\n\nSwapAction.prototype.rejected = function SwapAction$rejected(x){\n  return new Resolved(x);\n};\n\nSwapAction.prototype.resolved = function SwapAction$resolved(x){\n  return new Rejected(x);\n};\n\nSwapAction.prototype.toString = function SwapAction$toString(){\n  return 'swap()';\n};\n\nfunction FoldAction(lmapper, rmapper){ this.lmapper = lmapper; this.rmapper = rmapper; }\nFoldAction.prototype = Object.create(Action);\n\nFoldAction.prototype.rejected = function FoldAction$rejected(x){\n  return new Resolved(this.lmapper(x));\n};\n\nFoldAction.prototype.resolved = function FoldAction$resolved(x){\n  return new Resolved(this.rmapper(x));\n};\n\nFoldAction.prototype.toString = function FoldAction$toString(){\n  return 'fold(' + showf(this.lmapper) + ', ' + showf(this.rmapper) + ')';\n};\n\nfunction FinallyAction(other){ this.other = other; }\nFinallyAction.prototype = Object.create(Action);\n\nFinallyAction.prototype.rejected = function FinallyAction$rejected(x){\n  return this.other._and(new Rejected(x));\n};\n\nFinallyAction.prototype.resolved = function FinallyAction$resolved(x){\n  return this.other._map(function FoldAction$resolved$mapper(){ return x });\n};\n\nFinallyAction.prototype.cancel = function FinallyAction$cancel(){\n  this.other._fork(noop, noop)();\n};\n\nFinallyAction.prototype.toString = function FinallyAction$toString(){\n  return 'finally(' + this.other.toString() + ')';\n};\n\nfunction AndAction(other){ this.other = other; }\nAndAction.prototype = Object.create(Action);\n\nAndAction.prototype.resolved = function AndAction$resolved(){\n  return this.other;\n};\n\nAndAction.prototype.toString = function AndAction$toString(){\n  return 'and(' + this.other.toString() + ')';\n};\n\nfunction OrAction(other){ this.other = other; }\nOrAction.prototype = Object.create(Action);\n\nOrAction.prototype.rejected = function OrAction$rejected(){\n  return this.other;\n};\n\nOrAction.prototype.toString = function OrAction$toString(){\n  return 'or(' + this.other.toString() + ')';\n};\n\nfunction RaceAction(other){ this.other = other; }\nRaceAction.prototype = Object.create(Action);\n\nRaceAction.prototype.run = function RaceAction$run(early){\n  return new RaceActionState(early, new Eager(this.other));\n};\n\nRaceAction.prototype.toString = function RaceAction$toString(){\n  return 'race(' + this.other.toString() + ')';\n};\n\nfunction BothAction(other){ this.other = other; }\nBothAction.prototype = Object.create(Action);\n\nBothAction.prototype.resolved = function BothAction$resolved(x){\n  return this.other._map(function BothAction$resolved$mapper(y){ return [x, y] });\n};\n\nBothAction.prototype.run = function BothAction$run(early){\n  return new BothActionState(early, new Eager(this.other));\n};\n\nBothAction.prototype.toString = function BothAction$toString(){\n  return 'both(' + this.other.toString() + ')';\n};\n\nfunction RaceActionState(early, other){\n  var _this = this;\n  _this.other = other;\n  _this.cancel = other._fork(\n    function RaceActionState$rej(x){ early(new Rejected(x), _this); },\n    function RaceActionState$res(x){ early(new Resolved(x), _this); }\n  );\n}\n\nRaceActionState.prototype = Object.create(RaceAction.prototype);\n\nfunction BothActionState(early, other){\n  var _this = this;\n  _this.other = other;\n  _this.cancel = other._fork(\n    function BothActionState$rej(x){ early(new Rejected(x), _this); },\n    noop\n  );\n}\n\nBothActionState.prototype = Object.create(BothAction.prototype);\n\nfunction Sequence(spawn, actions){\n  this._spawn = spawn;\n  this._actions = actions || empty;\n}\n\nSequence.prototype = Object.create(Future.prototype);\n\nSequence.prototype._transform = function Sequence$_transform(action){\n  return new Sequence(this._spawn, cons(action, this._actions));\n};\n\nSequence.prototype._ap = function Sequence$ap(other){\n  return this._transform(new ApAction(other));\n};\n\nSequence.prototype._map = function Sequence$map(mapper){\n  return this._transform(new MapAction(mapper));\n};\n\nSequence.prototype._bimap = function Sequence$bimap(lmapper, rmapper){\n  return this._transform(new BimapAction(lmapper, rmapper));\n};\n\nSequence.prototype._chain = function Sequence$chain(mapper){\n  return this._transform(new ChainAction(mapper));\n};\n\nSequence.prototype._mapRej = function Sequence$mapRej(mapper){\n  return this._transform(new MapRejAction(mapper));\n};\n\nSequence.prototype._chainRej = function Sequence$chainRej(mapper){\n  return this._transform(new ChainRejAction(mapper));\n};\n\nSequence.prototype._race = function Sequence$race(other){\n  return isNever(other) ? this : this._transform(new RaceAction(other));\n};\n\nSequence.prototype._both = function Sequence$both(other){\n  return this._transform(new BothAction(other));\n};\n\nSequence.prototype._and = function Sequence$and(other){\n  return this._transform(new AndAction(other));\n};\n\nSequence.prototype._or = function Sequence$or(other){\n  return this._transform(new OrAction(other));\n};\n\nSequence.prototype._swap = function Sequence$swap(){\n  return this._transform(new SwapAction);\n};\n\nSequence.prototype._fold = function Sequence$fold(lmapper, rmapper){\n  return this._transform(new FoldAction(lmapper, rmapper));\n};\n\nSequence.prototype._finally = function Sequence$finally(other){\n  return this._transform(new FinallyAction(other));\n};\n\nSequence.prototype._fork = interpreter;\n\nSequence.prototype.toString = function Sequence$toString(){\n  var str = '', tail = this._actions;\n\n  while(!tail.isEmpty){\n    str = '.' + tail.head.toString() + str;\n    tail = tail.tail;\n  }\n\n  return this._spawn.toString() + str;\n};\n\nfunction Next(x){\n  return {done: false, value: x};\n}\n\nfunction Done(x){\n  return {done: true, value: x};\n}\n\nfunction isIteration(x){\n  return isObject(x) && isBoolean(x.done);\n}\n\nvar Undetermined = 0;\nvar Synchronous = 1;\nvar Asynchronous = 2;\n\nfunction ChainRec(step, init){\n  this._step = step;\n  this._init = init;\n}\n\nChainRec.prototype = Object.create(Core);\n\nChainRec.prototype._fork = function ChainRec$_fork(rej, res){\n\n  var _step = this._step;\n  var _init = this._init;\n  var timing = Undetermined, cancel = noop, state = Next(_init);\n\n  function resolved(it){\n    state = it;\n    timing = timing === Undetermined ? Synchronous : drain();\n  }\n\n  function drain(){\n    while(!state.done){\n      timing = Undetermined;\n      var m = _step(Next, Done, state.value);\n      cancel = m._fork(rej, resolved);\n\n      if(timing !== Synchronous){\n        timing = Asynchronous;\n        return;\n      }\n    }\n\n    res(state.value);\n  }\n\n  drain();\n\n  return function Future$chainRec$cancel(){ cancel(); };\n\n};\n\nChainRec.prototype.toString = function ChainRec$toString(){\n  return 'Future.chainRec(' + showf(this._step) + ', ' + show(this._init) + ')';\n};\n\nfunction chainRec(step, init){\n  return new ChainRec(step, init);\n}\n\nfunction ap$mval(mval, mfunc){\n  if(!Z.Apply.test(mfunc)) invalidArgument('Future.ap', 1, 'be an Apply', mfunc);\n  return Z.ap(mval, mfunc);\n}\n\nfunction ap(mval, mfunc){\n  if(!Z.Apply.test(mval)) invalidArgument('Future.ap', 0, 'be an Apply', mval);\n  if(arguments.length === 1) return partial1(ap$mval, mval);\n  return ap$mval(mval, mfunc);\n}\n\nfunction alt$left(left, right){\n  if(!Z.Alt.test(right)) invalidArgument('alt', 1, 'be an Alt', right);\n  return Z.alt(left, right);\n}\n\nfunction alt(left, right){\n  if(!Z.Alt.test(left)) invalidArgument('alt', 0, 'be an Alt', left);\n  if(arguments.length === 1) return partial1(alt$left, left);\n  return alt$left(left, right);\n}\n\nfunction map$mapper(mapper, m){\n  if(!Z.Functor.test(m)) invalidArgument('Future.map', 1, 'be a Functor', m);\n  return Z.map(mapper, m);\n}\n\nfunction map(mapper, m){\n  if(!isFunction(mapper)) invalidArgument('Future.map', 0, 'be a Function', mapper);\n  if(arguments.length === 1) return partial1(map$mapper, mapper);\n  return map$mapper(mapper, m);\n}\n\nfunction bimap$lmapper$rmapper(lmapper, rmapper, m){\n  if(!Z.Bifunctor.test(m)) invalidArgument('Future.bimap', 2, 'be a Bifunctor', m);\n  return Z.bimap(lmapper, rmapper, m);\n}\n\nfunction bimap$lmapper(lmapper, rmapper, m){\n  if(!isFunction(rmapper)) invalidArgument('Future.bimap', 1, 'be a Function', rmapper);\n  if(arguments.length === 2) return partial2(bimap$lmapper$rmapper, lmapper, rmapper);\n  return bimap$lmapper$rmapper(lmapper, rmapper, m);\n}\n\nfunction bimap(lmapper, rmapper, m){\n  if(!isFunction(lmapper)) invalidArgument('Future.bimap', 0, 'be a Function', lmapper);\n  if(arguments.length === 1) return partial1(bimap$lmapper, lmapper);\n  if(arguments.length === 2) return bimap$lmapper(lmapper, rmapper);\n  return bimap$lmapper(lmapper, rmapper, m);\n}\n\nfunction chain$chainer(chainer, m){\n  if(!Z.Chain.test(m)) invalidArgument('Future.chain', 1, 'be a Chain', m);\n  return Z.chain(chainer, m);\n}\n\nfunction chain(chainer, m){\n  if(!isFunction(chainer)) invalidArgument('Future.chain', 0, 'be a Function', chainer);\n  if(arguments.length === 1) return partial1(chain$chainer, chainer);\n  return chain$chainer(chainer, m);\n}\n\nfunction mapRej$mapper(mapper, m){\n  if(!isFuture(m)) invalidFuture('Future.mapRej', 1, m);\n  return m.mapRej(mapper);\n}\n\nfunction mapRej(mapper, m){\n  if(!isFunction(mapper)) invalidArgument('Future.mapRej', 0, 'be a Function', mapper);\n  if(arguments.length === 1) return partial1(mapRej$mapper, mapper);\n  return mapRej$mapper(mapper, m);\n}\n\nfunction chainRej$chainer(chainer, m){\n  if(!isFuture(m)) invalidFuture('Future.chainRej', 1, m);\n  return m.chainRej(chainer);\n}\n\nfunction chainRej(chainer, m){\n  if(!isFunction(chainer)) invalidArgument('Future.chainRej', 0, 'be a Function', chainer);\n  if(arguments.length === 1) return partial1(chainRej$chainer, chainer);\n  return chainRej$chainer(chainer, m);\n}\n\nfunction lastly$right(right, left){\n  if(!isFuture(left)) invalidFuture('Future.finally', 1, left);\n  return left.finally(right);\n}\n\nfunction lastly(right, left){\n  if(!isFuture(right)) invalidFuture('Future.finally', 0, right);\n  if(arguments.length === 1) return partial1(lastly$right, right);\n  return lastly$right(right, left);\n}\n\nfunction and$left(left, right){\n  if(!isFuture(right)) invalidFuture('Future.and', 1, right);\n  return left.and(right);\n}\n\nfunction and(left, right){\n  if(!isFuture(left)) invalidFuture('Future.and', 0, left);\n  if(arguments.length === 1) return partial1(and$left, left);\n  return and$left(left, right);\n}\n\nfunction both$left(left, right){\n  if(!isFuture(right)) invalidFuture('Future.both', 1, right);\n  return left.both(right);\n}\n\nfunction both(left, right){\n  if(!isFuture(left)) invalidFuture('Future.both', 0, left);\n  if(arguments.length === 1) return partial1(both$left, left);\n  return both$left(left, right);\n}\n\nfunction or$left(left, right){\n  if(!isFuture(right)) invalidFuture('Future.or', 1, right);\n  return left.or(right);\n}\n\nfunction or(left, right){\n  if(!isFuture(left)) invalidFuture('Future.or', 0, left);\n  if(arguments.length === 1) return partial1(or$left, left);\n  return or$left(left, right);\n}\n\nfunction race$right(right, left){\n  if(!isFuture(left)) invalidFuture('Future.race', 1, left);\n  return left.race(right);\n}\n\nfunction race(right, left){\n  if(!isFuture(right)) invalidFuture('Future.race', 0, right);\n  if(arguments.length === 1) return partial1(race$right, right);\n  return race$right(right, left);\n}\n\nfunction swap(m){\n  if(!isFuture(m)) invalidFuture('Future.swap', 0, m);\n  return m.swap();\n}\n\nfunction fold$f$g(f, g, m){\n  if(!isFuture(m)) invalidFuture('Future.fold', 2, m);\n  return m.fold(f, g);\n}\n\nfunction fold$f(f, g, m){\n  if(!isFunction(g)) invalidArgument('Future.fold', 1, 'be a function', g);\n  if(arguments.length === 2) return partial2(fold$f$g, f, g);\n  return fold$f$g(f, g, m);\n}\n\nfunction fold(f, g, m){\n  if(!isFunction(f)) invalidArgument('Future.fold', 0, 'be a function', f);\n  if(arguments.length === 1) return partial1(fold$f, f);\n  if(arguments.length === 2) return fold$f(f, g);\n  return fold$f(f, g, m);\n}\n\nfunction done$callback(callback, m){\n  if(!isFuture(m)) invalidFuture('Future.done', 1, m);\n  return m.done(callback);\n}\n\nfunction done(callback, m){\n  if(!isFunction(callback)) invalidArgument('Future.done', 0, 'be a Function', callback);\n  if(arguments.length === 1) return partial1(done$callback, callback);\n  return done$callback(callback, m);\n}\n\nfunction fork$f$g(f, g, m){\n  if(!isFuture(m)) invalidFuture('Future.fork', 2, m);\n  return m._fork(f, g);\n}\n\nfunction fork$f(f, g, m){\n  if(!isFunction(g)) invalidArgument('Future.fork', 1, 'be a function', g);\n  if(arguments.length === 2) return partial2(fork$f$g, f, g);\n  return fork$f$g(f, g, m);\n}\n\nfunction fork(f, g, m){\n  if(!isFunction(f)) invalidArgument('Future.fork', 0, 'be a function', f);\n  if(arguments.length === 1) return partial1(fork$f, f);\n  if(arguments.length === 2) return fork$f(f, g);\n  return fork$f(f, g, m);\n}\n\nfunction promise(m){\n  if(!isFuture(m)) invalidFuture('Future.promise', 0, m);\n  return m.promise();\n}\n\nfunction value$cont(cont, m){\n  if(!isFuture(m)) invalidFuture('Future.value', 1, m);\n  return m.value(cont);\n}\n\nfunction value(cont, m){\n  if(!isFunction(cont)) invalidArgument('Future.value', 0, 'be a Function', cont);\n  if(arguments.length === 1) return partial1(value$cont, cont);\n  return value$cont(cont, m);\n}\n\nfunction extractLeft(m){\n  if(!isFuture(m)) invalidFuture('Future.extractLeft', 0, m);\n  return m.extractLeft();\n}\n\nfunction extractRight(m){\n  if(!isFuture(m)) invalidFuture('Future.extractRight', 0, m);\n  return m.extractRight();\n}\n\nfunction check$ap$f(f){\n  if(!isFunction(f)) typeError(\n    'Future#ap expects its first argument to be a Future of a Function'\n    + '\\n  Actual: Future.of(' + show(f) + ')'\n  );\n}\n\nfunction ParallelAp(mval, mfunc){\n  this._mval = mval;\n  this._mfunc = mfunc;\n}\n\nParallelAp.prototype = Object.create(Core);\n\nParallelAp.prototype._fork = function ParallelAp$fork(rej, res){\n  var func, val, okval = false, okfunc = false, rejected = false, c1, c2;\n\n  function ParallelAp$rej(x){\n    if(!rejected){\n      rejected = true;\n      rej(x);\n    }\n  }\n\n  c1 = this._mval._fork(ParallelAp$rej, function ParallelAp$fork$resVal(x){\n    c1 = noop;\n    if(!okval) return void (okfunc = true, val = x);\n    res(func(x));\n  });\n  c2 = this._mfunc._fork(ParallelAp$rej, function ParallelAp$fork$resFunc(f){\n    c2 = noop;\n    check$ap$f(f);\n    if(!okfunc) return void (okval = true, func = f);\n    res(f(val));\n  });\n\n  return function ParallelAp$fork$cancel(){\n    c1();\n    c2();\n  };\n};\n\nParallelAp.prototype.toString = function ParallelAp$toString(){\n  return 'new ParallelAp(' + this._mval.toString() + ', ' + this._mfunc.toString() + ')';\n};\n\nfunction parallelAp(mval, mfunc){\n  return new ParallelAp(mval, mfunc);\n}\n\nfunction After$race(other){\n  return other.isSettled()\n       ? other\n       : isNever(other)\n       ? this\n       : typeof other._time === 'number'\n       ? other._time < this._time ? other : this\n       : Core._race.call(this, other);\n}\n\nfunction After(time, value){\n  this._time = time;\n  this._value = value;\n}\n\nAfter.prototype = Object.create(Core);\n\nAfter.prototype._race = After$race;\n\nAfter.prototype._swap = function After$swap(){\n  return new RejectAfter(this._time, this._value);\n};\n\nAfter.prototype._fork = function After$_fork(rej, res){\n  var id = setTimeout(res, this._time, this._value);\n  return function After$cancel(){ clearTimeout(id); };\n};\n\nAfter.prototype.extractRight = function After$extractRight(){\n  return [this._value];\n};\n\nAfter.prototype.toString = function After$toString(){\n  return 'Future.after(' + show(this._time) + ', ' + show(this._value) + ')';\n};\n\nfunction RejectAfter(time, value){\n  this._time = time;\n  this._value = value;\n}\n\nRejectAfter.prototype = Object.create(Core);\n\nRejectAfter.prototype._race = After$race;\n\nRejectAfter.prototype._swap = function RejectAfter$swap(){\n  return new After(this._time, this._value);\n};\n\nRejectAfter.prototype._fork = function RejectAfter$_fork(rej){\n  var id = setTimeout(rej, this._time, this._value);\n  return function RejectAfter$cancel(){ clearTimeout(id); };\n};\n\nRejectAfter.prototype.extractLeft = function RejectAfter$extractLeft(){\n  return [this._value];\n};\n\nRejectAfter.prototype.toString = function RejectAfter$toString(){\n  return 'Future.rejectAfter(' + show(this._time) + ', ' + show(this._value) + ')';\n};\n\nfunction after$time(time, value){\n  return time === Infinity ? never : new After(time, value);\n}\n\nfunction after(time, value){\n  if(!isUnsigned(time)) invalidArgument('Future.after', 0, 'be a positive integer', time);\n  if(arguments.length === 1) return partial1(after$time, time);\n  return after$time(time, value);\n}\n\nfunction rejectAfter$time(time, reason){\n  return time === Infinity ? never : new RejectAfter(time, reason);\n}\n\nfunction rejectAfter(time, reason){\n  if(!isUnsigned(time)) invalidArgument('Future.rejectAfter', 0, 'be a positive integer', time);\n  if(arguments.length === 1) return partial1(rejectAfter$time, time);\n  return rejectAfter$time(time, reason);\n}\n\nfunction Attempt(fn){\n  this._fn = fn;\n}\n\nAttempt.prototype = Object.create(Core);\n\nAttempt.prototype._fork = function Attempt$fork(rej, res){\n  var r;\n  try{ r = this._fn(); }catch(e){ rej(e); return noop }\n  res(r);\n  return noop;\n};\n\nAttempt.prototype.toString = function Attempt$toString(){\n  return 'Future.try(' + showf(this._fn) + ')';\n};\n\nfunction attempt(f){\n  if(!isFunction(f)) invalidArgument('Future.try', 0, 'be a function', f);\n  return new Attempt(f);\n}\n\nvar Cold = Cached.Cold = 0;\nvar Pending = Cached.Pending = 1;\nvar Rejected$1 = Cached.Rejected = 2;\nvar Resolved$1 = Cached.Resolved = 3;\n\nfunction Queued(rej, res){\n  this[Rejected$1] = rej;\n  this[Resolved$1] = res;\n}\n\nfunction Cached(pure){\n  this._pure = pure;\n  this.reset();\n}\n\nCached.prototype = Object.create(Core);\n\nCached.prototype.isRejected = function Cached$isRejected(){\n  return this._state === Rejected$1;\n};\n\nCached.prototype.isResolved = function Cached$isResolved(){\n  return this._state === Resolved$1;\n};\n\nCached.prototype.extractLeft = function Cached$extractLeft(){\n  return this.isRejected() ? [this._value] : [];\n};\n\nCached.prototype.extractRight = function Cached$extractRight(){\n  return this.isResolved() ? [this._value] : [];\n};\n\nCached.prototype._addToQueue = function Cached$addToQueue(rej, res){\n  var _this = this;\n  if(_this._state > Pending) return noop;\n  var i = _this._queue.push(new Queued(rej, res)) - 1;\n  _this._queued = _this._queued + 1;\n\n  return function Cached$removeFromQueue(){\n    if(_this._state > Pending) return;\n    _this._queue[i] = undefined;\n    _this._queued = _this._queued - 1;\n    if(_this._queued === 0) _this.reset();\n  };\n};\n\nCached.prototype._drainQueue = function Cached$drainQueue(){\n  if(this._state <= Pending) return;\n  if(this._queued === 0) return;\n  var queue = this._queue;\n  var length = queue.length;\n  var state = this._state;\n  var value = this._value;\n\n  for(var i = 0; i < length; i++){\n    queue[i] && queue[i][state](value);\n    queue[i] = undefined;\n  }\n\n  this._queue = undefined;\n  this._queued = 0;\n};\n\nCached.prototype.reject = function Cached$reject(reason){\n  if(this._state > Pending) return;\n  this._value = reason;\n  this._state = Rejected$1;\n  this._drainQueue();\n};\n\nCached.prototype.resolve = function Cached$resolve(value){\n  if(this._state > Pending) return;\n  this._value = value;\n  this._state = Resolved$1;\n  this._drainQueue();\n};\n\nCached.prototype.run = function Cached$run(){\n  var _this = this;\n  if(_this._state > Cold) return;\n  _this._state = Pending;\n  _this._cancel = _this._pure._fork(\n    function Cached$fork$rej(x){ _this.reject(x); },\n    function Cached$fork$res(x){ _this.resolve(x); }\n  );\n};\n\nCached.prototype.reset = function Cached$reset(){\n  if(this._state === Cold) return;\n  if(this._state > Pending) this._cancel();\n  this._cancel = noop;\n  this._queue = [];\n  this._queued = 0;\n  this._value = undefined;\n  this._state = Cold;\n};\n\nCached.prototype._fork = function Cached$_fork(rej, res){\n  var cancel = noop;\n\n  switch(this._state){\n    case Pending: cancel = this._addToQueue(rej, res); break;\n    case Rejected$1: rej(this._value); break;\n    case Resolved$1: res(this._value); break;\n    default: cancel = this._addToQueue(rej, res); this.run();\n  }\n\n  return cancel;\n};\n\nCached.prototype.toString = function Cached$toString(){\n  return 'Future.cache(' + this._pure.toString() + ')';\n};\n\nfunction cache(m){\n  if(!isFuture(m)) invalidFuture('Future.cache', 0, m);\n  return new Cached(m);\n}\n\nfunction Encase(fn, a){\n  this._fn = fn;\n  this._a = a;\n}\n\nEncase.prototype = Object.create(Core);\n\nEncase.prototype._fork = function Encase$fork(rej, res){\n  var r;\n  try{ r = this._fn(this._a); }catch(e){ rej(e); return noop }\n  res(r);\n  return noop;\n};\n\nEncase.prototype.toString = function Encase$toString(){\n  return 'Future.encase(' + showf(this._fn) + ', ' + show(this._a) + ')';\n};\n\nfunction encase(f, x){\n  if(!isFunction(f)) invalidArgument('Future.encase', 0, 'be a function', f);\n  if(arguments.length === 1) return partial1(encase, f);\n  return new Encase(f, x);\n}\n\nfunction Encase2(fn, a, b){\n  this._fn = fn;\n  this._a = a;\n  this._b = b;\n}\n\nEncase2.prototype = Object.create(Core);\n\nEncase2.prototype._fork = function Encase2$fork(rej, res){\n  var r;\n  try{ r = this._fn(this._a, this._b); }catch(e){ rej(e); return noop }\n  res(r);\n  return noop;\n};\n\nEncase2.prototype.toString = function Encase2$toString(){\n  return 'Future.encase2(' + showf(this._fn) + ', ' + show(this._a) + ', ' + show(this._b) + ')';\n};\n\nfunction encase2(f, x, y){\n  if(!isFunction(f)) invalidArgument('Future.encase2', 0, 'be a function', f);\n\n  switch(arguments.length){\n    case 1: return partial1(encase2, f);\n    case 2: return partial2(encase2, f, x);\n    default: return new Encase2(f, x, y);\n  }\n}\n\nfunction Encase3(fn, a, b, c){\n  this._fn = fn;\n  this._a = a;\n  this._b = b;\n  this._c = c;\n}\n\nEncase3.prototype = Object.create(Core);\n\nEncase3.prototype._fork = function Encase3$fork(rej, res){\n  var r;\n  try{ r = this._fn(this._a, this._b, this._c); }catch(e){ rej(e); return noop }\n  res(r);\n  return noop;\n};\n\nEncase3.prototype.toString = function Encase3$toString(){\n  return 'Future.encase3('\n       + showf(this._fn)\n       + ', '\n       + show(this._a)\n       + ', '\n       + show(this._b)\n       + ', '\n       + show(this._c)\n       + ')';\n};\n\nfunction encase3(f, x, y, z){\n  if(!isFunction(f)) invalidArgument('Future.encase3', 0, 'be a function', f);\n\n  switch(arguments.length){\n    case 1: return partial1(encase3, f);\n    case 2: return partial2(encase3, f, x);\n    case 3: return partial3(encase3, f, x, y);\n    default: return new Encase3(f, x, y, z);\n  }\n}\n\nfunction EncaseN(fn, a){\n  this._fn = fn;\n  this._a = a;\n}\n\nEncaseN.prototype = Object.create(Core);\n\nEncaseN.prototype._fork = function EncaseN$fork(rej, res){\n  var open = true;\n  this._fn(this._a, function EncaseN$done(err, val){\n    if(open){\n      open = false;\n      err ? rej(err) : res(val);\n    }\n  });\n  return function EncaseN$cancel(){ open = false; };\n};\n\nEncaseN.prototype.toString = function EncaseN$toString(){\n  return 'Future.encaseN(' + showf(this._fn) + ', ' + show(this._a) + ')';\n};\n\nfunction encaseN(f, x){\n  if(!isFunction(f)) invalidArgument('Future.encaseN', 0, 'be a function', f);\n  if(arguments.length === 1) return partial1(encaseN, f);\n  return new EncaseN(f, x);\n}\n\nfunction EncaseN2(fn, a, b){\n  this._fn = fn;\n  this._a = a;\n  this._b = b;\n}\n\nEncaseN2.prototype = Object.create(Core);\n\nEncaseN2.prototype._fork = function EncaseN2$fork(rej, res){\n  var open = true;\n  this._fn(this._a, this._b, function EncaseN2$done(err, val){\n    if(open){\n      open = false;\n      err ? rej(err) : res(val);\n    }\n  });\n  return function EncaseN2$cancel(){ open = false; };\n};\n\nEncaseN2.prototype.toString = function EncaseN2$toString(){\n  return 'Future.encaseN2(' + showf(this._fn) + ', ' + show(this._a) + ', ' + show(this._b) + ')';\n};\n\nfunction encaseN2(f, x, y){\n  if(!isFunction(f)) invalidArgument('Future.encaseN2', 0, 'be a function', f);\n\n  switch(arguments.length){\n    case 1: return partial1(encaseN2, f);\n    case 2: return partial2(encaseN2, f, x);\n    default: return new EncaseN2(f, x, y);\n  }\n}\n\nfunction EncaseN$1(fn, a, b, c){\n  this._fn = fn;\n  this._a = a;\n  this._b = b;\n  this._c = c;\n}\n\nEncaseN$1.prototype = Object.create(Core);\n\nEncaseN$1.prototype._fork = function EncaseN$3$fork(rej, res){\n  var open = true;\n  this._fn(this._a, this._b, this._c, function EncaseN$3$done(err, val){\n    if(open){\n      open = false;\n      err ? rej(err) : res(val);\n    }\n  });\n  return function EncaseN$3$cancel(){ open = false; };\n};\n\nEncaseN$1.prototype.toString = function EncaseN$3$toString(){\n  return 'Future.encaseN3('\n       + showf(this._fn)\n       + ', '\n       + show(this._a)\n       + ', '\n       + show(this._b)\n       + ', '\n       + show(this._c)\n       + ')';\n};\n\nfunction encaseN3(f, x, y, z){\n  if(!isFunction(f)) invalidArgument('Future.encaseN3', 0, 'be a function', f);\n\n  switch(arguments.length){\n    case 1: return partial1(encaseN3, f);\n    case 2: return partial2(encaseN3, f, x);\n    case 3: return partial3(encaseN3, f, x, y);\n    default: return new EncaseN$1(f, x, y, z);\n  }\n}\n\nfunction check$promise(p, f, a){\n  return isThenable(p) ? p : typeError(\n    'Future.encaseP expects the function it\\'s given to return a Promise/Thenable'\n    + '\\n  Actual: ' + (show(p)) + '\\n  From calling: ' + (showf(f))\n    + '\\n  With: ' + (show(a))\n  );\n}\n\nfunction EncaseP(fn, a){\n  this._fn = fn;\n  this._a = a;\n}\n\nEncaseP.prototype = Object.create(Core);\n\nEncaseP.prototype._fork = function EncaseP$fork(rej, res){\n  var _fn = this._fn;\n  var _a = this._a;\n  var open = true;\n  check$promise(_fn(_a), _fn, _a).then(immediately(function EncaseP$res(x){\n    if(open){\n      open = false;\n      res(x);\n    }\n  }), immediately(function EncaseP$rej(x){\n    if(open){\n      open = false;\n      rej(x);\n    }\n  }));\n  return function EncaseP$cancel(){ open = false; };\n};\n\nEncaseP.prototype.toString = function EncaseP$toString(){\n  return 'Future.encaseP(' + showf(this._fn) + ', ' + show(this._a) + ')';\n};\n\nfunction encaseP(f, x){\n  if(!isFunction(f)) invalidArgument('Future.encaseP', 0, 'be a function', f);\n  if(arguments.length === 1) return partial1(encaseP, f);\n  return new EncaseP(f, x);\n}\n\nfunction check$promise$1(p, f, a, b){\n  return isThenable(p) ? p : typeError(\n    'Future.encaseP2 expects the function it\\'s given to return a Promise/Thenable'\n    + '\\n  Actual: ' + (show(p)) + '\\n  From calling: ' + (showf(f))\n    + '\\n  With 1: ' + (show(a))\n    + '\\n  With 2: ' + (show(b))\n  );\n}\n\nfunction EncaseP2(fn, a, b){\n  this._fn = fn;\n  this._a = a;\n  this._b = b;\n}\n\nEncaseP2.prototype = Object.create(Core);\n\nEncaseP2.prototype._fork = function EncaseP2$fork(rej, res){\n  var _fn = this._fn;\n  var _a = this._a;\n  var _b = this._b;\n  var open = true;\n  check$promise$1(_fn(_a, _b), _fn, _a, _b).then(immediately(function EncaseP2$res(x){\n    if(open){\n      open = false;\n      res(x);\n    }\n  }), immediately(function EncaseP2$rej(x){\n    if(open){\n      open = false;\n      rej(x);\n    }\n  }));\n  return function EncaseP2$cancel(){ open = false; };\n};\n\nEncaseP2.prototype.toString = function EncaseP2$toString(){\n  return 'Future.encaseP2(' + showf(this._fn) + ', ' + show(this._a) + ', ' + show(this._b) + ')';\n};\n\nfunction encaseP2(f, x, y){\n  if(!isFunction(f)) invalidArgument('Future.encaseP2', 0, 'be a function', f);\n\n  switch(arguments.length){\n    case 1: return partial1(encaseP2, f);\n    case 2: return partial2(encaseP2, f, x);\n    default: return new EncaseP2(f, x, y);\n  }\n}\n\nfunction check$promise$2(p, f, a, b, c){\n  return isThenable(p) ? p : typeError(\n    'Future.encaseP3 expects the function it\\'s given to return a Promise/Thenable'\n    + '\\n  Actual: ' + (show(p)) + '\\n  From calling: ' + (showf(f))\n    + '\\n  With 1: ' + (show(a))\n    + '\\n  With 2: ' + (show(b))\n    + '\\n  With 3: ' + (show(c))\n  );\n}\n\nfunction EncaseP3(fn, a, b, c){\n  this._fn = fn;\n  this._a = a;\n  this._b = b;\n  this._c = c;\n}\n\nEncaseP3.prototype = Object.create(Core);\n\nEncaseP3.prototype._fork = function EncaseP3$fork(rej, res){\n  var _fn = this._fn;\n  var _a = this._a;\n  var _b = this._b;\n  var _c = this._c;\n  var open = true;\n  check$promise$2(_fn(_a, _b, _c), _fn, _a, _b, _c).then(immediately(function EncaseP3$res(x){\n    if(open){\n      open = false;\n      res(x);\n    }\n  }), immediately(function EncaseP3$rej(x){\n    if(open){\n      open = false;\n      rej(x);\n    }\n  }));\n  return function EncaseP3$cancel(){ open = false; };\n};\n\nEncaseP3.prototype.toString = function EncaseP3$toString(){\n  return 'Future.encaseP3('\n       + showf(this._fn)\n       + ', '\n       + show(this._a)\n       + ', '\n       + show(this._b)\n       + ', '\n       + show(this._c)\n       + ')';\n};\n\nfunction encaseP3(f, x, y, z){\n  if(!isFunction(f)) invalidArgument('Future.encaseP3', 0, 'be a function', f);\n\n  switch(arguments.length){\n    case 1: return partial1(encaseP3, f);\n    case 2: return partial2(encaseP3, f, x);\n    case 3: return partial3(encaseP3, f, x, y);\n    default: return new EncaseP3(f, x, y, z);\n  }\n}\n\n/*eslint consistent-return: 0*/\n\nfunction check$iterator(g){\n  return isIterator(g) ? g : invalidArgument(\n    'Future.do', 0, 'return an iterator, maybe you forgot the \"*\"', g\n  );\n}\n\nfunction check$iteration(o){\n  if(!isIteration(o)) typeError(\n    'Future.do was given an invalid generator:'\n    + ' Its iterator did not return a valid iteration from iterator.next()'\n    + '\\n  Actual: ' + show(o)\n  );\n  if(o.done || isFuture(o.value)) return o;\n  return invalidFuture(\n    'Future.do',\n    'the iterator to produce only valid Futures',\n    o.value,\n    '\\n  Tip: If you\\'re using a generator, make sure you always yield a Future'\n  );\n}\n\nfunction Go(generator){\n  this._generator = generator;\n}\n\nGo.prototype = Object.create(Core);\n\nGo.prototype._fork = function Go$_fork(rej, res){\n\n  var iterator = check$iterator(this._generator());\n\n  var timing = Undetermined, cancel = noop, state, value;\n\n  function resolved(x){\n    value = x;\n    if(timing === Asynchronous) return drain();\n    timing = Synchronous;\n    state = check$iteration(iterator.next(value));\n  }\n\n  function drain(){\n    state = check$iteration(iterator.next(value));\n\n    while(!state.done){\n      timing = Undetermined;\n      cancel = state.value._fork(rej, resolved);\n\n      if(timing !== Synchronous){\n        timing = Asynchronous;\n        return;\n      }\n    }\n\n    res(state.value);\n  }\n\n  drain();\n\n  return function Go$cancel(){ cancel(); };\n\n};\n\nGo.prototype.toString = function Go$toString(){\n  return 'Future.do(' + showf(this._generator) + ')';\n};\n\nfunction go(generator){\n  if(!isFunction(generator)) invalidArgument('Future.do', 0, 'be a Function', generator);\n  return new Go(generator);\n}\n\nfunction check$dispose(m, f, x){\n  if(!isFuture(m)) invalidFuture(\n    'Future.hook',\n    'the first function it\\'s given to return a Future',\n    m,\n    '\\n  From calling: ' + showf(f) + '\\n  With: ' + show(x)\n  );\n}\n\nfunction check$consume(m, f, x){\n  if(!isFuture(m)) invalidFuture(\n    'Future.hook',\n    'the second function it\\'s given to return a Future',\n    m,\n    '\\n  From calling: ' + showf(f) + '\\n  With: ' + show(x)\n  );\n}\n\nfunction Hook(acquire, dispose, consume){\n  this._acquire = acquire;\n  this._dispose = dispose;\n  this._consume = consume;\n}\n\nHook.prototype = Object.create(Core);\n\nHook.prototype._fork = function Hook$fork(rej, res){\n\n  var _acquire = this._acquire, _dispose = this._dispose, _consume = this._consume;\n  var cancel, cancelAcquire = noop, cancelConsume = noop, resource, value, cont = noop;\n\n  function Hook$done(){\n    cont(value);\n  }\n\n  function Hook$dispose(){\n    var disposal = _dispose(resource);\n    check$dispose(disposal, _dispose, resource);\n    cancel = disposal._fork(rej, Hook$done);\n    return cancel;\n  }\n\n  function Hook$cancelConsuption(){\n    cancelConsume();\n    Hook$dispose()();\n  }\n\n  function Hook$consumptionRejected(x){\n    cont = rej;\n    value = x;\n    Hook$dispose();\n  }\n\n  function Hook$consumptionResolved(x){\n    cont = res;\n    value = x;\n    Hook$dispose();\n  }\n\n  function Hook$acquireResolved(x){\n    resource = x;\n    var consumption = _consume(resource);\n    check$consume(consumption, _consume, resource);\n    cancel = Hook$cancelConsuption;\n    cancelConsume = consumption._fork(Hook$consumptionRejected, Hook$consumptionResolved);\n  }\n\n  cancelAcquire = _acquire._fork(rej, Hook$acquireResolved);\n\n  cancel = cancel || cancelAcquire;\n\n  return function Hook$fork$cancel(){ cancel(); };\n\n};\n\nHook.prototype.toString = function Hook$toString(){\n  return 'Future.hook('\n       + this._acquire.toString()\n       + ', '\n       + showf(this._dispose)\n       + ', '\n       + showf(this._consume)\n       + ')';\n};\n\nfunction hook$acquire$cleanup(acquire, cleanup, consume){\n  if(!isFunction(consume)) invalidArgument('Future.hook', 2, 'be a Future', consume);\n  return new Hook(acquire, cleanup, consume);\n}\n\nfunction hook$acquire(acquire, cleanup, consume){\n  if(!isFunction(cleanup)) invalidArgument('Future.hook', 1, 'be a function', cleanup);\n  if(arguments.length === 2) return partial2(hook$acquire$cleanup, acquire, cleanup);\n  return hook$acquire$cleanup(acquire, cleanup, consume);\n}\n\nfunction hook(acquire, cleanup, consume){\n  if(!isFuture(acquire)) invalidFuture('Future.hook', 0, acquire);\n  if(arguments.length === 1) return partial1(hook$acquire, acquire);\n  if(arguments.length === 2) return hook$acquire(acquire, cleanup);\n  return hook$acquire(acquire, cleanup, consume);\n}\n\nfunction Node(fn){\n  this._fn = fn;\n}\n\nNode.prototype = Object.create(Core);\n\nNode.prototype._fork = function Node$fork(rej, res){\n  var open = true;\n  this._fn(function Node$done(err, val){\n    if(open){\n      open = false;\n      err ? rej(err) : res(val);\n    }\n  });\n  return function Node$cancel(){ open = false; };\n};\n\nNode.prototype.toString = function Node$toString(){\n  return 'Future.node(' + showf(this._fn) + ')';\n};\n\nfunction node(f){\n  if(!isFunction(f)) invalidArgument('Future.node', 0, 'be a function', f);\n  return new Node(f);\n}\n\nfunction check$parallel(m, i){\n  return isFuture(m) ? m : invalidFuture(\n    'Future.parallel',\n    'its second argument to be an array of valid Futures. '\n  + 'The value at position ' + i + ' in the array is not a Future',\n    m\n  );\n}\n\nfunction Parallel(max, futures){\n  this._futures = futures;\n  this._length = futures.length;\n  this._max = Math.min(this._length, max);\n}\n\nParallel.prototype = Object.create(Core);\n\nParallel.prototype._fork = function Parallel$_fork(rej, res){\n\n  var _futures = this._futures, _length = this._length, _max = this._max;\n  var cancels = new Array(_length), out = new Array(_length);\n  var cursor = 0, running = 0, blocked = false;\n\n  function Parallel$cancel(){\n    cursor = _length;\n    for(var n = 0; n < _length; n++) cancels[n] && cancels[n]();\n  }\n\n  function Parallel$run(idx){\n    running++;\n    cancels[idx] = _futures[idx]._fork(function Parallel$rej(reason){\n      cancels[idx] = noop;\n      Parallel$cancel();\n      rej(reason);\n    }, function Parallel$res(value){\n      cancels[idx] = noop;\n      out[idx] = value;\n      running--;\n      if(cursor === _length && running === 0) res(out);\n      else if(blocked) Parallel$drain();\n    });\n  }\n\n  function Parallel$drain(){\n    blocked = false;\n    while(cursor < _length && running < _max) Parallel$run(cursor++);\n    blocked = true;\n  }\n\n  Parallel$drain();\n\n  return Parallel$cancel;\n\n};\n\nParallel.prototype.toString = function Parallel$toString(){\n  return 'Future.parallel(' + this._max + ', ' + show(this._futures) + ')';\n};\n\nvar emptyArray = new Resolved([]);\n\nfunction parallel$max(max, xs){\n  if(!isArray(xs)) invalidArgument('Future.parallel', 1, 'be an array', xs);\n  var futures = mapArray(xs, check$parallel);\n  return futures.length === 0 ? emptyArray : new Parallel(max, futures);\n}\n\nfunction parallel(max, xs){\n  if(!isUnsigned(max)) invalidArgument('Future.parallel', 0, 'be a positive integer', max);\n  if(arguments.length === 1) return partial1(parallel$max, max);\n  return parallel$max(max, xs);\n}\n\nfunction check$promise$3(p, f){\n  return isThenable(p) ? p : typeError(\n    'Future.tryP expects the function it\\'s given to return a Promise/Thenable'\n    + '\\n  Actual: ' + show(p) + '\\n  From calling: ' + showf(f)\n  );\n}\n\nfunction TryP(fn){\n  this._fn = fn;\n}\n\nTryP.prototype = Object.create(Core);\n\nTryP.prototype._fork = function TryP$fork(rej, res){\n  var open = true;\n  check$promise$3(this._fn(), this._fn).then(immediately(function TryP$res(x){\n    if(open){\n      open = false;\n      res(x);\n    }\n  }), immediately(function TryP$rej(x){\n    if(open){\n      open = false;\n      rej(x);\n    }\n  }));\n  return function TryP$cancel(){ open = false; };\n};\n\nTryP.prototype.toString = function TryP$toString(){\n  return 'Future.tryP(' + show(this._fn) + ')';\n};\n\nfunction tryP(f){\n  if(!isFunction(f)) invalidArgument('Future.tryP', 0, 'be a function', f);\n  return new TryP(f);\n}\n\nif(typeof Object.create !== 'function') error('Please polyfill Object.create to use Fluture');\nif(typeof Object.assign !== 'function') error('Please polyfill Object.assign to use Fluture');\nif(typeof Array.isArray !== 'function') error('Please polyfill Array.isArray to use Fluture');\n\nFuture.of = Future[FL.of] = of;\nFuture.chainRec = Future[FL.chainRec] = chainRec;\nFuture.reject = reject;\nFuture.ap = ap;\nFuture.map = map;\nFuture.bimap = bimap;\nFuture.chain = chain;\n\nvar Par = concurrify(Future, never, race, parallelAp);\nPar.of = Par[FL.of];\nPar.zero = Par[FL.zero];\nPar.map = map;\nPar.ap = ap;\nPar.alt = alt;\n\nfunction isParallel(x){\n  return x instanceof Par || type(x) === Par['@@type'];\n}\n\nfunction seq(par){\n  if(!isParallel(par)) invalidArgument('Future.seq', 0, 'to be a Par', par);\n  return par.sequential;\n}\n\n\n\n\nvar Fluture = Object.freeze({\n\tFuture: Future,\n\tdefault: Future,\n\tPar: Par,\n\tisParallel: isParallel,\n\tseq: seq,\n\tisFuture: isFuture,\n\treject: reject,\n\tof: of,\n\tnever: never,\n\tisNever: isNever,\n\tafter: after,\n\trejectAfter: rejectAfter,\n\tattempt: attempt,\n\ttry: attempt,\n\tcache: cache,\n\tencase: encase,\n\tencase2: encase2,\n\tencase3: encase3,\n\tencaseN: encaseN,\n\tencaseN2: encaseN2,\n\tencaseN3: encaseN3,\n\tencaseP: encaseP,\n\tencaseP2: encaseP2,\n\tencaseP3: encaseP3,\n\tgo: go,\n\tdo: go,\n\thook: hook,\n\tnode: node,\n\tparallel: parallel,\n\ttryP: tryP,\n\tap: ap,\n\talt: alt,\n\tmap: map,\n\tbimap: bimap,\n\tchain: chain,\n\tmapRej: mapRej,\n\tchainRej: chainRej,\n\tlastly: lastly,\n\tfinally: lastly,\n\tand: and,\n\tboth: both,\n\tor: or,\n\trace: race,\n\tswap: swap,\n\tfold: fold,\n\tdone: done,\n\tfork: fork,\n\tpromise: promise,\n\tvalue: value,\n\textractLeft: extractLeft,\n\textractRight: extractRight\n});\n\nvar index_cjs = Object.assign(Future, Fluture);\n\nreturn index_cjs;\n\n})));\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","(function(f) {\n\n  'use strict';\n\n  /*istanbul ignore next*/\n  if(typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  }else{\n    self.inspectf = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  function checkn(n) {\n    if(typeof n !== 'number') {\n      throw new TypeError(\n        'inspectf expects its first argument to be a number'\n      );\n    }\n  }\n\n  function checkf(f) {\n    if(typeof f !== 'function') {\n      throw new TypeError(\n        'inspectf expects its second argument to be a function'\n      );\n    }\n  }\n\n  var RSPACE = /^ */;\n  var RCODE = /\\s*[^\\s]/;\n  var RTABS = /\\t/g;\n  var REOL = /\\n\\r?/;\n\n  function isCode(line) {\n    return RCODE.test(line);\n  }\n\n  function getPadding(line) {\n    return line.match(RSPACE)[0].length;\n  }\n\n  function guessIndentation(lines) {\n    var filtered = lines.filter(isCode);\n    var paddings = filtered.map(getPadding);\n    var depth = paddings.reduce(Math.min, Infinity);\n    var tabsize = paddings\n    .map(function(x) { return x - depth; })\n    .find(function(x) { return x > 1; }) || 2;\n    return {depth: depth, tabsize: tabsize};\n  }\n\n  function pad(n) {\n    return (new Array(n + 1)).join(' ');\n  }\n\n  function show(f, indentation) {\n    return f.toString().replace(RTABS, indentation);\n  }\n\n  function toLines(s) {\n    return s.split(REOL);\n  }\n\n  function fixIndentation(lines, indentation) {\n    var info = guessIndentation(lines.slice(1));\n    var RPAD = new RegExp(pad(info.tabsize), 'g');\n    return lines.map(function(line) {\n      return line.slice(Math.min(info.depth, getPadding(line)))\n      .replace(RPAD, '\\t').replace(RTABS, indentation);\n    }).join('\\n');\n  }\n\n  return function inspectf(n, f) {\n    checkn(n);\n\n    if(arguments.length < 2) {\n      return function inspectf$partial(f) { return inspectf(n, f); };\n    }\n\n    checkf(f);\n    if(f.toString !== Function.prototype.toString) { return f.toString(); }\n    var i = pad(n), shown = show(f, i), lines = toLines(shown, i);\n    if(lines.length < 2) { return shown; }\n    return fixIndentation(lines, i);\n  };\n\n}));\n","'use strict';\n\n/**\n * Custom implementation of a double ended queue.\n */\nfunction Denque(array) {\n  this._head = 0;\n  this._tail = 0;\n  this._capacityMask = 0x3;\n  this._list = new Array(4);\n  if (Array.isArray(array)) {\n    this._fromArray(array);\n  }\n}\n\n/**\n * -------------\n *  PUBLIC API\n * -------------\n */\n\n/**\n * Returns the item at the specified index from the list.\n * 0 is the first element, 1 is the second, and so on...\n * Elements at negative values are that many from the end: -1 is one before the end\n * (the last element), -2 is two before the end (one before last), etc.\n * @param index\n * @returns {*}\n */\nDenque.prototype.peekAt = function peekAt(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var len = this.size();\n  if (i >= len || i < -len) return undefined;\n  if (i < 0) i += len;\n  i = (this._head + i) & this._capacityMask;\n  return this._list[i];\n};\n\n/**\n * Alias for peakAt()\n * @param i\n * @returns {*}\n */\nDenque.prototype.get = function get(i) {\n  return this.peekAt(i);\n};\n\n/**\n * Returns the first item in the list without removing it.\n * @returns {*}\n */\nDenque.prototype.peek = function peek() {\n  if (this._head === this._tail) return undefined;\n  return this._list[this._head];\n};\n\n/**\n * Alias for peek()\n * @returns {*}\n */\nDenque.prototype.peekFront = function peekFront() {\n  return this.peek();\n};\n\n/**\n * Returns the item that is at the back of the queue without removing it.\n * Uses peekAt(-1)\n */\nDenque.prototype.peekBack = function peekBack() {\n  return this.peekAt(-1);\n};\n\n/**\n * Returns the current length of the queue\n * @return {Number}\n */\nObject.defineProperty(Denque.prototype, 'length', {\n  get: function length() {\n    return this.size();\n  }\n});\n\n/**\n * Return the number of items on the list, or 0 if empty.\n * @returns {number}\n */\nDenque.prototype.size = function size() {\n  if (this._head === this._tail) return 0;\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Add an item at the beginning of the list.\n * @param item\n */\nDenque.prototype.unshift = function unshift(item) {\n  if (item === undefined) return this.size();\n  var len = this._list.length;\n  this._head = (this._head - 1 + len) & this._capacityMask;\n  this._list[this._head] = item;\n  if (this._tail === this._head) this._growArray();\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the first item on the list,\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.shift = function shift() {\n  var head = this._head;\n  if (head === this._tail) return undefined;\n  var item = this._list[head];\n  this._list[head] = undefined;\n  this._head = (head + 1) & this._capacityMask;\n  if (head < 2 && this._tail > 10000 && this._tail <= this._list.length >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Add an item to the bottom of the list.\n * @param item\n */\nDenque.prototype.push = function push(item) {\n  if (item === undefined) return this.size();\n  var tail = this._tail;\n  this._list[tail] = item;\n  this._tail = (tail + 1) & this._capacityMask;\n  if (this._tail === this._head) {\n    this._growArray();\n  }\n\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the last item on the list.\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.pop = function pop() {\n  var tail = this._tail;\n  if (tail === this._head) return undefined;\n  var len = this._list.length;\n  this._tail = (tail - 1 + len) & this._capacityMask;\n  var item = this._list[this._tail];\n  this._list[this._tail] = undefined;\n  if (this._head < 2 && tail > 10000 && tail <= len >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Remove and return the item at the specified index from the list.\n * Returns undefined if the list is empty.\n * @param index\n * @returns {*}\n */\nDenque.prototype.removeOne = function removeOne(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size) return void 0;\n  if (i < 0) i += size;\n  i = (this._head + i) & this._capacityMask;\n  var item = this._list[i];\n  var k;\n  if (index < size / 2) {\n    for (k = index; k > 0; k--) {\n      this._list[i] = this._list[i = (i - 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._head = (this._head + 1 + len) & this._capacityMask;\n  } else {\n    for (k = size - 1 - index; k > 0; k--) {\n      this._list[i] = this._list[i = ( i + 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._tail = (this._tail - 1 + len) & this._capacityMask;\n  }\n  return item;\n};\n\n/**\n * Remove number of items from the specified index from the list.\n * Returns array of removed items.\n * Returns undefined if the list is empty.\n * @param index\n * @param count\n * @returns {array}\n */\nDenque.prototype.remove = function remove(index, count) {\n  var i = index;\n  var removed;\n  var del_count = count;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size || count < 1) return void 0;\n  if (i < 0) i += size;\n  if (count === 1 || !count) {\n    removed = new Array(1);\n    removed[0] = this.removeOne(i);\n    return removed;\n  }\n  if (i === 0 && i + count >= size) {\n    removed = this.toArray();\n    this.clear();\n    return removed;\n  }\n  if (i + count > size) count = size - i;\n  var k;\n  removed = new Array(count);\n  for (k = 0; k < count; k++) {\n    removed[k] = this._list[(this._head + i + k) & this._capacityMask];\n  }\n  i = (this._head + i) & this._capacityMask;\n  if (index + count === size) {\n    this._tail = (this._tail - count + len) & this._capacityMask;\n    for (k = count; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (index === 0) {\n    this._head = (this._head + count + len) & this._capacityMask;\n    for (k = count - 1; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (index < size / 2) {\n    this._head = (this._head + index + count + len) & this._capacityMask;\n    for (k = index; k > 0; k--) {\n      this.unshift(this._list[i = (i - 1 + len) & this._capacityMask]);\n    }\n    i = (this._head - 1 + len) & this._capacityMask;\n    while (del_count > 0) {\n      this._list[i = (i - 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n  } else {\n    this._tail = i;\n    i = (i + count + len) & this._capacityMask;\n    for (k = size - (count + index); k > 0; k--) {\n      this.push(this._list[i++]);\n    }\n    i = this._tail;\n    while (del_count > 0) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n  }\n  if (this._head < 2 && this._tail > 10000 && this._tail <= len >>> 2) this._shrinkArray();\n  return removed;\n};\n\n/**\n * Native splice implementation.\n * Remove number of items from the specified index from the list and/or add new elements.\n * Returns array of removed items or empty array if count == 0.\n * Returns undefined if the list is empty.\n *\n * @param index\n * @param count\n * @param {...*} [elements]\n * @returns {array}\n */\nDenque.prototype.splice = function splice(index, count) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var size = this.size();\n  if (i < 0) i += size;\n  if (i > size) return void 0;\n  if (arguments.length > 2) {\n    var k;\n    var temp;\n    var removed;\n    var arg_len = arguments.length;\n    var len = this._list.length;\n    var arguments_index = 2;\n    if (!size || i < size / 2) {\n      temp = new Array(i);\n      for (k = 0; k < i; k++) {\n        temp[k] = this._list[(this._head + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i > 0) {\n          this._head = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._head = (this._head + i + len) & this._capacityMask;\n      }\n      while (arg_len > arguments_index) {\n        this.unshift(arguments[--arg_len]);\n      }\n      for (k = i; k > 0; k--) {\n        this.unshift(temp[k - 1]);\n      }\n    } else {\n      temp = new Array(size - (i + count));\n      var leng = temp.length;\n      for (k = 0; k < leng; k++) {\n        temp[k] = this._list[(this._head + i + count + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i != size) {\n          this._tail = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._tail = (this._tail - leng + len) & this._capacityMask;\n      }\n      while (arguments_index < arg_len) {\n        this.push(arguments[arguments_index++]);\n      }\n      for (k = 0; k < leng; k++) {\n        this.push(temp[k]);\n      }\n    }\n    return removed;\n  } else {\n    return this.remove(i, count);\n  }\n};\n\n/**\n * Soft clear - does not reset capacity.\n */\nDenque.prototype.clear = function clear() {\n  this._head = 0;\n  this._tail = 0;\n};\n\n/**\n * Returns true or false whether the list is empty.\n * @returns {boolean}\n */\nDenque.prototype.isEmpty = function isEmpty() {\n  return this._head === this._tail;\n};\n\n/**\n * Returns an array of all queue items.\n * @returns {Array}\n */\nDenque.prototype.toArray = function toArray() {\n  return this._copyArray(false);\n};\n\n/**\n * -------------\n *   INTERNALS\n * -------------\n */\n\n/**\n * Fills the queue with items from an array\n * For use in the constructor\n * @param array\n * @private\n */\nDenque.prototype._fromArray = function _fromArray(array) {\n  for (var i = 0; i < array.length; i++) this.push(array[i]);\n};\n\n/**\n *\n * @param fullCopy\n * @returns {Array}\n * @private\n */\nDenque.prototype._copyArray = function _copyArray(fullCopy) {\n  var newArray = [];\n  var list = this._list;\n  var len = list.length;\n  var i;\n  if (fullCopy || this._head > this._tail) {\n    for (i = this._head; i < len; i++) newArray.push(list[i]);\n    for (i = 0; i < this._tail; i++) newArray.push(list[i]);\n  } else {\n    for (i = this._head; i < this._tail; i++) newArray.push(list[i]);\n  }\n  return newArray;\n};\n\n/**\n * Grows the internal list array.\n * @private\n */\nDenque.prototype._growArray = function _growArray() {\n  if (this._head) {\n    // copy existing data, head to end, then beginning to tail.\n    this._list = this._copyArray(true);\n    this._head = 0;\n  }\n\n  // head is at 0 and array is now full, safe to extend\n  this._tail = this._list.length;\n\n  this._list.length *= 2;\n  this._capacityMask = (this._capacityMask << 1) | 1;\n};\n\n/**\n * Shrinks the internal list array.\n * @private\n */\nDenque.prototype._shrinkArray = function _shrinkArray() {\n  this._list.length >>>= 1;\n  this._capacityMask >>>= 1;\n};\n\n\nmodule.exports = Denque;\n","(function(f){\n\n  'use strict';\n\n  /*istanbul ignore next*/\n  if(typeof module === 'object' && typeof module.exports === 'object'){\n    module.exports = f(require('sanctuary-type-classes'), require('sanctuary-type-identifiers'));\n  }else{\n    self.concurrify = f(self.sanctuaryTypeClasses, self.sanctuaryTypeIdentifiers);\n  }\n\n}(function(Z, type){\n\n  'use strict';\n\n  var $alt = 'fantasy-land/alt';\n  var $ap = 'fantasy-land/ap';\n  var $map = 'fantasy-land/map';\n  var $of = 'fantasy-land/of';\n  var $zero = 'fantasy-land/zero';\n  var $$type = '@@type';\n  var ordinal = ['first', 'second', 'third', 'fourth', 'fifth'];\n\n  function isFunction(f){\n    return typeof f === 'function';\n  }\n\n  function isBinary(f){\n    return f.length >= 2;\n  }\n\n  function isApplicativeRepr(Repr){\n    try{\n      return Z.Applicative.test(Z.of(Repr));\n    }catch(_){\n      return false;\n    }\n  }\n\n  function invalidArgument(it, at, expected, actual){\n    throw new TypeError(\n      it\n      + ' expects its '\n      + ordinal[at]\n      + ' argument to '\n      + expected\n      + '\\n  Actual: '\n      + Z.toString(actual)\n    );\n  }\n\n  function invalidContext(it, actual, an){\n    throw new TypeError(\n      it + ' was invoked outside the context of a ' + an + '. \\n  Called on: ' + Z.toString(actual)\n    );\n  }\n\n  //       getTypeIdentifier :: TypeRepresentative -> TypeIdentifier\n  function getTypeIdentifier(Repr){\n    return Repr[$$type] || Repr.name || 'Anonymous';\n  }\n\n  //       generateTypeIdentifier :: TypeIdentifier -> TypeIdentifier\n  function generateTypeIdentifier(identifier){\n    var o = type.parse(identifier);\n    return (o.namespace || 'concurrify') + '/Concurrent' + o.name + '@' + o.version;\n  }\n\n  //concurrify :: Applicative m\n  //           => (TypeRep m, m a, (m a, m a) -> m a, (m a, m (a -> b)) -> m b)\n  //           -> Concurrently m\n  return function concurrify(Repr, zero, alt, ap){\n\n    var INNERTYPE = getTypeIdentifier(Repr);\n    var OUTERTYPE = generateTypeIdentifier(INNERTYPE);\n    var INNERNAME = type.parse(INNERTYPE).name;\n    var OUTERNAME = type.parse(OUTERTYPE).name;\n\n    function Concurrently(sequential){\n      this.sequential = sequential;\n    }\n\n    function isInner(x){\n      return x instanceof Repr\n      || (Boolean(x) && x.constructor === Repr)\n      || type(x) === Repr[$$type];\n    }\n\n    function isOuter(x){\n      return x instanceof Concurrently\n      || (Boolean(x) && x.constructor === Concurrently)\n      || type(x) === OUTERTYPE;\n    }\n\n    function construct(x){\n      if(!isInner(x)) invalidArgument(OUTERNAME, 0, 'be of type \"' + INNERNAME + '\"', x);\n      return new Concurrently(x);\n    }\n\n    if(!isApplicativeRepr(Repr)) invalidArgument('concurrify', 0, 'represent an Applicative', Repr);\n    if(!isInner(zero)) invalidArgument('concurrify', 1, 'be of type \"' + INNERNAME + '\"', zero);\n    if(!isFunction(alt)) invalidArgument('concurrify', 2, 'be a function', alt);\n    if(!isBinary(alt)) invalidArgument('concurrify', 2, 'be binary', alt);\n    if(!isFunction(ap)) invalidArgument('concurrify', 3, 'be a function', ap);\n    if(!isBinary(ap)) invalidArgument('concurrify', 3, 'be binary', ap);\n\n    var proto = Concurrently.prototype = construct.prototype = {constructor: construct};\n\n    construct[$$type] = OUTERTYPE;\n\n    var mzero = new Concurrently(zero);\n\n    construct[$zero] = function Concurrently$zero(){\n      return mzero;\n    };\n\n    construct[$of] = function Concurrently$of(value){\n      return new Concurrently(Z.of(Repr, value));\n    };\n\n    proto[$map] = function Concurrently$map(mapper){\n      if(!isOuter(this)) invalidContext(OUTERNAME + '#map', this, OUTERNAME);\n      if(!isFunction(mapper)) invalidArgument(OUTERNAME + '#map', 0, 'be a function', mapper);\n      return new Concurrently(Z.map(mapper, this.sequential));\n    };\n\n    proto[$ap] = function Concurrently$ap(m){\n      if(!isOuter(this)) invalidContext(OUTERNAME + '#ap', this, OUTERNAME);\n      if(!isOuter(m)) invalidArgument(OUTERNAME + '#ap', 0, 'be a ' + OUTERNAME, m);\n      return new Concurrently(ap(this.sequential, m.sequential));\n    };\n\n    proto[$alt] = function Concurrently$alt(m){\n      if(!isOuter(this)) invalidContext(OUTERNAME + '#alt', this, OUTERNAME);\n      if(!isOuter(m)) invalidArgument(OUTERNAME + '#alt', 0, 'be a ' + OUTERNAME, m);\n      return new Concurrently(alt(this.sequential, m.sequential));\n    };\n\n    proto.toString = function Concurrently$toString(){\n      if(!isOuter(this)) invalidContext(OUTERNAME + '#toString', this, OUTERNAME);\n      return OUTERNAME + '(' + Z.toString(this.sequential) + ')';\n    };\n\n    return construct;\n\n  };\n\n}));\n","export interface Maybe <A>{\r\n    value0?:A; \r\n}\r\n\r\n\r\nexport const maybe = <A>(nothingFn: () => any) => (justFn:(value:A) => any) => (m:Maybe<A>):any => \r\n    m.value0 === undefined\r\n        ?   nothingFn()\r\n        :   justFn(m.value0);\r\n\r\n\r\nexport const getMaybeValue = maybe (() => undefined) (value => value);\r\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Data_EuclideanRing = require(\"../Data.EuclideanRing/index.js\");\nvar Data_Function = require(\"../Data.Function/index.js\");\nvar Data_Maybe = require(\"../Data.Maybe/index.js\");\nvar Data_Number_Format = require(\"../Data.Number.Format/index.js\");\nvar Data_Ring = require(\"../Data.Ring/index.js\");\nvar $$Math = require(\"../Math/index.js\");\nvar Prelude = require(\"../Prelude/index.js\");\nvar updateTick = function (startTime) {\n    return function (now) {\n        return function (mTick) {\n            return Data_Maybe.maybe({\n                lastTime: now,\n                deltaTime: 0.0,\n                elapsedTime: \"0\"\n            })(function (tick) {\n                return {\n                    lastTime: now,\n                    deltaTime: now - tick.lastTime,\n                    elapsedTime: Data_Number_Format.toString($$Math.floor((now - startTime) / 1000.0))\n                };\n            })(mTick);\n        };\n    };\n};\nvar updateState = function (now) {\n    return function (state) {\n        return {\n            startTime: state.startTime,\n            tick: Data_Maybe.Just.create(updateTick(state.startTime)(now)(state.tick))\n        };\n    };\n};\nvar getInitialState = function (now) {\n    return {\n        startTime: now,\n        tick: Data_Maybe.Nothing.value\n    };\n};\nmodule.exports = {\n    getInitialState: getInitialState,\n    updateState: updateState,\n    updateTick: updateTick\n};\n","\"use strict\";\n\nexports.intDegree = function (x) {\n  return Math.min(Math.abs(x), 2147483647);\n};\n\n// See the Euclidean definition in\n// https://en.m.wikipedia.org/wiki/Modulo_operation.\nexports.intDiv = function (x) {\n  return function (y) {\n    if (y === 0) return 0;\n    return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);\n  };\n};\n\nexports.intMod = function (x) {\n  return function (y) {\n    if (y === 0) return 0;\n    var yy = Math.abs(y);\n    return ((x % yy) + yy) % yy;\n  };\n};\n\nexports.numDiv = function (n1) {\n  return function (n2) {\n    return n1 / n2;\n  };\n};\n","\"use strict\";\n\nexports.boolConj = function (b1) {\n  return function (b2) {\n    return b1 && b2;\n  };\n};\n\nexports.boolDisj = function (b1) {\n  return function (b2) {\n    return b1 || b2;\n  };\n};\n\nexports.boolNot = function (b) {\n  return !b;\n};\n","\"use strict\";\n\n// module Data.Symbol\n\nexports.unsafeCoerce = function (arg) {\n  return arg;\n};\n\n","\"use strict\";\n\nexports.unit = {};\n","\"use strict\";\n\nexports.showIntImpl = function (n) {\n  return n.toString();\n};\n\nexports.showNumberImpl = function (n) {\n  var str = n.toString();\n  return isNaN(str + \".0\") ? str : str + \".0\";\n};\n\nexports.showCharImpl = function (c) {\n  var code = c.charCodeAt(0);\n  if (code < 0x20 || code === 0x7F) {\n    switch (c) {\n      case \"\\x07\": return \"'\\\\a'\";\n      case \"\\b\": return \"'\\\\b'\";\n      case \"\\f\": return \"'\\\\f'\";\n      case \"\\n\": return \"'\\\\n'\";\n      case \"\\r\": return \"'\\\\r'\";\n      case \"\\t\": return \"'\\\\t'\";\n      case \"\\v\": return \"'\\\\v'\";\n    }\n    return \"'\\\\\" + code.toString(10) + \"'\";\n  }\n  return c === \"'\" || c === \"\\\\\" ? \"'\\\\\" + c + \"'\" : \"'\" + c + \"'\";\n};\n\nexports.showStringImpl = function (s) {\n  var l = s.length;\n  return \"\\\"\" + s.replace(\n    /[\\0-\\x1F\\x7F\"\\\\]/g, // eslint-disable-line no-control-regex\n    function (c, i) {\n      switch (c) {\n        case \"\\\"\":\n        case \"\\\\\":\n          return \"\\\\\" + c;\n        case \"\\x07\": return \"\\\\a\";\n        case \"\\b\": return \"\\\\b\";\n        case \"\\f\": return \"\\\\f\";\n        case \"\\n\": return \"\\\\n\";\n        case \"\\r\": return \"\\\\r\";\n        case \"\\t\": return \"\\\\t\";\n        case \"\\v\": return \"\\\\v\";\n      }\n      var k = i + 1;\n      var empty = k < l && s[k] >= \"0\" && s[k] <= \"9\" ? \"\\\\&\" : \"\";\n      return \"\\\\\" + c.charCodeAt(0).toString(10) + empty;\n    }\n  ) + \"\\\"\";\n};\n\nexports.showArrayImpl = function (f) {\n  return function (xs) {\n    var ss = [];\n    for (var i = 0, l = xs.length; i < l; i++) {\n      ss[i] = f(xs[i]);\n    }\n    return \"[\" + ss.join(\",\") + \"]\";\n  };\n};\n\nexports.cons = function (head) {\n  return function (tail) {\n    return [head].concat(tail);\n  };\n};\n\nexports.join = function (separator) {\n  return function (xs) {\n    return xs.join(separator);\n  };\n};\n","\"use strict\";\n\nexports.unsafeHas = function (label) {\n  return function (rec) {\n    return {}.hasOwnProperty.call(rec, label);\n  };\n};\n\nexports.unsafeGet = function (label) {\n  return function (rec) {\n    return rec[label];\n  };\n};\n\nexports.unsafeSet = function (label) {\n  return function (value) {\n    return function (rec) {\n      var copy = {};\n      for (var key in rec) {\n        if ({}.hasOwnProperty.call(rec, key)) {\n          copy[key] = rec[key];\n        }\n      }\n      copy[label] = value;\n      return copy;\n    };\n  };\n};\n\nexports.unsafeDelete = function (label) {\n  return function (rec) {\n    var copy = {};\n    for (var key in rec) {\n      if (key !== label && {}.hasOwnProperty.call(rec, key)) {\n        copy[key] = rec[key];\n      }\n    }\n    return copy;\n  };\n};\n","\"use strict\";\n\nexports.intSub = function (x) {\n  return function (y) {\n    /* jshint bitwise: false */\n    return x - y | 0;\n  };\n};\n\nexports.numSub = function (n1) {\n  return function (n2) {\n    return n1 - n2;\n  };\n};\n","\"use strict\";\n\nexports.intAdd = function (x) {\n  return function (y) {\n    /* jshint bitwise: false */\n    return x + y | 0;\n  };\n};\n\nexports.intMul = function (x) {\n  return function (y) {\n    /* jshint bitwise: false */\n    return x * y | 0;\n  };\n};\n\nexports.numAdd = function (n1) {\n  return function (n2) {\n    return n1 + n2;\n  };\n};\n\nexports.numMul = function (n1) {\n  return function (n2) {\n    return n1 * n2;\n  };\n};\n","\"use strict\";\n\nexports.refEq = function (r1) {\n  return function (r2) {\n    return r1 === r2;\n  };\n};\n\nexports.eqArrayImpl = function (f) {\n  return function (xs) {\n    return function (ys) {\n      if (xs.length !== ys.length) return false;\n      for (var i = 0; i < xs.length; i++) {\n        if (!f(xs[i])(ys[i])) return false;\n      }\n      return true;\n    };\n  };\n};\n","\"use strict\";\n\nexports.ordArrayImpl = function (f) {\n  return function (xs) {\n    return function (ys) {\n      var i = 0;\n      var xlen = xs.length;\n      var ylen = ys.length;\n      while (i < xlen && i < ylen) {\n        var x = xs[i];\n        var y = ys[i];\n        var o = f(x)(y);\n        if (o !== 0) {\n          return o;\n        }\n        i++;\n      }\n      if (xlen === ylen) {\n        return 0;\n      } else if (xlen > ylen) {\n        return -1;\n      } else {\n        return 1;\n      }\n    };\n  };\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nvar Data_Ordering = require(\"../Data.Ordering/index.js\");\nvar unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);\nmodule.exports = {\n    unsafeCompare: unsafeCompare\n};\n","\"use strict\";\n\nexports.unsafeCompareImpl = function (lt) {\n  return function (eq) {\n    return function (gt) {\n      return function (x) {\n        return function (y) {\n          return x < y ? lt : x === y ? eq : gt;\n        };\n      };\n    };\n  };\n};\n","\"use strict\";\n\nexports.concatString = function (s1) {\n  return function (s2) {\n    return s1 + s2;\n  };\n};\n\nexports.concatArray = function (xs) {\n  return function (ys) {\n    if (xs.length === 0) return ys;\n    if (ys.length === 0) return xs;\n    return xs.concat(ys);\n  };\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Control_Alt = require(\"../Control.Alt/index.js\");\nvar Control_Alternative = require(\"../Control.Alternative/index.js\");\nvar Control_Applicative = require(\"../Control.Applicative/index.js\");\nvar Control_Apply = require(\"../Control.Apply/index.js\");\nvar Control_Bind = require(\"../Control.Bind/index.js\");\nvar Control_Category = require(\"../Control.Category/index.js\");\nvar Control_Extend = require(\"../Control.Extend/index.js\");\nvar Control_Monad = require(\"../Control.Monad/index.js\");\nvar Control_MonadZero = require(\"../Control.MonadZero/index.js\");\nvar Control_Plus = require(\"../Control.Plus/index.js\");\nvar Data_Bounded = require(\"../Data.Bounded/index.js\");\nvar Data_Eq = require(\"../Data.Eq/index.js\");\nvar Data_Function = require(\"../Data.Function/index.js\");\nvar Data_Functor = require(\"../Data.Functor/index.js\");\nvar Data_Functor_Invariant = require(\"../Data.Functor.Invariant/index.js\");\nvar Data_Monoid = require(\"../Data.Monoid/index.js\");\nvar Data_Ord = require(\"../Data.Ord/index.js\");\nvar Data_Ordering = require(\"../Data.Ordering/index.js\");\nvar Data_Semigroup = require(\"../Data.Semigroup/index.js\");\nvar Data_Show = require(\"../Data.Show/index.js\");\nvar Data_Unit = require(\"../Data.Unit/index.js\");\nvar Prelude = require(\"../Prelude/index.js\");\nvar Nothing = (function () {\n    function Nothing() {\n\n    };\n    Nothing.value = new Nothing();\n    return Nothing;\n})();\nvar Just = (function () {\n    function Just(value0) {\n        this.value0 = value0;\n    };\n    Just.create = function (value0) {\n        return new Just(value0);\n    };\n    return Just;\n})();\nvar showMaybe = function (dictShow) {\n    return new Data_Show.Show(function (v) {\n        if (v instanceof Just) {\n            return \"(Just \" + (Data_Show.show(dictShow)(v.value0) + \")\");\n        };\n        if (v instanceof Nothing) {\n            return \"Nothing\";\n        };\n        throw new Error(\"Failed pattern match at Data.Maybe line 206, column 1 - line 206, column 47: \" + [ v.constructor.name ]);\n    });\n};\nvar semigroupMaybe = function (dictSemigroup) {\n    return new Data_Semigroup.Semigroup(function (v) {\n        return function (v1) {\n            if (v instanceof Nothing) {\n                return v1;\n            };\n            if (v1 instanceof Nothing) {\n                return v;\n            };\n            if (v instanceof Just && v1 instanceof Just) {\n                return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe line 175, column 1 - line 175, column 62: \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    });\n};\nvar optional = function (dictAlternative) {\n    return function (a) {\n        return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Just.create)(a))(Control_Applicative.pure(dictAlternative.Applicative0())(Nothing.value));\n    };\n};\nvar monoidMaybe = function (dictSemigroup) {\n    return new Data_Monoid.Monoid(function () {\n        return semigroupMaybe(dictSemigroup);\n    }, Nothing.value);\n};\nvar maybe$prime = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Nothing) {\n                return v(Data_Unit.unit);\n            };\n            if (v2 instanceof Just) {\n                return v1(v2.value0);\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe line 231, column 1 - line 231, column 62: \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar maybe = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Nothing) {\n                return v;\n            };\n            if (v2 instanceof Just) {\n                return v1(v2.value0);\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe line 218, column 1 - line 218, column 51: \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar isNothing = maybe(true)(Data_Function[\"const\"](false));\nvar isJust = maybe(false)(Data_Function[\"const\"](true));\nvar functorMaybe = new Data_Functor.Functor(function (v) {\n    return function (v1) {\n        if (v1 instanceof Just) {\n            return new Just(v(v1.value0));\n        };\n        return Nothing.value;\n    };\n});\nvar invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));\nvar fromMaybe$prime = function (a) {\n    return maybe$prime(a)(Control_Category.identity(Control_Category.categoryFn));\n};\nvar fromMaybe = function (a) {\n    return maybe(a)(Control_Category.identity(Control_Category.categoryFn));\n};\nvar fromJust = function (dictPartial) {\n    return function (v) {\n        var $__unused = function (dictPartial1) {\n            return function ($dollar35) {\n                return $dollar35;\n            };\n        };\n        return $__unused(dictPartial)((function () {\n            if (v instanceof Just) {\n                return v.value0;\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe line 269, column 1 - line 269, column 46: \" + [ v.constructor.name ]);\n        })());\n    };\n};\nvar extendMaybe = new Control_Extend.Extend(function () {\n    return functorMaybe;\n}, function (v) {\n    return function (v1) {\n        if (v1 instanceof Nothing) {\n            return Nothing.value;\n        };\n        return new Just(v(v1));\n    };\n});\nvar eqMaybe = function (dictEq) {\n    return new Data_Eq.Eq(function (x) {\n        return function (y) {\n            if (x instanceof Nothing && y instanceof Nothing) {\n                return true;\n            };\n            if (x instanceof Just && y instanceof Just) {\n                return Data_Eq.eq(dictEq)(x.value0)(y.value0);\n            };\n            return false;\n        };\n    });\n};\nvar ordMaybe = function (dictOrd) {\n    return new Data_Ord.Ord(function () {\n        return eqMaybe(dictOrd.Eq0());\n    }, function (x) {\n        return function (y) {\n            if (x instanceof Nothing && y instanceof Nothing) {\n                return Data_Ordering.EQ.value;\n            };\n            if (x instanceof Nothing) {\n                return Data_Ordering.LT.value;\n            };\n            if (y instanceof Nothing) {\n                return Data_Ordering.GT.value;\n            };\n            if (x instanceof Just && y instanceof Just) {\n                return Data_Ord.compare(dictOrd)(x.value0)(y.value0);\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe line 195, column 8 - line 195, column 51: \" + [ x.constructor.name, y.constructor.name ]);\n        };\n    });\n};\nvar eq1Maybe = new Data_Eq.Eq1(function (dictEq) {\n    return Data_Eq.eq(eqMaybe(dictEq));\n});\nvar ord1Maybe = new Data_Ord.Ord1(function () {\n    return eq1Maybe;\n}, function (dictOrd) {\n    return Data_Ord.compare(ordMaybe(dictOrd));\n});\nvar boundedMaybe = function (dictBounded) {\n    return new Data_Bounded.Bounded(function () {\n        return ordMaybe(dictBounded.Ord0());\n    }, Nothing.value, new Just(Data_Bounded.top(dictBounded)));\n};\nvar applyMaybe = new Control_Apply.Apply(function () {\n    return functorMaybe;\n}, function (v) {\n    return function (v1) {\n        if (v instanceof Just) {\n            return Data_Functor.map(functorMaybe)(v.value0)(v1);\n        };\n        if (v instanceof Nothing) {\n            return Nothing.value;\n        };\n        throw new Error(\"Failed pattern match at Data.Maybe line 67, column 1 - line 67, column 35: \" + [ v.constructor.name, v1.constructor.name ]);\n    };\n});\nvar bindMaybe = new Control_Bind.Bind(function () {\n    return applyMaybe;\n}, function (v) {\n    return function (v1) {\n        if (v instanceof Just) {\n            return v1(v.value0);\n        };\n        if (v instanceof Nothing) {\n            return Nothing.value;\n        };\n        throw new Error(\"Failed pattern match at Data.Maybe line 126, column 1 - line 126, column 33: \" + [ v.constructor.name, v1.constructor.name ]);\n    };\n});\nvar applicativeMaybe = new Control_Applicative.Applicative(function () {\n    return applyMaybe;\n}, Just.create);\nvar monadMaybe = new Control_Monad.Monad(function () {\n    return applicativeMaybe;\n}, function () {\n    return bindMaybe;\n});\nvar altMaybe = new Control_Alt.Alt(function () {\n    return functorMaybe;\n}, function (v) {\n    return function (v1) {\n        if (v instanceof Nothing) {\n            return v1;\n        };\n        return v;\n    };\n});\nvar plusMaybe = new Control_Plus.Plus(function () {\n    return altMaybe;\n}, Nothing.value);\nvar alternativeMaybe = new Control_Alternative.Alternative(function () {\n    return applicativeMaybe;\n}, function () {\n    return plusMaybe;\n});\nvar monadZeroMaybe = new Control_MonadZero.MonadZero(function () {\n    return alternativeMaybe;\n}, function () {\n    return monadMaybe;\n});\nmodule.exports = {\n    Nothing: Nothing,\n    Just: Just,\n    maybe: maybe,\n    \"maybe'\": maybe$prime,\n    fromMaybe: fromMaybe,\n    \"fromMaybe'\": fromMaybe$prime,\n    isJust: isJust,\n    isNothing: isNothing,\n    fromJust: fromJust,\n    optional: optional,\n    functorMaybe: functorMaybe,\n    applyMaybe: applyMaybe,\n    applicativeMaybe: applicativeMaybe,\n    altMaybe: altMaybe,\n    plusMaybe: plusMaybe,\n    alternativeMaybe: alternativeMaybe,\n    bindMaybe: bindMaybe,\n    monadMaybe: monadMaybe,\n    monadZeroMaybe: monadZeroMaybe,\n    extendMaybe: extendMaybe,\n    invariantMaybe: invariantMaybe,\n    semigroupMaybe: semigroupMaybe,\n    monoidMaybe: monoidMaybe,\n    eqMaybe: eqMaybe,\n    eq1Maybe: eq1Maybe,\n    ordMaybe: ordMaybe,\n    ord1Maybe: ord1Maybe,\n    boundedMaybe: boundedMaybe,\n    showMaybe: showMaybe\n};\n","\"use strict\";\n\nexports.arrayMap = function (f) {\n  return function (arr) {\n    var l = arr.length;\n    var result = new Array(l);\n    for (var i = 0; i < l; i++) {\n      result[i] = f(arr[i]);\n    }\n    return result;\n  };\n};\n","\"use strict\";\n\nexports.arrayApply = function (fs) {\n  return function (xs) {\n    var l = fs.length;\n    var k = xs.length;\n    var result = new Array(l*k);\n    var n = 0;\n    for (var i = 0; i < l; i++) {\n      var f = fs[i];\n      for (var j = 0; j < k; j++) {\n        result[n++] = f(xs[j]);\n      }\n    }\n    return result;\n  };\n};\n","\"use strict\";\n\nexports.arrayBind = function (arr) {\n  return function (f) {\n    var result = [];\n    for (var i = 0, l = arr.length; i < l; i++) {\n      Array.prototype.push.apply(result, f(arr[i]));\n    }\n    return result;\n  };\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nvar Control_Category = require(\"../Control.Category/index.js\");\nvar Data_Functor = require(\"../Data.Functor/index.js\");\nvar Data_Semigroup = require(\"../Data.Semigroup/index.js\");\nvar Extend = function (Functor0, extend) {\n    this.Functor0 = Functor0;\n    this.extend = extend;\n};\nvar extendFn = function (dictSemigroup) {\n    return new Extend(function () {\n        return Data_Functor.functorFn;\n    }, function (f) {\n        return function (g) {\n            return function (w) {\n                return f(function (w$prime) {\n                    return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));\n                });\n            };\n        };\n    });\n};\nvar extendArray = new Extend(function () {\n    return Data_Functor.functorArray;\n}, $foreign.arrayExtend);\nvar extend = function (dict) {\n    return dict.extend;\n};\nvar extendFlipped = function (dictExtend) {\n    return function (w) {\n        return function (f) {\n            return extend(dictExtend)(f)(w);\n        };\n    };\n};\nvar duplicate = function (dictExtend) {\n    return extend(dictExtend)(Control_Category.identity(Control_Category.categoryFn));\n};\nvar composeCoKleisliFlipped = function (dictExtend) {\n    return function (f) {\n        return function (g) {\n            return function (w) {\n                return f(extend(dictExtend)(g)(w));\n            };\n        };\n    };\n};\nvar composeCoKleisli = function (dictExtend) {\n    return function (f) {\n        return function (g) {\n            return function (w) {\n                return g(extend(dictExtend)(f)(w));\n            };\n        };\n    };\n};\nmodule.exports = {\n    Extend: Extend,\n    extend: extend,\n    extendFlipped: extendFlipped,\n    composeCoKleisli: composeCoKleisli,\n    composeCoKleisliFlipped: composeCoKleisliFlipped,\n    duplicate: duplicate,\n    extendFn: extendFn,\n    extendArray: extendArray\n};\n","\"use strict\";\n\nexports.arrayExtend = function(f) {\n  return function(xs) {\n    return xs.map(function (_, i, xs) {\n      return f(xs.slice(i));\n    });\n  };\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Control_Alt = require(\"../Control.Alt/index.js\");\nvar Control_Alternative = require(\"../Control.Alternative/index.js\");\nvar Control_Applicative = require(\"../Control.Applicative/index.js\");\nvar Control_Apply = require(\"../Control.Apply/index.js\");\nvar Control_Bind = require(\"../Control.Bind/index.js\");\nvar Control_Monad = require(\"../Control.Monad/index.js\");\nvar Control_Plus = require(\"../Control.Plus/index.js\");\nvar Data_Functor = require(\"../Data.Functor/index.js\");\nvar Data_Unit = require(\"../Data.Unit/index.js\");\nvar MonadZero = function (Alternative1, Monad0) {\n    this.Alternative1 = Alternative1;\n    this.Monad0 = Monad0;\n};\nvar monadZeroArray = new MonadZero(function () {\n    return Control_Alternative.alternativeArray;\n}, function () {\n    return Control_Monad.monadArray;\n});\nvar guard = function (dictMonadZero) {\n    return function (v) {\n        if (v) {\n            return Control_Applicative.pure((dictMonadZero.Alternative1()).Applicative0())(Data_Unit.unit);\n        };\n        if (!v) {\n            return Control_Plus.empty((dictMonadZero.Alternative1()).Plus1());\n        };\n        throw new Error(\"Failed pattern match at Control.MonadZero line 54, column 1 - line 54, column 52: \" + [ v.constructor.name ]);\n    };\n};\nmodule.exports = {\n    MonadZero: MonadZero,\n    guard: guard,\n    monadZeroArray: monadZeroArray\n};\n","\"use strict\";\n\nexports.topInt = 2147483647;\nexports.bottomInt = -2147483648;\n\nexports.topChar = String.fromCharCode(65535);\nexports.bottomChar = String.fromCharCode(0);\n\nexports.topNumber = Number.POSITIVE_INFINITY;\nexports.bottomNumber = Number.NEGATIVE_INFINITY;\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Data_Functor = require(\"../Data.Functor/index.js\");\nvar Invariant = function (imap) {\n    this.imap = imap;\n};\nvar imapF = function (dictFunctor) {\n    return function (f) {\n        return function (v) {\n            return Data_Functor.map(dictFunctor)(f);\n        };\n    };\n};\nvar invariantArray = new Invariant(imapF(Data_Functor.functorArray));\nvar invariantFn = new Invariant(imapF(Data_Functor.functorFn));\nvar imap = function (dict) {\n    return dict.imap;\n};\nmodule.exports = {\n    imap: imap,\n    Invariant: Invariant,\n    imapF: imapF,\n    invariantFn: invariantFn,\n    invariantArray: invariantArray\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar Data_CommutativeRing = require(\"../Data.CommutativeRing/index.js\");\nvar Data_DivisionRing = require(\"../Data.DivisionRing/index.js\");\nvar Data_EuclideanRing = require(\"../Data.EuclideanRing/index.js\");\nvar Data_Ring = require(\"../Data.Ring/index.js\");\nvar Data_Semiring = require(\"../Data.Semiring/index.js\");\nvar Field = function (DivisionRing1, EuclideanRing0) {\n    this.DivisionRing1 = DivisionRing1;\n    this.EuclideanRing0 = EuclideanRing0;\n};\nvar field = function (dictEuclideanRing) {\n    return function (dictDivisionRing) {\n        return new Field(function () {\n            return dictDivisionRing;\n        }, function () {\n            return dictEuclideanRing;\n        });\n    };\n};\nmodule.exports = {\n    Field: Field,\n    field: field\n};\n","// Generated by purs version 0.12.0\n\"use strict\";\nmodule.exports = {};\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nvar Control_Semigroupoid = require(\"../Control.Semigroupoid/index.js\");\nvar Data_Ord = require(\"../Data.Ord/index.js\");\nvar Prelude = require(\"../Prelude/index.js\");\nvar Precision = (function () {\n    function Precision(value0) {\n        this.value0 = value0;\n    };\n    Precision.create = function (value0) {\n        return new Precision(value0);\n    };\n    return Precision;\n})();\nvar Fixed = (function () {\n    function Fixed(value0) {\n        this.value0 = value0;\n    };\n    Fixed.create = function (value0) {\n        return new Fixed(value0);\n    };\n    return Fixed;\n})();\nvar Exponential = (function () {\n    function Exponential(value0) {\n        this.value0 = value0;\n    };\n    Exponential.create = function (value0) {\n        return new Exponential(value0);\n    };\n    return Exponential;\n})();\nvar toStringWith = function (v) {\n    if (v instanceof Precision) {\n        return $foreign.toPrecisionNative(v.value0);\n    };\n    if (v instanceof Fixed) {\n        return $foreign.toFixedNative(v.value0);\n    };\n    if (v instanceof Exponential) {\n        return $foreign.toExponentialNative(v.value0);\n    };\n    throw new Error(\"Failed pattern match at Data.Number.Format line 59, column 1 - line 59, column 40: \" + [ v.constructor.name ]);\n};\nvar precision = function ($5) {\n    return Precision.create(Data_Ord.clamp(Data_Ord.ordInt)(1)(21)($5));\n};\nvar fixed = function ($6) {\n    return Fixed.create(Data_Ord.clamp(Data_Ord.ordInt)(0)(20)($6));\n};\nvar exponential = function ($7) {\n    return Exponential.create(Data_Ord.clamp(Data_Ord.ordInt)(0)(20)($7));\n};\nmodule.exports = {\n    precision: precision,\n    fixed: fixed,\n    exponential: exponential,\n    toStringWith: toStringWith,\n    toString: $foreign.toString\n};\n","function wrap(method) {\n  return function(d) {\n    return function(num) {\n      return method.apply(num, [d]);\n    };\n  };\n}\n\nexports.toPrecisionNative   = wrap(Number.prototype.toPrecision);\nexports.toFixedNative       = wrap(Number.prototype.toFixed);\nexports.toExponentialNative = wrap(Number.prototype.toExponential);\n\nexports.toString = function(num) { return num.toString(); };\n","// Generated by purs version 0.12.0\n\"use strict\";\nvar $foreign = require(\"./foreign.js\");\nmodule.exports = {\n    abs: $foreign.abs,\n    acos: $foreign.acos,\n    asin: $foreign.asin,\n    atan: $foreign.atan,\n    atan2: $foreign.atan2,\n    ceil: $foreign.ceil,\n    cos: $foreign.cos,\n    exp: $foreign.exp,\n    floor: $foreign.floor,\n    log: $foreign.log,\n    max: $foreign.max,\n    min: $foreign.min,\n    pow: $foreign.pow,\n    round: $foreign.round,\n    sin: $foreign.sin,\n    sqrt: $foreign.sqrt,\n    tan: $foreign.tan,\n    trunc: $foreign.trunc,\n    remainder: $foreign.remainder,\n    e: $foreign.e,\n    ln2: $foreign.ln2,\n    ln10: $foreign.ln10,\n    log2e: $foreign.log2e,\n    log10e: $foreign.log10e,\n    pi: $foreign.pi,\n    tau: $foreign.tau,\n    sqrt1_2: $foreign.sqrt1_2,\n    sqrt2: $foreign.sqrt2\n};\n","\"use strict\";\n\n// module Math\n\nexports.abs = Math.abs;\n\nexports.acos = Math.acos;\n\nexports.asin = Math.asin;\n\nexports.atan = Math.atan;\n\nexports.atan2 = function (y) {\n  return function (x) {\n    return Math.atan2(y, x);\n  };\n};\n\nexports.ceil = Math.ceil;\n\nexports.cos = Math.cos;\n\nexports.exp = Math.exp;\n\nexports.floor = Math.floor;\n\nexports.trunc = Math.trunc || function (n) {\n  return n < 0 ? Math.ceil(n) : Math.floor(n);\n};\n\nexports.log = Math.log;\n\nexports.max = function (n1) {\n  return function (n2) {\n    return Math.max(n1, n2);\n  };\n};\n\nexports.min = function (n1) {\n  return function (n2) {\n    return Math.min(n1, n2);\n  };\n};\n\nexports.pow = function (n) {\n  return function (p) {\n    return Math.pow(n, p);\n  };\n};\n\nexports.remainder = function (n) {\n  return function (m) {\n    return n % m;\n  };\n};\n\nexports.round = Math.round;\n\nexports.sin = Math.sin;\n\nexports.sqrt = Math.sqrt;\n\nexports.tan = Math.tan;\n\nexports.e = Math.E;\n\nexports.ln2 = Math.LN2;\n\nexports.ln10 = Math.LN10;\n\nexports.log2e = Math.LOG2E;\n\nexports.log10e = Math.LOG10E;\n\nexports.pi = Math.PI;\n\nexports.tau = 2 * Math.PI;\n\nexports.sqrt1_2 = Math.SQRT1_2;\n\nexports.sqrt2 = Math.SQRT2;\n"],"sourceRoot":""}